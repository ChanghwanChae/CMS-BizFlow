--------------------------------------------------------
--  DDL for altering the tables INCENTIVES_LE
--------------------------------------------------------
ALTER TABLE INCENTIVES_LE ADD (
	JUSTIFICATION_VER	           NUMBER(10) DEFAULT 0,
	JUSTIFICATION_CRT_NAME         VARCHAR2(100),
	JUSTIFICATION_CRT_ID           VARCHAR2(10),
	JUSTIFICATION_CRT_DATE         VARCHAR2(20),
	JUSTIFICATION_LASTMOD_NAME     VARCHAR2(100),
	JUSTIFICATION_LASTMOD_ID       VARCHAR2(10),
	JUSTIFICATION_LASTMOD_DATE     VARCHAR2(20),
	JUSTIFICATION_MOD_REASON       VARCHAR2(100) NULL,
	JUSTIFICATION_MOD_SUMMARY      VARCHAR2(500) NULL,
	JUSTIFICATION_MODIFIER_NAME    VARCHAR2(100) NULL,
	JUSTIFICATION_MODIFIER_ID      VARCHAR2(10) NULL,
	JUSTIFICATION_MODIFIED_DATE    VARCHAR2(20) NULL
);
/

CREATE OR REPLACE VIEW VW_INCENTIVES_LE AS

SELECT FD.PROCID AS PROC_ID, X.*
FROM TBL_FORM_DTL FD,
     XMLTABLE('/formData/items' PASSING FD.FIELD_DATA COLUMNS
	     -- Details
	     ---- Center/Office/Consortium Director
	     COC_NAME VARCHAR2(100) PATH './item[id="lecocDirector"]/value/name'
	     , COC_EMAIL VARCHAR2(100) PATH './item[id="lecocDirector"]/value/email'
	     , COC_ID VARCHAR2(10) PATH './item[id="lecocDirector"]/value/id'
	     , COC_TITLE VARCHAR2(100) PATH './item[id="lecocDirector"]/value/title'
	     , INIT_ANN_LA_RATE VARCHAR2(10) PATH './item[id="initialOfferedAnnualLeaveAccrualRate"]/value'
	     , SUPPORT_LE VARCHAR2(5) PATH './item[id="supportLE"]/value'
	     , PROPS_ANN_LA_RATE VARCHAR2(10) PATH './item[id="proposedAnnualLeaveAccrualRate"]/value'
	     -- Justification
		 , JUSTIFICATION_LASTMOD_NAME VARCHAR2(100) PATH './item[id="currentUser"]/value'
		 , JUSTIFICATION_LASTMOD_ID VARCHAR2(10) PATH './item[id="currentUserId"]/value'
		 , JUSTIFICATION_MOD_REASON VARCHAR2(100) PATH './item[id="leJustificationModificationReason"]/value'
		 , JUSTIFICATION_MOD_SUMMARY VARCHAR2(500) PATH './item[id="leJustificationModificationSummary"]/value'
		 , JUSTIFICATION_MODIFIER_NAME VARCHAR2(100) PATH './item[id="leJustificationModifier"]/value'
		 , JUSTIFICATION_MODIFIER_ID VARCHAR2(10) PATH './item[id="leJustificationModifierId"]/value'
		 , JUSTIFICATION_MODIFIED_DATE VARCHAR2(20) PATH './item[id="leJustificationModified"]/value'
	     , JUSTIFICATION_SKILL_EXP VARCHAR2(4000) PATH './item[id="justificationSkillAndExperience"]/value'
	     , JUSTIFICATION_AGENCY_GOAL VARCHAR2(4000) PATH './item[id="justificationAgencyMissionOrPerformanceGoal"]/value'
	     -- Review
	     , SELECTEE_ELIGIBILITY VARCHAR2(100) PATH './item[id="leSelecteeEligibility"]/value'
	     , HRS_RVW_CERT VARCHAR2(100) PATH './item[id="hrSpecialistLEReviewCertification"]/value'
	     , HRS_NOT_SPT_RSN VARCHAR2(100) PATH './item[id="hrSpecialistLENotSupportReason"]/value'
	     , RVW_HRS VARCHAR2(100) PATH './item[id="leReviewHRSpecialist"]/value'
	     , HRS_RVW_DATE VARCHAR2(10) PATH './item[id="hrSpecialistLEReviewDate"]/value'
	     , RCMD_LA_RATE VARCHAR2(10) PATH './item[id="rcmdAnnualLeaveAccrualRate"]/value'
	     -- Approvals
	     , APPROVAL_SO_VALUE VARCHAR2(10) PATH './item[id="leApprovalSOValue"]/value'
	     , APPROVAL_SO_ACTING VARCHAR2(10) PATH './item[id="leApprovalSOActing"]/value'
	     , APPROVAL_SO VARCHAR2(100) PATH './item[id="leApprovalSO"]/value'
	     , APPROVAL_SO_RESP_DATE VARCHAR2(10) PATH './item[id="leApprovalSOResponseDate"]/value'
	     , APPROVAL_COC_VALUE VARCHAR2(10) PATH './item[id="leApprovalCOCValue"]/value'
	     , APPROVAL_COC_ACTING VARCHAR2(10) PATH './item[id="leApprovalCOCActing"]/value'
	     , APPROVAL_COC VARCHAR2(100) PATH './item[id="leApprovalCOC"]/value'
	     , APPROVAL_COC_RESP_DATE VARCHAR2(10) PATH './item[id="leApprovalCOCResponseDate"]/value'
	     , APPROVAL_DGHO_VALUE VARCHAR2(10) PATH './item[id="leApprovalDGHOValue"]/value'
	     , APPROVAL_DGHO_ACTING VARCHAR2(10) PATH './item[id="leApprovalDGHOActing"]/value'
	     , APPROVAL_DGHO VARCHAR2(100) PATH './item[id="leApprovalDGHO"]/value'
	     , APPROVAL_DGHO_RESP_DATE VARCHAR2(10) PATH './item[id="leApprovalDGHOResponseDate"]/value'
	     , APPROVAL_TABG_VALUE VARCHAR2(10) PATH './item[id="leApprovalTABGValue"]/value'
	     , APPROVAL_TABG_ACTING VARCHAR2(10) PATH './item[id="leApprovalTABGActing"]/value'
	     , APPROVAL_TABG VARCHAR2(100) PATH './item[id="leApprovalTABG"]/value'
	     , APPROVAL_TABG_RESP_DATE VARCHAR2(10) PATH './item[id="leApprovalTABGResponseDate"]/value'
	     ) X
WHERE FD.FORM_TYPE = 'CMSINCENTIVES'
;
/

CREATE OR REPLACE PROCEDURE SP_UPDATE_INCENTIVES_LE_TABLE
(
	I_PROCID            IN      NUMBER
)
IS
	l_count	int;
BEGIN
	IF I_PROCID IS NOT NULL AND I_PROCID > 0 THEN 
		SELECT count(*) INTO l_count FROM VW_INCENTIVES_LE WHERE PROC_ID = I_PROCID;
		IF 0 < l_count THEN
			MERGE INTO INCENTIVES_LE t
			USING ( SELECT * FROM VW_INCENTIVES_LE WHERE PROC_ID = I_PROCID ) v
			ON (t.PROC_ID = v.PROC_ID)
			WHEN MATCHED THEN
				UPDATE 
				SET t.COC_NAME = v.COC_NAME,
					t.COC_EMAIL = v.COC_EMAIL,
					t.COC_ID = v.COC_ID,
					t.COC_TITLE = v.COC_TITLE,
					t.INIT_ANN_LA_RATE = v.INIT_ANN_LA_RATE,
					t.SUPPORT_LE = v.SUPPORT_LE,
					t.PROPS_ANN_LA_RATE = v.PROPS_ANN_LA_RATE,
					t.JUSTIFICATION_LASTMOD_NAME = v.JUSTIFICATION_LASTMOD_NAME,
					t.JUSTIFICATION_LASTMOD_ID = v.JUSTIFICATION_LASTMOD_ID,
					t.JUSTIFICATION_MOD_REASON = v.JUSTIFICATION_MOD_REASON,
					t.JUSTIFICATION_MOD_SUMMARY = v.JUSTIFICATION_MOD_SUMMARY,
					t.JUSTIFICATION_MODIFIER_NAME = v.JUSTIFICATION_MODIFIER_NAME,
					t.JUSTIFICATION_MODIFIER_ID = v.JUSTIFICATION_MODIFIER_ID,
					t.JUSTIFICATION_MODIFIED_DATE = v.JUSTIFICATION_MODIFIED_DATE,
					t.JUSTIFICATION_SKILL_EXP = v.JUSTIFICATION_SKILL_EXP,
					t.JUSTIFICATION_AGENCY_GOAL = v.JUSTIFICATION_AGENCY_GOAL,
					t.SELECTEE_ELIGIBILITY = v.SELECTEE_ELIGIBILITY,
					t.HRS_RVW_CERT = v.HRS_RVW_CERT,
					t.HRS_NOT_SPT_RSN = v.HRS_NOT_SPT_RSN,
					t.RVW_HRS = v.RVW_HRS,
					t.HRS_RVW_DATE = v.HRS_RVW_DATE,
					t.RCMD_LA_RATE = v.RCMD_LA_RATE,
					t.APPROVAL_SO_VALUE = v.APPROVAL_SO_VALUE,
					t.APPROVAL_SO_ACTING = v.APPROVAL_SO_ACTING,
					t.APPROVAL_SO = v.APPROVAL_SO,
					t.APPROVAL_SO_RESP_DATE = v.APPROVAL_SO_RESP_DATE,
					t.APPROVAL_COC_VALUE = v.APPROVAL_COC_VALUE,
					t.APPROVAL_COC_ACTING = v.APPROVAL_COC_ACTING,
					t.APPROVAL_COC = v.APPROVAL_COC,
					t.APPROVAL_COC_RESP_DATE = v.APPROVAL_COC_RESP_DATE,
					t.APPROVAL_DGHO_VALUE = v.APPROVAL_DGHO_VALUE,
					t.APPROVAL_DGHO_ACTING = v.APPROVAL_DGHO_ACTING,
					t.APPROVAL_DGHO = v.APPROVAL_DGHO,
					t.APPROVAL_DGHO_RESP_DATE = v.APPROVAL_DGHO_RESP_DATE,
					t.APPROVAL_TABG_VALUE = v.APPROVAL_TABG_VALUE,
					t.APPROVAL_TABG_ACTING = v.APPROVAL_TABG_ACTING,
					t.APPROVAL_TABG = v.APPROVAL_TABG,
					t.APPROVAL_TABG_RESP_DATE = v.APPROVAL_TABG_RESP_DATE
			WHEN NOT MATCHED THEN
				INSERT (t.PROC_ID,
					t.COC_NAME,
					t.COC_EMAIL,
					t.COC_ID,
					t.COC_TITLE,
					t.INIT_ANN_LA_RATE,
					t.SUPPORT_LE,
					t.PROPS_ANN_LA_RATE,
					t.JUSTIFICATION_LASTMOD_NAME, 
					t.JUSTIFICATION_LASTMOD_ID,
					t.JUSTIFICATION_MOD_REASON,
					t.JUSTIFICATION_MOD_SUMMARY,
					t.JUSTIFICATION_MODIFIER_NAME,
					t.JUSTIFICATION_MODIFIER_ID,
					t.JUSTIFICATION_MODIFIED_DATE,
					t.JUSTIFICATION_SKILL_EXP,
					t.JUSTIFICATION_AGENCY_GOAL,
					t.SELECTEE_ELIGIBILITY,
					t.HRS_RVW_CERT,
					t.HRS_NOT_SPT_RSN,
					t.RVW_HRS,
					t.HRS_RVW_DATE,
					t.RCMD_LA_RATE,
					t.APPROVAL_SO_VALUE,
					t.APPROVAL_SO_ACTING,
					t.APPROVAL_SO,
					t.APPROVAL_SO_RESP_DATE,
					t.APPROVAL_COC_VALUE,
					t.APPROVAL_COC_ACTING,
					t.APPROVAL_COC,
					t.APPROVAL_COC_RESP_DATE,
					t.APPROVAL_DGHO_VALUE,
					t.APPROVAL_DGHO_ACTING,
					t.APPROVAL_DGHO,
					t.APPROVAL_DGHO_RESP_DATE,
					t.APPROVAL_TABG_VALUE,
					t.APPROVAL_TABG_ACTING,
					t.APPROVAL_TABG,
					t.APPROVAL_TABG_RESP_DATE)
				VALUES (
					v.PROC_ID,
					v.COC_NAME,
					v.COC_EMAIL,
					v.COC_ID,
					v.COC_TITLE,
					v.INIT_ANN_LA_RATE,
					v.SUPPORT_LE,
					v.PROPS_ANN_LA_RATE,
					v.JUSTIFICATION_LASTMOD_NAME, 
					v.JUSTIFICATION_LASTMOD_ID,
					v.JUSTIFICATION_MOD_REASON,
					v.JUSTIFICATION_MOD_SUMMARY,
					v.JUSTIFICATION_MODIFIER_NAME,
					v.JUSTIFICATION_MODIFIER_ID,
					v.JUSTIFICATION_MODIFIED_DATE,
					v.JUSTIFICATION_SKILL_EXP,
					v.JUSTIFICATION_AGENCY_GOAL,
					v.SELECTEE_ELIGIBILITY,
					v.HRS_RVW_CERT,
					v.HRS_NOT_SPT_RSN,
					v.RVW_HRS,
					v.HRS_RVW_DATE,
					v.RCMD_LA_RATE,
					v.APPROVAL_SO_VALUE,
					v.APPROVAL_SO_ACTING,
					v.APPROVAL_SO,
					v.APPROVAL_SO_RESP_DATE,
					v.APPROVAL_COC_VALUE,
					v.APPROVAL_COC_ACTING,
					v.APPROVAL_COC,
					v.APPROVAL_COC_RESP_DATE,
					v.APPROVAL_DGHO_VALUE,
					v.APPROVAL_DGHO_ACTING,
					v.APPROVAL_DGHO,
					v.APPROVAL_DGHO_RESP_DATE,
					v.APPROVAL_TABG_VALUE,
					v.APPROVAL_TABG_ACTING,
					v.APPROVAL_TABG,
					v.APPROVAL_TABG_RESP_DATE);
		END IF;
	END IF;

	EXCEPTION
	WHEN OTHERS THEN
		SP_ERROR_LOG();
END;
/

CREATE TABLE INCENTIVES_LE_JUST_HISTORY
(
	PROC_ID                        NUMBER(10),
	JUSTIFICATION_VER	           NUMBER(10) DEFAULT 0,
	JUSTIFICATION_MOD_REASON       VARCHAR2(100),
	JUSTIFICATION_MOD_SUMMARY      VARCHAR2(500),
	JUSTIFICATION_MODIFIER_NAME    VARCHAR2(100),
	JUSTIFICATION_MODIFIER_ID      VARCHAR2(10),
	JUSTIFICATION_MODIFIED_DATE    VARCHAR2(20),
	JUSTIFICATION_SKILL_EXP   VARCHAR2(4000),
	JUSTIFICATION_AGENCY_GOAL VARCHAR2(4000)
);
CREATE UNIQUE INDEX INCENTIVES_LE_JUST_HIST_UK1 ON INCENTIVES_LE_JUST_HISTORY (PROC_ID, JUSTIFICATION_VER);
/

CREATE OR REPLACE TRIGGER INCENTIVES_LE_BIUR
BEFORE INSERT OR UPDATE OF JUSTIFICATION_SKILL_EXP, JUSTIFICATION_AGENCY_GOAL, JUSTIFICATION_MOD_REASON, JUSTIFICATION_MOD_SUMMARY, JUSTIFICATION_MODIFIER_ID
ON INCENTIVES_LE
FOR EACH ROW
DECLARE
	L_JUSTIFICATION_CRT_ID   VARCHAR2(10);
	L_JUSTIFICATION_CRT_NAME VARCHAR2(100);
	L_JUSTIFICATION_CRT_DATE VARCHAR2(20);
	L_JUSTIFICATION_VER NUMBER(10);
BEGIN
		L_JUSTIFICATION_CRT_ID   := :new.JUSTIFICATION_CRT_ID;
		L_JUSTIFICATION_CRT_NAME := :new.JUSTIFICATION_CRT_NAME;
		L_JUSTIFICATION_CRT_DATE := :new.JUSTIFICATION_CRT_DATE;

    IF ((:old.JUSTIFICATION_SKILL_EXP <> :new.JUSTIFICATION_SKILL_EXP) AND (:old.JUSTIFICATION_SKILL_EXP IS NOT NULL OR :new.JUSTIFICATION_SKILL_EXP IS NOT NULL) ) OR 
		((:old.JUSTIFICATION_AGENCY_GOAL <> :new.JUSTIFICATION_AGENCY_GOAL) AND (:old.JUSTIFICATION_AGENCY_GOAL IS NOT NULL OR :new.JUSTIFICATION_AGENCY_GOAL IS NOT NULL) ) OR 
		((:old.JUSTIFICATION_MOD_REASON <> :new.JUSTIFICATION_MOD_REASON) AND (:old.JUSTIFICATION_MOD_REASON IS NOT NULL OR :new.JUSTIFICATION_MOD_REASON IS NOT NULL) ) OR 
		((:old.JUSTIFICATION_MOD_SUMMARY <> :new.JUSTIFICATION_MOD_SUMMARY) AND (:old.JUSTIFICATION_MOD_SUMMARY IS NOT NULL OR :new.JUSTIFICATION_MOD_SUMMARY IS NOT NULL) ) THEN
      IF (:new.JUSTIFICATION_SKILL_EXP IS NOT NULL) AND (L_JUSTIFICATION_CRT_ID IS NULL) THEN
        L_JUSTIFICATION_CRT_ID   := :new.JUSTIFICATION_LASTMOD_ID;
        L_JUSTIFICATION_CRT_NAME := :new.JUSTIFICATION_LASTMOD_NAME;
        L_JUSTIFICATION_CRT_DATE := TO_CHAR(SYSTIMESTAMP, 'MM/DD/YYYY HH24:MI:SS');
  
        :new.JUSTIFICATION_CRT_ID := L_JUSTIFICATION_CRT_ID;
        :new.JUSTIFICATION_CRT_NAME := L_JUSTIFICATION_CRT_NAME;
        :new.JUSTIFICATION_CRT_DATE := L_JUSTIFICATION_CRT_DATE;
        :new.JUSTIFICATION_LASTMOD_DATE := TO_CHAR(SYSTIMESTAMP, 'MM/DD/YYYY HH24:MI:SS');
      ELSE
        IF (:new.JUSTIFICATION_MODIFIER_ID IS NOT NULL) THEN
          IF(:new.JUSTIFICATION_VER = 0) THEN
            L_JUSTIFICATION_CRT_ID   := :new.JUSTIFICATION_CRT_ID;
            L_JUSTIFICATION_CRT_NAME := :new.JUSTIFICATION_CRT_NAME;
            L_JUSTIFICATION_CRT_DATE := :new.JUSTIFICATION_CRT_DATE;
			L_JUSTIFICATION_VER := 1;
          ELSE
            L_JUSTIFICATION_CRT_ID   := :old.JUSTIFICATION_MODIFIER_ID;
            L_JUSTIFICATION_CRT_NAME := :old.JUSTIFICATION_MODIFIER_NAME;
            L_JUSTIFICATION_CRT_DATE := :old.JUSTIFICATION_MODIFIED_DATE;
			L_JUSTIFICATION_VER := :new.JUSTIFICATION_VER + 1;
          END IF;
          INSERT INTO INCENTIVES_LE_JUST_HISTORY
          (
            PROC_ID,
            JUSTIFICATION_VER,
            JUSTIFICATION_MOD_REASON,
            JUSTIFICATION_MOD_SUMMARY,
            JUSTIFICATION_MODIFIER_NAME,
            JUSTIFICATION_MODIFIER_ID,
            JUSTIFICATION_MODIFIED_DATE,
            JUSTIFICATION_SKILL_EXP,
            JUSTIFICATION_AGENCY_GOAL
          )
          VALUES
          (
            :new.PROC_ID,
            L_JUSTIFICATION_VER,
            :old.JUSTIFICATION_MOD_REASON,
            :old.JUSTIFICATION_MOD_SUMMARY,
            L_JUSTIFICATION_CRT_NAME,
            L_JUSTIFICATION_CRT_ID,
            L_JUSTIFICATION_CRT_DATE,
            :old.JUSTIFICATION_SKILL_EXP,
            :old.JUSTIFICATION_AGENCY_GOAL
          );
          :new.JUSTIFICATION_VER	:= L_JUSTIFICATION_VER;
          :new.JUSTIFICATION_LASTMOD_DATE := TO_CHAR(SYSTIMESTAMP, 'MM/DD/YYYY HH24:MI:SS');
        END IF;
      END IF;
    END IF;
		
EXCEPTION
	WHEN OTHERS THEN
		SP_ERROR_LOG();

END;
/

GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LE_JUST_HISTORY TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LE_JUST_HISTORY TO HHS_CMS_HR_DEV_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LE_JUST_HISTORY TO BIZFLOW;

/
