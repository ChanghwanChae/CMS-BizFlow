-- CMS_04_HR_SP_UPDATE_PV_INCENTIVES.sql
-- CMS_06_HR_SP_UPDATE_INCENTIVES_PCA_TABLE.sql
-- CMS_14_HR_SP_UPDATE_INCENTIVES_COM_TABLE.sql
-- CMS_15_HR_SP_UPDATE_INCENTIVES_SAM_TABLE.sql
-- CMS_16_HR_SP_UPDATE_INCENTIVES_LE_TABLE.sql


SET DEFINE OFF;

/**
 * Parses the form data xml to retrieve process variable values,
 * and updates process variable table (BIZFLOW.RLVNTDATA) records for the respective
 * the Incentives process instance identified by the Process ID.
 *
 * @param I_PROCID - Process ID for the target process instance whose process variables should be updated.
 * @param I_FIELD_DATA - Form data xml.
 */
CREATE OR REPLACE PROCEDURE SP_UPDATE_PV_INCENTIVES
	(
		  I_PROCID            IN      NUMBER
		, I_FIELD_DATA      IN      XMLTYPE
	)
IS
	V_XMLVALUE             XMLTYPE;
	V_INCENTIVE_TYPE     NVARCHAR2(50);

	BEGIN
		--DBMS_OUTPUT.PUT_LINE('PARAMETERS ----------------');
		--DBMS_OUTPUT.PUT_LINE('    I_PROCID IS NULL?  = ' || (CASE WHEN I_PROCID IS NULL THEN 'YES' ELSE 'NO' END));
		--DBMS_OUTPUT.PUT_LINE('    I_PROCID           = ' || TO_CHAR(I_PROCID));
		--DBMS_OUTPUT.PUT_LINE('    I_FIELD_DATA       = ' || I_FIELD_DATA.GETCLOBVAL());
		--DBMS_OUTPUT.PUT_LINE(' ----------------');

		IF I_PROCID IS NOT NULL AND I_PROCID > 0 THEN
			--DBMS_OUTPUT.PUT_LINE('Starting PV update ----------');

			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'requestNumber', '/formData/items/item[id="associatedNEILRequest"]/value/requestNumber/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'requestDate', '/formData/items/item[id="requestDate"]/value/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'administrativeCode', '/formData/items/item[id="administrativeCode"]/value/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'associatedIncentives', '/formData/items/item[id="associatedIncentives"]/value/requestNumber/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'candidateName', '/formData/items/item[id="candidateName"]/value/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'hrSpecialist', '/formData/items/item[id="hrSpecialist"]/value/participantId/text()', '/formData/items/item[id="hrSpecialist"]/value/name/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'incentiveType', '/formData/items/item[id="incentiveType"]/value/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'payPlanSeriesGrade', '/formData/items/item[id="payPlanSeriesGrade"]/value/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'positionTitle', '/formData/items/item[id="positionTitle"]/value/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'componentUserIds', '/formData/items/item[id="componentUserIds"]/value/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'relatedUserIds', '/formData/items/item[id="relatedUserIds"]/value/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'selectingOfficial', '/formData/items/item[id="selectingOfficial"]/value/participantId/text()', '/formData/items/item[id="selectingOfficial"]/value/name/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'pcaType', '/formData/items/item[id="pcaType"]/value/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'candidateAccept', '/formData/items/item[id="candiAgreeRenewal"]/value/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'requesterRole', '/formData/items/item[id="requesterRole"]/value/text()');

			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'execOfficer', '/formData/items/item[id="executiveOfficers"]/value[1]/participantId/text()', '/formData/items/item[id="executiveOfficers"]/value[1]/name/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'execOfficer2', '/formData/items/item[id="executiveOfficers"]/value[2]/participantId/text()', '/formData/items/item[id="executiveOfficers"]/value[2]/name/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'execOfficer3', '/formData/items/item[id="executiveOfficers"]/value[3]/participantId/text()', '/formData/items/item[id="executiveOfficers"]/value[3]/name/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'hrLiaison', '/formData/items/item[id="hrLiaisons"]/value[1]/participantId/text()', '/formData/items/item[id="hrLiaisons"]/value[1]/name/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'hrLiaison2', '/formData/items/item[id="hrLiaisons"]/value[2]/participantId/text()', '/formData/items/item[id="hrLiaisons"]/value[2]/name/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'hrLiaison3', '/formData/items/item[id="hrLiaisons"]/value[3]/participantId/text()', '/formData/items/item[id="hrLiaisons"]/value[3]/name/text()');

			V_XMLVALUE := I_FIELD_DATA.EXTRACT('/formData/items/item[id="incentiveType"]/value/text()');
			IF V_XMLVALUE IS NOT NULL THEN
				V_INCENTIVE_TYPE := V_XMLVALUE.GETSTRINGVAL();
			ELSE
				V_INCENTIVE_TYPE := NULL;
			END IF;

			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'oaApprovalReq', '/formData/items/item[id="requireAdminApproval"]/value/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'ohcApprovalReq', '/formData/items/item[id="requireOHCApproval"]/value/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'dgoDirector', '/formData/items/item[id="dghoDirector"]/value/participantId/text()', '/formData/items/item[id="dghoDirector"]/value/name/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'chiefMedicalOfficer', '/formData/items/item[id="chiefPhysician"]/value/participantId/text()', '/formData/items/item[id="chiefPhysician"]/value/name/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'ofmDirector', '/formData/items/item[id="ofmDirector"]/value/participantId/text()', '/formData/items/item[id="ofmDirector"]/value/name/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'tabgDirector', '/formData/items/item[id="tabgDirector"]/value/participantId/text()', '/formData/items/item[id="tabgDirector"]/value/name/text()');
			SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'ofcAdmin', '/formData/items/item[id="offAdmin"]/value/participantId/text()', '/formData/items/item[id="offAdmin"]/value/name/text()');

			IF 'PCA' = V_INCENTIVE_TYPE THEN
				SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'ohcDirector', '/formData/items/item[id="ohcDirector"]/value/participantId/text()', '/formData/items/item[id="ohcDirector"]/value/name/text()');
			ELSIF 'SAM' = V_INCENTIVE_TYPE THEN
				SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'samSupport', '/formData/items/item[id="supportSAM"]/value/text()');
				SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'ohcDirector', '/formData/items/item[id="reviewRcmdApprovalOHCDirector"]/value/participantId/text()', '/formData/items/item[id="reviewRcmdApprovalOHCDirector"]/value/name/text()');
				SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'tabgdApprove', '/formData/items/item[id="approvalDGHOValue"]/value/text()');
				SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'tabgApprove', '/formData/items/item[id="approvalTABGValue"]/value/text()');
				SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'ohcApprove', '/formData/items/item[id="approvalOHCValue"]/value/text()');
                SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'cocDirector', '/formData/items/item[id="cocDirector"]/value/participantId/text()', '/formData/items/item[id="cocDirector"]/value/name/text()');
			ELSIF 'LE' = V_INCENTIVE_TYPE THEN
				SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'leSupport', '/formData/items/item[id="supportLE"]/value/text()');
				SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'tabgdApprove', '/formData/items/item[id="leApprovalDGHOValue"]/value/text()');
				SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'tabgApprove', '/formData/items/item[id="leApprovalTABGValue"]/value/text()');
                SP_UPDATE_PV_BY_XPATH(I_PROCID, I_FIELD_DATA, 'cocDirector', '/formData/items/item[id="lecocDirector"]/value/participantId/text()', '/formData/items/item[id="lecocDirector"]/value/name/text()');
			END IF;

		--DBMS_OUTPUT.PUT_LINE('End PV update  -------------------');

		END IF;

		EXCEPTION
		WHEN OTHERS THEN
		SP_ERROR_LOG();
		--DBMS_OUTPUT.PUT_LINE('Error occurred while executing SP_UPDATE_PV_INCENTIVES -------------------');
	END;
/

CREATE OR REPLACE PROCEDURE SP_UPDATE_INCENTIVES_PCA_TABLE
(
    I_PROCID            IN      NUMBER
)
IS
BEGIN
    IF I_PROCID IS NOT NULL AND I_PROCID > 0 THEN
        DELETE INCENTIVES_PCA WHERE PROC_ID = I_PROCID;
        INSERT INTO INCENTIVES_PCA (PROC_ID, PCA_TYPE, CANDI_AGREE
        , CP_NAME, CP_EMAIL, CP_ID , OFM_NAME, OFM_EMAIL, OFM_ID
        , ADMIN_APPROVAL_REQ, OHC_NAME, OHC_EMAIL, OHC_ID, OADMIN_NAME, OADMIN_EMAIL, OADMIN_ID
        , WORK_SCHEDULE, HOURS_PER_WEEK, BD_CERT_REQ, LIC_INFO
        , LIC_STATE1_STATE, LIC_STATE1_NAME, LIC_STATE1_EXP_DATE, LIC_STATE2_STATE, LIC_STATE2_NAME, LIC_STATE2_EXP_DATE
        , BD_CERT_SPEC1, BD_CERT_SPEC2, BD_CERT_SPEC3, BD_CERT_SPEC4, BD_CERT_SPEC5
        , BD_CERT_SPEC6, BD_CERT_SPEC7, BD_CERT_SPEC8, BD_CERT_SPEC9, BD_CERT_SPEC_OTHER
        , LEN_SERVED, LEN_SERVICE, ALW_CATEGORY, ALW_BD_CERT, ALW_MULTI_YEAR_AGMT, ALW_MISSION_SC , ALW_TOTAL, ALW_TOTAL_PAYABLE
        , DETAIL_REMARKS, RVW_SO_NAME, RVW_SO_ID, RVW_SO_DATE, RVW_DGHO_NAME, RVW_DGHO_ID, RVW_DGHO_DATE
        , RVW_CP_NAME, RVW_CP_ID, RVW_CP_DATE, RVW_OFM_NAME, RVW_OFM_ID, RVW_OFM_DATE, RVW_TABG_NAME, RVW_TABG_ID, RVW_TABG_DATE
        , RVW_OHC_NAME, RVW_OHC_ID, RVW_OHC_DATE, APPROVAL_TABG_NAME, APPROVAL_TABG_ID, APPROVAL_TABG_DATE
        , APPROVAL_OADMIN_NAME, APPROVAL_OADMIN_ID, APPROVAL_OADMIN_DATE)
            SELECT PROC_ID, PCA_TYPE, CANDI_AGREE
            , CP_NAME, CP_EMAIL, CP_ID , OFM_NAME, OFM_EMAIL, OFM_ID
            , ADMIN_APPROVAL_REQ, OHC_NAME, OHC_EMAIL, OHC_ID, OADMIN_NAME, OADMIN_EMAIL, OADMIN_ID
            , WORK_SCHEDULE, HOURS_PER_WEEK, BD_CERT_REQ, LIC_INFO
            , LIC_STATE1_STATE, LIC_STATE1_NAME, LIC_STATE1_EXP_DATE, LIC_STATE2_STATE, LIC_STATE2_NAME, LIC_STATE2_EXP_DATE
            , BD_CERT_SPEC1, BD_CERT_SPEC2, BD_CERT_SPEC3, BD_CERT_SPEC4, BD_CERT_SPEC5
            , BD_CERT_SPEC6, BD_CERT_SPEC7, BD_CERT_SPEC8, BD_CERT_SPEC9, BD_CERT_SPEC_OTHER
            , LEN_SERVED, LEN_SERVICE, ALW_CATEGORY, ALW_BD_CERT, ALW_MULTI_YEAR_AGMT, ALW_MISSION_SC , ALW_TOTAL, ALW_TOTAL_PAYABLE
            , DETAIL_REMARKS, RVW_SO_NAME, RVW_SO_ID, RVW_SO_DATE, RVW_DGHO_NAME, RVW_DGHO_ID, RVW_DGHO_DATE
            , RVW_CP_NAME, RVW_CP_ID, RVW_CP_DATE, RVW_OFM_NAME, RVW_OFM_ID, RVW_OFM_DATE, RVW_TABG_NAME, RVW_TABG_ID, RVW_TABG_DATE
            , RVW_OHC_NAME, RVW_OHC_ID, RVW_OHC_DATE, APPROVAL_TABG_NAME, APPROVAL_TABG_ID, APPROVAL_TABG_DATE
            , APPROVAL_OADMIN_NAME, APPROVAL_OADMIN_ID, APPROVAL_OADMIN_DATE
            FROM VW_INCENTIVES_PCA WHERE PROC_ID = I_PROCID;
    END IF;

    EXCEPTION
    WHEN OTHERS THEN
        SP_ERROR_LOG();
END;
/

 CREATE OR REPLACE PROCEDURE SP_UPDATE_INCENTIVES_COM_TABLE
(
	I_PROCID            IN      NUMBER
)
IS
BEGIN
	IF I_PROCID IS NOT NULL AND I_PROCID > 0 THEN
		DELETE INCENTIVES_COM WHERE PROC_ID = I_PROCID;
		INSERT INTO INCENTIVES_COM (PROC_ID, INCEN_TYPE, REQ_NUM, REQ_TYPE, ADMIN_CODE, ORG_NAME
			, CANDI_NAME, CANDI_FIRST, CANDI_MIDDLE, CANDI_LAST
			, SO_NAME, SO_EMAIL, SO_ID, SO_TITLE
			, XO1_NAME, XO1_EMAIL, XO1_ID, XO2_NAME, XO2_EMAIL, XO2_ID, XO3_NAME, XO3_EMAIL, XO3_ID
			, HRL1_NAME, HRL1_EMAIL, HRL1_ID, HRL2_NAME, HRL2_EMAIL, HRL2_ID, HRL3_NAME, HRL3_EMAIL, HRL3_ID
			, HRS1_NAME, HRS1_EMAIL, HRS1_ID, HRS2_NAME, HRS2_EMAIL, HRS2_ID
			, DGHO_NAME, DGHO_EMAIL, DGHO_ID
			, TABG_NAME, TABG_EMAIL, TABG_ID, POS_TITLE
			, PAY_PLAN, SERIES, GRADE, POS_DESC_NUM, TYPE_OF_APPT, DS_STATE, DS_CITY, CANCEL_RESAON, CANCEL_USER_NAME, CANCEL_USER_ID)
			SELECT PROC_ID, INCEN_TYPE, REQ_NUM, REQ_TYPE, ADMIN_CODE, ORG_NAME
			, CANDI_NAME, CANDI_FIRST, CANDI_MIDDLE, CANDI_LAST
			, SO_NAME, SO_EMAIL, SO_ID, SO_TITLE
			, XO1_NAME, XO1_EMAIL, XO1_ID, XO2_NAME, XO2_EMAIL, XO2_ID, XO3_NAME, XO3_EMAIL, XO3_ID
			, HRL1_NAME, HRL1_EMAIL, HRL1_ID, HRL2_NAME, HRL2_EMAIL, HRL2_ID, HRL3_NAME, HRL3_EMAIL, HRL3_ID
			, HRS1_NAME, HRS1_EMAIL, HRS1_ID, HRS2_NAME, HRS2_EMAIL, HRS2_ID
			, DGHO_NAME, DGHO_EMAIL, DGHO_ID
			, TABG_NAME, TABG_EMAIL, TABG_ID, POS_TITLE
			, PAY_PLAN, SERIES, GRADE, POS_DESC_NUM, TYPE_OF_APPT, DS_STATE, DS_CITY, CANCEL_RESAON, CANCEL_USER_NAME, CANCEL_USER_ID
			FROM VW_INCENTIVES_COM WHERE PROC_ID = I_PROCID;
	END IF;

	EXCEPTION
	WHEN OTHERS THEN
		SP_ERROR_LOG();
END;
/

CREATE OR REPLACE PROCEDURE SP_UPDATE_INCENTIVES_SAM_TABLE
(
	I_PROCID            IN      NUMBER
)
IS
	l_count	int;
BEGIN
	IF I_PROCID IS NOT NULL AND I_PROCID > 0 THEN 
		SELECT count(*) INTO l_count FROM VW_INCENTIVES_SAM WHERE PROC_ID = I_PROCID;
		IF 0 < l_count THEN
			MERGE INTO INCENTIVES_SAM t
			USING ( SELECT * FROM VW_INCENTIVES_SAM WHERE PROC_ID = I_PROCID ) v
			ON (t.PROC_ID = v.PROC_ID)
			WHEN MATCHED THEN
				UPDATE 
				SET t.COC_NAME = v.COC_NAME,
					t.COC_EMAIL = v.COC_EMAIL,
					t.COC_ID = v.COC_ID,
					t.COC_TITLE = v.COC_TITLE,
					t.INIT_SALARY_GRADE = v.INIT_SALARY_GRADE,
					t.INIT_SALARY_STEP = v.INIT_SALARY_STEP,
					t.INIT_SALARY_SALARY_PER_ANNUM = v.INIT_SALARY_SALARY_PER_ANNUM,
					t.INIT_SALARY_LOCALITY_PAY_SCALE = v.INIT_SALARY_LOCALITY_PAY_SCALE,
					t.SUPPORT_SAM = v.SUPPORT_SAM,
					t.RCMD_SALARY_GRADE = v.RCMD_SALARY_GRADE,
					t.RCMD_SALARY_STEP = v.RCMD_SALARY_STEP,
					t.RCMD_SALARY_SALARY_PER_ANNUM = v.RCMD_SALARY_SALARY_PER_ANNUM,
					t.RCMD_SALARY_LOCALITY_PAY_SCALE = v.RCMD_SALARY_LOCALITY_PAY_SCALE,
					t.SELECTEE_SALARY_PER_ANNUM = v.SELECTEE_SALARY_PER_ANNUM,
					t.SELECTEE_SALARY_TYPE = v.SELECTEE_SALARY_TYPE,
					t.SELECTEE_BONUS = v.SELECTEE_BONUS,
					t.SELECTEE_BENEFITS = v.SELECTEE_BENEFITS,
					t.SELECTEE_TOTAL_COMPENSATION = v.SELECTEE_TOTAL_COMPENSATION,
					t.SUP_DOC_REQ_DATE = v.SUP_DOC_REQ_DATE,
					t.SUP_DOC_RCV_DATE = v.SUP_DOC_RCV_DATE,
					t.JUSTIFICATION_LASTMOD_NAME = v.JUSTIFICATION_LASTMOD_NAME,
					t.JUSTIFICATION_LASTMOD_ID = v.JUSTIFICATION_LASTMOD_ID,
					t.JUSTIFICATION_MOD_REASON = v.JUSTIFICATION_MOD_REASON,
					t.JUSTIFICATION_MOD_SUMMARY = v.JUSTIFICATION_MOD_SUMMARY,
					t.JUSTIFICATION_MODIFIER_NAME = v.JUSTIFICATION_MODIFIER_NAME,
					t.JUSTIFICATION_MODIFIER_ID = v.JUSTIFICATION_MODIFIER_ID,
					t.JUSTIFICATION_MODIFIED_DATE = v.JUSTIFICATION_MODIFIED_DATE,
					t.JUSTIFICATION_SUPER_QUAL_DESC = v.JUSTIFICATION_SUPER_QUAL_DESC,
					t.JUSTIFICATION_QUAL_COMP_DESC = v.JUSTIFICATION_QUAL_COMP_DESC,
					t.JUSTIFICATION_PAY_EQUITY_DESC = v.JUSTIFICATION_PAY_EQUITY_DESC,
					t.JUSTIFICATION_EXIST_PKG_DESC = v.JUSTIFICATION_EXIST_PKG_DESC,
					t.JUSTIFICATION_EXPLAIN_CONSID = v.JUSTIFICATION_EXPLAIN_CONSID,
					t.SELECT_MEET_ELIGIBILITY = v.SELECT_MEET_ELIGIBILITY,
					t.SELECT_MEET_CRITERIA = v.SELECT_MEET_CRITERIA,
					t.SUPERIOR_QUAL_REASON = v.SUPERIOR_QUAL_REASON,
					t.OTHER_FACTORS = v.OTHER_FACTORS,
					t.SPL_AGENCY_NEED_RSN = v.SPL_AGENCY_NEED_RSN,
					t.SPL_AGENCY_NEED_RSN_ESS = v.SPL_AGENCY_NEED_RSN_ESS,
					t.QUAL_REAPPT = v.QUAL_REAPPT,
					t.OTHER_EXCEPTS = v.OTHER_EXCEPTS,
					t.BASIC_PAY_RATE_FACTOR1 = v.BASIC_PAY_RATE_FACTOR1,
					t.BASIC_PAY_RATE_FACTOR2 = v.BASIC_PAY_RATE_FACTOR2,
					t.BASIC_PAY_RATE_FACTOR3 = v.BASIC_PAY_RATE_FACTOR3,
					t.BASIC_PAY_RATE_FACTOR4 = v.BASIC_PAY_RATE_FACTOR4,
					t.BASIC_PAY_RATE_FACTOR5 = v.BASIC_PAY_RATE_FACTOR5,
					t.BASIC_PAY_RATE_FACTOR6 = v.BASIC_PAY_RATE_FACTOR6,
					t.BASIC_PAY_RATE_FACTOR7 = v.BASIC_PAY_RATE_FACTOR7,
					t.BASIC_PAY_RATE_FACTOR8 = v.BASIC_PAY_RATE_FACTOR8,
					t.BASIC_PAY_RATE_FACTOR9 = v.BASIC_PAY_RATE_FACTOR9,
					t.BASIC_PAY_RATE_FACTOR10 = v.BASIC_PAY_RATE_FACTOR10,
					t.OTHER_RLVNT_FACTOR = v.OTHER_RLVNT_FACTOR,
					t.OTHER_REQ_JUST_APVD = v.OTHER_REQ_JUST_APVD,
					t.OTHER_REQ_SUFF_INFO_PRVD = v.OTHER_REQ_SUFF_INFO_PRVD,
					t.OTHER_REQ_INCEN_REQD = v.OTHER_REQ_INCEN_REQD,
					t.OTHER_REQ_DOC_PRVD = v.OTHER_REQ_DOC_PRVD,
					t.HRS_RVW_CERT = v.HRS_RVW_CERT,
					t.HRS_NOT_SPT_RSN = v.HRS_NOT_SPT_RSN,
					t.RVW_HRS = v.RVW_HRS,
					t.HRS_RVW_DATE = v.HRS_RVW_DATE,
					t.RCMD_GRADE = v.RCMD_GRADE,
					t.RCMD_STEP = v.RCMD_STEP,
					t.RCMD_SALARY_PER_ANNUM = v.RCMD_SALARY_PER_ANNUM,
					t.RCMD_LOCALITY_PAY_SCALE = v.RCMD_LOCALITY_PAY_SCALE,
					t.RCMD_INC_DEC_AMOUNT = v.RCMD_INC_DEC_AMOUNT,
					t.RCMD_PERC_DIFF = v.RCMD_PERC_DIFF,
					t.OHC_APPRO_REQ = v.OHC_APPRO_REQ,
					t.RCMD_APPRO_OHC_NAME = v.RCMD_APPRO_OHC_NAME,
					t.RCMD_APPRO_OHC_EMAIL = v.RCMD_APPRO_OHC_EMAIL,
					t.RCMD_APPRO_OHC_ID = v.RCMD_APPRO_OHC_ID,
					t.RVW_REMARKS = v.RVW_REMARKS,
					t.APPROVAL_SO_VALUE = v.APPROVAL_SO_VALUE,
					t.APPROVAL_SO_ACTING = v.APPROVAL_SO_ACTING,
					t.APPROVAL_SO = v.APPROVAL_SO,
					t.APPROVAL_SO_RESP_DATE = v.APPROVAL_SO_RESP_DATE,
					t.APPROVAL_COC_VALUE = v.APPROVAL_COC_VALUE,
					t.APPROVAL_COC_ACTING = v.APPROVAL_COC_ACTING,
					t.APPROVAL_COC = v.APPROVAL_COC,
					t.APPROVAL_COC_RESP_DATE = v.APPROVAL_COC_RESP_DATE,
					t.APPROVAL_DGHO_VALUE = v.APPROVAL_DGHO_VALUE,
					t.APPROVAL_DGHO_ACTING = v.APPROVAL_DGHO_ACTING,
					t.APPROVAL_DGHO = v.APPROVAL_DGHO,
					t.APPROVAL_DGHO_RESP_DATE = v.APPROVAL_DGHO_RESP_DATE,
					t.APPROVAL_TABG_VALUE = v.APPROVAL_TABG_VALUE,
					t.APPROVAL_TABG_ACTING = v.APPROVAL_TABG_ACTING,
					t.APPROVAL_TABG = v.APPROVAL_TABG,
					t.APPROVAL_TABG_RESP_DATE = v.APPROVAL_TABG_RESP_DATE,
					t.APPROVAL_OHC_VALUE = v.APPROVAL_OHC_VALUE,
					t.APPROVAL_OHC_ACTING = v.APPROVAL_OHC_ACTING,
					t.APPROVAL_OHC = v.APPROVAL_OHC,
					t.APPROVAL_OHC_RESP_DATE = v.APPROVAL_OHC_RESP_DATE,
					t.APPROVER_NOTES = v.APPROVER_NOTES				
			WHEN NOT MATCHED THEN
				INSERT (t.PROC_ID, t.COC_NAME, t.COC_EMAIL, t.COC_ID, t.COC_TITLE, t.INIT_SALARY_GRADE, t.INIT_SALARY_STEP, t.INIT_SALARY_SALARY_PER_ANNUM , t.INIT_SALARY_LOCALITY_PAY_SCALE
					, t.SUPPORT_SAM, t.RCMD_SALARY_GRADE, t.RCMD_SALARY_STEP, t.RCMD_SALARY_SALARY_PER_ANNUM, t.RCMD_SALARY_LOCALITY_PAY_SCALE
					, t.SELECTEE_SALARY_PER_ANNUM, t.SELECTEE_SALARY_TYPE, t.SELECTEE_BONUS, t.SELECTEE_BENEFITS, t.SELECTEE_TOTAL_COMPENSATION
					, t.SUP_DOC_REQ_DATE, t.SUP_DOC_RCV_DATE
					, t.JUSTIFICATION_LASTMOD_NAME, t.JUSTIFICATION_LASTMOD_ID
					, t.JUSTIFICATION_MOD_REASON, t.JUSTIFICATION_MOD_SUMMARY, t.JUSTIFICATION_MODIFIER_NAME, t.JUSTIFICATION_MODIFIER_ID, t.JUSTIFICATION_MODIFIED_DATE
					, t.JUSTIFICATION_SUPER_QUAL_DESC, t.JUSTIFICATION_QUAL_COMP_DESC
					, t.JUSTIFICATION_PAY_EQUITY_DESC, t.JUSTIFICATION_EXIST_PKG_DESC, t.JUSTIFICATION_EXPLAIN_CONSID
					, t.SELECT_MEET_ELIGIBILITY, t.SELECT_MEET_CRITERIA, t.SUPERIOR_QUAL_REASON, t.OTHER_FACTORS, t.SPL_AGENCY_NEED_RSN, t.SPL_AGENCY_NEED_RSN_ESS
					, t.QUAL_REAPPT, t.OTHER_EXCEPTS
					, t.BASIC_PAY_RATE_FACTOR1 , t.BASIC_PAY_RATE_FACTOR2 , t.BASIC_PAY_RATE_FACTOR3 , t.BASIC_PAY_RATE_FACTOR4 , t.BASIC_PAY_RATE_FACTOR5
					, t.BASIC_PAY_RATE_FACTOR6 , t.BASIC_PAY_RATE_FACTOR7 , t.BASIC_PAY_RATE_FACTOR8 , t.BASIC_PAY_RATE_FACTOR9 , t.BASIC_PAY_RATE_FACTOR10
					, t.OTHER_RLVNT_FACTOR, t.OTHER_REQ_JUST_APVD, t.OTHER_REQ_SUFF_INFO_PRVD
					, t.OTHER_REQ_INCEN_REQD, t.OTHER_REQ_DOC_PRVD, t.HRS_RVW_CERT, t.HRS_NOT_SPT_RSN, t.RVW_HRS, t.HRS_RVW_DATE
					, t.RCMD_GRADE, t.RCMD_STEP, t.RCMD_SALARY_PER_ANNUM, t.RCMD_LOCALITY_PAY_SCALE, t.RCMD_INC_DEC_AMOUNT, t.RCMD_PERC_DIFF
					, t.OHC_APPRO_REQ, t.RCMD_APPRO_OHC_NAME, t.RCMD_APPRO_OHC_EMAIL, t.RCMD_APPRO_OHC_ID
					, t.RVW_REMARKS, t.APPROVAL_SO_VALUE, t.APPROVAL_SO_ACTING, t.APPROVAL_SO, t.APPROVAL_SO_RESP_DATE, t.APPROVAL_COC_VALUE, t.APPROVAL_COC_ACTING, t.APPROVAL_COC, t.APPROVAL_COC_RESP_DATE
					, t.APPROVAL_DGHO_VALUE, t.APPROVAL_DGHO_ACTING, t.APPROVAL_DGHO, t.APPROVAL_DGHO_RESP_DATE, t.APPROVAL_TABG_VALUE, t.APPROVAL_TABG_ACTING, t.APPROVAL_TABG, t.APPROVAL_TABG_RESP_DATE
					, t.APPROVAL_OHC_VALUE, t.APPROVAL_OHC_ACTING, t.APPROVAL_OHC, t.APPROVAL_OHC_RESP_DATE, t.APPROVER_NOTES)
					VALUES (v.PROC_ID, v.COC_NAME, v.COC_EMAIL, v.COC_ID, v.COC_TITLE, v.INIT_SALARY_GRADE, v.INIT_SALARY_STEP, v.INIT_SALARY_SALARY_PER_ANNUM , v.INIT_SALARY_LOCALITY_PAY_SCALE
					, v.SUPPORT_SAM, v.RCMD_SALARY_GRADE, v.RCMD_SALARY_STEP, v.RCMD_SALARY_SALARY_PER_ANNUM, v.RCMD_SALARY_LOCALITY_PAY_SCALE
					, v.SELECTEE_SALARY_PER_ANNUM, v.SELECTEE_SALARY_TYPE, v.SELECTEE_BONUS, v.SELECTEE_BENEFITS, v.SELECTEE_TOTAL_COMPENSATION
					, v.SUP_DOC_REQ_DATE, v.SUP_DOC_RCV_DATE
					, v.JUSTIFICATION_LASTMOD_NAME, v.JUSTIFICATION_LASTMOD_ID
					, v.JUSTIFICATION_MOD_REASON, v.JUSTIFICATION_MOD_SUMMARY, v.JUSTIFICATION_MODIFIER_NAME, v.JUSTIFICATION_MODIFIER_ID, v.JUSTIFICATION_MODIFIED_DATE
					, v.JUSTIFICATION_SUPER_QUAL_DESC, v.JUSTIFICATION_QUAL_COMP_DESC
					, v.JUSTIFICATION_PAY_EQUITY_DESC, v.JUSTIFICATION_EXIST_PKG_DESC, v.JUSTIFICATION_EXPLAIN_CONSID
					, v.SELECT_MEET_ELIGIBILITY, v.SELECT_MEET_CRITERIA, v.SUPERIOR_QUAL_REASON, v.OTHER_FACTORS, v.SPL_AGENCY_NEED_RSN, v.SPL_AGENCY_NEED_RSN_ESS
					, v.QUAL_REAPPT, v.OTHER_EXCEPTS
					, v.BASIC_PAY_RATE_FACTOR1 , v.BASIC_PAY_RATE_FACTOR2 , v.BASIC_PAY_RATE_FACTOR3 , v.BASIC_PAY_RATE_FACTOR4 , v.BASIC_PAY_RATE_FACTOR5
					, v.BASIC_PAY_RATE_FACTOR6 , v.BASIC_PAY_RATE_FACTOR7 , v.BASIC_PAY_RATE_FACTOR8 , v.BASIC_PAY_RATE_FACTOR9 , v.BASIC_PAY_RATE_FACTOR10
					, v.OTHER_RLVNT_FACTOR, v.OTHER_REQ_JUST_APVD, v.OTHER_REQ_SUFF_INFO_PRVD
					, v.OTHER_REQ_INCEN_REQD, v.OTHER_REQ_DOC_PRVD, v.HRS_RVW_CERT, v.HRS_NOT_SPT_RSN, v.RVW_HRS, v.HRS_RVW_DATE
					, v.RCMD_GRADE, v.RCMD_STEP, v.RCMD_SALARY_PER_ANNUM, v.RCMD_LOCALITY_PAY_SCALE, v.RCMD_INC_DEC_AMOUNT, v.RCMD_PERC_DIFF
					, v.OHC_APPRO_REQ, v.RCMD_APPRO_OHC_NAME, v.RCMD_APPRO_OHC_EMAIL, v.RCMD_APPRO_OHC_ID
					, v.RVW_REMARKS, v.APPROVAL_SO_VALUE, v.APPROVAL_SO_ACTING, v.APPROVAL_SO, v.APPROVAL_SO_RESP_DATE, v.APPROVAL_COC_VALUE, v.APPROVAL_COC_ACTING, v.APPROVAL_COC, v.APPROVAL_COC_RESP_DATE
					, v.APPROVAL_DGHO_VALUE, v.APPROVAL_DGHO_ACTING, v.APPROVAL_DGHO, v.APPROVAL_DGHO_RESP_DATE, v.APPROVAL_TABG_VALUE, v.APPROVAL_TABG_ACTING, v.APPROVAL_TABG, v.APPROVAL_TABG_RESP_DATE
					, v.APPROVAL_OHC_VALUE, v.APPROVAL_OHC_ACTING, v.APPROVAL_OHC, v.APPROVAL_OHC_RESP_DATE, v.APPROVER_NOTES);
		END IF;
	END IF;

	EXCEPTION
	WHEN OTHERS THEN
		SP_ERROR_LOG();
END;
/

CREATE OR REPLACE PROCEDURE SP_UPDATE_INCENTIVES_LE_TABLE
(
	I_PROCID            IN      NUMBER
)
IS
	l_count	int;
BEGIN
	IF I_PROCID IS NOT NULL AND I_PROCID > 0 THEN 
		SELECT count(*) INTO l_count FROM VW_INCENTIVES_LE WHERE PROC_ID = I_PROCID;
		IF 0 < l_count THEN
			MERGE INTO INCENTIVES_LE t
			USING ( SELECT * FROM VW_INCENTIVES_LE WHERE PROC_ID = I_PROCID ) v
			ON (t.PROC_ID = v.PROC_ID)
			WHEN MATCHED THEN
				UPDATE 
				SET t.COC_NAME = v.COC_NAME,
					t.COC_EMAIL = v.COC_EMAIL,
					t.COC_ID = v.COC_ID,
					t.COC_TITLE = v.COC_TITLE,
					t.INIT_ANN_LA_RATE = v.INIT_ANN_LA_RATE,
					t.SUPPORT_LE = v.SUPPORT_LE,
					t.PROPS_ANN_LA_RATE = v.PROPS_ANN_LA_RATE,
					t.JUSTIFICATION_LASTMOD_NAME = v.JUSTIFICATION_LASTMOD_NAME,
					t.JUSTIFICATION_LASTMOD_ID = v.JUSTIFICATION_LASTMOD_ID,
					t.JUSTIFICATION_MOD_REASON = v.JUSTIFICATION_MOD_REASON,
					t.JUSTIFICATION_MOD_SUMMARY = v.JUSTIFICATION_MOD_SUMMARY,
					t.JUSTIFICATION_MODIFIER_NAME = v.JUSTIFICATION_MODIFIER_NAME,
					t.JUSTIFICATION_MODIFIER_ID = v.JUSTIFICATION_MODIFIER_ID,
					t.JUSTIFICATION_MODIFIED_DATE = v.JUSTIFICATION_MODIFIED_DATE,
					t.JUSTIFICATION_SKILL_EXP = v.JUSTIFICATION_SKILL_EXP,
					t.JUSTIFICATION_AGENCY_GOAL = v.JUSTIFICATION_AGENCY_GOAL,
					t.SELECTEE_ELIGIBILITY = v.SELECTEE_ELIGIBILITY,
					t.HRS_RVW_CERT = v.HRS_RVW_CERT,
					t.HRS_NOT_SPT_RSN = v.HRS_NOT_SPT_RSN,
					t.RVW_HRS = v.RVW_HRS,
					t.HRS_RVW_DATE = v.HRS_RVW_DATE,
					t.RCMD_LA_RATE = v.RCMD_LA_RATE,
					t.APPROVAL_SO_VALUE = v.APPROVAL_SO_VALUE,
					t.APPROVAL_SO_ACTING = v.APPROVAL_SO_ACTING,
					t.APPROVAL_SO = v.APPROVAL_SO,
					t.APPROVAL_SO_RESP_DATE = v.APPROVAL_SO_RESP_DATE,
					t.APPROVAL_COC_VALUE = v.APPROVAL_COC_VALUE,
					t.APPROVAL_COC_ACTING = v.APPROVAL_COC_ACTING,
					t.APPROVAL_COC = v.APPROVAL_COC,
					t.APPROVAL_COC_RESP_DATE = v.APPROVAL_COC_RESP_DATE,
					t.APPROVAL_DGHO_VALUE = v.APPROVAL_DGHO_VALUE,
					t.APPROVAL_DGHO_ACTING = v.APPROVAL_DGHO_ACTING,
					t.APPROVAL_DGHO = v.APPROVAL_DGHO,
					t.APPROVAL_DGHO_RESP_DATE = v.APPROVAL_DGHO_RESP_DATE,
					t.APPROVAL_TABG_VALUE = v.APPROVAL_TABG_VALUE,
					t.APPROVAL_TABG_ACTING = v.APPROVAL_TABG_ACTING,
					t.APPROVAL_TABG = v.APPROVAL_TABG,
					t.APPROVAL_TABG_RESP_DATE = v.APPROVAL_TABG_RESP_DATE
			WHEN NOT MATCHED THEN
				INSERT (t.PROC_ID,
					t.COC_NAME,
					t.COC_EMAIL,
					t.COC_ID,
					t.COC_TITLE,
					t.INIT_ANN_LA_RATE,
					t.SUPPORT_LE,
					t.PROPS_ANN_LA_RATE,
					t.JUSTIFICATION_LASTMOD_NAME, 
					t.JUSTIFICATION_LASTMOD_ID,
					t.JUSTIFICATION_MOD_REASON,
					t.JUSTIFICATION_MOD_SUMMARY,
					t.JUSTIFICATION_MODIFIER_NAME,
					t.JUSTIFICATION_MODIFIER_ID,
					t.JUSTIFICATION_MODIFIED_DATE,
					t.JUSTIFICATION_SKILL_EXP,
					t.JUSTIFICATION_AGENCY_GOAL,
					t.SELECTEE_ELIGIBILITY,
					t.HRS_RVW_CERT,
					t.HRS_NOT_SPT_RSN,
					t.RVW_HRS,
					t.HRS_RVW_DATE,
					t.RCMD_LA_RATE,
					t.APPROVAL_SO_VALUE,
					t.APPROVAL_SO_ACTING,
					t.APPROVAL_SO,
					t.APPROVAL_SO_RESP_DATE,
					t.APPROVAL_COC_VALUE,
					t.APPROVAL_COC_ACTING,
					t.APPROVAL_COC,
					t.APPROVAL_COC_RESP_DATE,
					t.APPROVAL_DGHO_VALUE,
					t.APPROVAL_DGHO_ACTING,
					t.APPROVAL_DGHO,
					t.APPROVAL_DGHO_RESP_DATE,
					t.APPROVAL_TABG_VALUE,
					t.APPROVAL_TABG_ACTING,
					t.APPROVAL_TABG,
					t.APPROVAL_TABG_RESP_DATE)
				VALUES (
					v.PROC_ID,
					v.COC_NAME,
					v.COC_EMAIL,
					v.COC_ID,
					v.COC_TITLE,
					v.INIT_ANN_LA_RATE,
					v.SUPPORT_LE,
					v.PROPS_ANN_LA_RATE,
					v.JUSTIFICATION_LASTMOD_NAME, 
					v.JUSTIFICATION_LASTMOD_ID,
					v.JUSTIFICATION_MOD_REASON,
					v.JUSTIFICATION_MOD_SUMMARY,
					v.JUSTIFICATION_MODIFIER_NAME,
					v.JUSTIFICATION_MODIFIER_ID,
					v.JUSTIFICATION_MODIFIED_DATE,
					v.JUSTIFICATION_SKILL_EXP,
					v.JUSTIFICATION_AGENCY_GOAL,
					v.SELECTEE_ELIGIBILITY,
					v.HRS_RVW_CERT,
					v.HRS_NOT_SPT_RSN,
					v.RVW_HRS,
					v.HRS_RVW_DATE,
					v.RCMD_LA_RATE,
					v.APPROVAL_SO_VALUE,
					v.APPROVAL_SO_ACTING,
					v.APPROVAL_SO,
					v.APPROVAL_SO_RESP_DATE,
					v.APPROVAL_COC_VALUE,
					v.APPROVAL_COC_ACTING,
					v.APPROVAL_COC,
					v.APPROVAL_COC_RESP_DATE,
					v.APPROVAL_DGHO_VALUE,
					v.APPROVAL_DGHO_ACTING,
					v.APPROVAL_DGHO,
					v.APPROVAL_DGHO_RESP_DATE,
					v.APPROVAL_TABG_VALUE,
					v.APPROVAL_TABG_ACTING,
					v.APPROVAL_TABG,
					v.APPROVAL_TABG_RESP_DATE);
		END IF;
	END IF;

	EXCEPTION
	WHEN OTHERS THEN
		SP_ERROR_LOG();
END;
/

CREATE OR REPLACE PROCEDURE SP_UPDATE_INCENTIVES_TABLE
(
    I_PROCID            IN      NUMBER
    , I_FIELD_DATA      IN      XMLTYPE
)
IS
    V_XMLVALUE             XMLTYPE;
    V_INCENTIVE_TYPE     NVARCHAR2(50);

    BEGIN
        IF I_PROCID IS NOT NULL AND I_PROCID > 0 THEN
            V_XMLVALUE := I_FIELD_DATA.EXTRACT('/formData/items/item[id="incentiveType"]/value/text()');
            IF V_XMLVALUE IS NOT NULL THEN
                V_INCENTIVE_TYPE := V_XMLVALUE.GETSTRINGVAL();
            ELSE
                V_INCENTIVE_TYPE := NULL;
            END IF;

            SP_UPDATE_INCENTIVES_COM_TABLE(I_PROCID);

            IF 'PCA' = V_INCENTIVE_TYPE THEN
                SP_UPDATE_INCENTIVES_PCA_TABLE(I_PROCID);
            ELSIF 'SAM' = V_INCENTIVE_TYPE THEN
                SP_UPDATE_INCENTIVES_SAM_TABLE(I_PROCID);
            ELSIF 'LE' = V_INCENTIVE_TYPE THEN
                SP_UPDATE_INCENTIVES_LE_TABLE(I_PROCID);
            END IF;
        END IF;

        EXCEPTION
        WHEN OTHERS THEN
            SP_ERROR_LOG();
    END;
/

GRANT EXECUTE ON HHS_CMS_HR.SP_UPDATE_PV_INCENTIVES TO HHS_CMS_HR_RW_ROLE;
GRANT EXECUTE ON HHS_CMS_HR.SP_UPDATE_INCENTIVES_COM_TABLE TO HHS_CMS_HR_RW_ROLE;
GRANT EXECUTE ON HHS_CMS_HR.SP_UPDATE_INCENTIVES_PCA_TABLE TO HHS_CMS_HR_RW_ROLE;
GRANT EXECUTE ON HHS_CMS_HR.SP_UPDATE_INCENTIVES_SAM_TABLE TO HHS_CMS_HR_RW_ROLE;
GRANT EXECUTE ON HHS_CMS_HR.SP_UPDATE_INCENTIVES_LE_TABLE TO HHS_CMS_HR_RW_ROLE;
GRANT EXECUTE ON HHS_CMS_HR.SP_UPDATE_INCENTIVES_TABLE TO HHS_CMS_HR_RW_ROLE;

GRANT EXECUTE ON HHS_CMS_HR.SP_UPDATE_PV_INCENTIVES TO HHS_CMS_HR_DEV_ROLE;
GRANT EXECUTE ON HHS_CMS_HR.SP_UPDATE_INCENTIVES_COM_TABLE TO HHS_CMS_HR_DEV_ROLE;
GRANT EXECUTE ON HHS_CMS_HR.SP_UPDATE_INCENTIVES_PCA_TABLE TO HHS_CMS_HR_DEV_ROLE;
GRANT EXECUTE ON HHS_CMS_HR.SP_UPDATE_INCENTIVES_SAM_TABLE TO HHS_CMS_HR_DEV_ROLE;
GRANT EXECUTE ON HHS_CMS_HR.SP_UPDATE_INCENTIVES_LE_TABLE TO HHS_CMS_HR_DEV_ROLE;
GRANT EXECUTE ON HHS_CMS_HR.SP_UPDATE_INCENTIVES_TABLE TO HHS_CMS_HR_DEV_ROLE;
/