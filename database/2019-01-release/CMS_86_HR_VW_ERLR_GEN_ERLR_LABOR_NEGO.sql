--------------------------------------------------------
--  DDL for Function FN_GET_2ND_SUB_ORG
--------------------------------------------------------

/**
 * Get 2nd sub organization by admin code
 *
 *
 * @param I_ADMIN_CD - Admin Code
 *
 * @return NVARCHAR2 - 2nd Sub organization code and description
 */
CREATE OR REPLACE FUNCTION FN_GET_2ND_SUB_ORG
(
	I_ADMIN_CD IN  VARCHAR2	
)
RETURN VARCHAR2
IS
	V_RETURN_VAL    VARCHAR2(300);
	V_VALUE  VARCHAR2(30);	
    V_VALUE2 VARCHAR2(30);    
BEGIN
    --DBMS_OUTPUT.PUT_LINE('------- START: FN_GET_2ND_SUB_ORG -------');
    --DBMS_OUTPUT.PUT_LINE('-- PARAMETERS --');
    --DBMS_OUTPUT.PUT_LINE('    I_ADMIN_CD         = ' || I_ADMIN_CD );

    SELECT SUBSTR(I_ADMIN_CD, 1, 2) INTO V_VALUE FROM DUAL;
    IF V_VALUE != 'FC' THEN    
        V_RETURN_VAL := 'OTHERS';
    ELSE
        SELECT SUBSTR(I_ADMIN_CD, 3, 1) INTO V_VALUE FROM DUAL;
        CASE V_VALUE
            WHEN 'C' THEN V_RETURN_VAL := 'FCC';
            WHEN 'E' THEN V_RETURN_VAL := 'FCE';
            WHEN 'F' THEN V_RETURN_VAL := 'FCF';
            WHEN 'G' THEN V_RETURN_VAL := 'FCG';
            WHEN 'H' THEN V_RETURN_VAL := 'FCH';
            WHEN 'J' THEN V_RETURN_VAL := 'FCJ';
            WHEN 'L' THEN V_RETURN_VAL := 'FCL';
            WHEN 'M' THEN 
                SELECT SUBSTR(I_ADMIN_CD, 4, 1) INTO V_VALUE2 FROM DUAL;
                CASE V_VALUE2
                    WHEN 'B' THEN V_RETURN_VAL := 'FCMB';
                    WHEN 'C' THEN V_RETURN_VAL := 'FCMC';
                    WHEN 'G' THEN V_RETURN_VAL := 'FCMG';
                    WHEN 'H' THEN V_RETURN_VAL := 'FCMH';
                    WHEN 'J' THEN V_RETURN_VAL := 'FCMJ';
                    WHEN 'K' THEN V_RETURN_VAL := 'FCMK';
                    WHEN 'N' THEN V_RETURN_VAL := 'FCMN';
                    WHEN 'P' THEN V_RETURN_VAL := 'FCMP';
                    WHEN 'Q' THEN V_RETURN_VAL := 'FCMQ'; 
                END CASE;
            WHEN 'N' THEN V_RETURN_VAL := 'FCN';
            WHEN 'P' THEN V_RETURN_VAL := 'FCP';
            WHEN 'Q' THEN V_RETURN_VAL := 'FCQ';
            WHEN 'R' THEN V_RETURN_VAL := 'FCR';
            WHEN 'S' THEN V_RETURN_VAL := 'FCS';
            WHEN 'T' THEN V_RETURN_VAL := 'FCT';
            WHEN 'V' THEN V_RETURN_VAL := 'FCV';
            WHEN 'W' THEN V_RETURN_VAL := 'FCW';
            WHEN 'X' THEN V_RETURN_VAL := 'FCX';
            ELSE
                V_RETURN_VAL := 'OTHERS';    
         END CASE; 
    END IF;
    
    RETURN V_RETURN_VAL;
EXCEPTION
	WHEN OTHERS THEN
		SP_ERROR_LOG();
		--DBMS_OUTPUT.PUT_LINE('ERROR occurred while executing FN_GET_2ND_SUB_ORG -------------------');
		--DBMS_OUTPUT.PUT_LINE('Error code    = ' || SQLCODE);
		--DBMS_OUTPUT.PUT_LINE('Error message = ' || SQLERRM);
		RETURN NULL;
END;

/

---------------------------------------------------------
--  DDL for VW_ERLR_GEN
--------------------------------------------------------

CREATE OR REPLACE VIEW VW_ERLR_GEN
AS
SELECT
    EG.ERLR_CASE_NUMBER
    , EC.ERLR_JOB_REQ_NUMBER
    , EC.PROCID    
    , EC.ERLR_CASE_CREATE_DT
	, (SELECT M.NAME FROM BIZFLOW.MEMBER M WHERE M.MEMBERID = EG.GEN_PRIMARY_SPECIALIST AND ROWNUM = 1)  AS GEN_PRIMARY_SPECIALIST_NAME	
	, (SELECT M.NAME FROM BIZFLOW.MEMBER M WHERE M.MEMBERID = EG.GEN_SECONDARY_SPECIALIST AND ROWNUM = 1)  AS GEN_SECONDARY_SPECIALIST_NAME
	, EG.GEN_CUSTOMER_NAME
	, EG.GEN_CUSTOMER_PHONE
	, EG.GEN_CUSTOMER_ADMIN_CD
	, EG.GEN_CUSTOMER_ADMIN_CD_DESC
	, EG.GEN_EMPLOYEE_NAME
	, EG.GEN_EMPLOYEE_PHONE
	, EG.GEN_EMPLOYEE_ADMIN_CD
	, EG.GEN_EMPLOYEE_ADMIN_CD_DESC
    , FN_GET_2ND_SUB_ORG(EG.GEN_EMPLOYEE_ADMIN_CD) AS GEN_EMPLOYEE_2ND_SUB_ORG
	, EG.GEN_CASE_DESC
	, (SELECT L.TBL_LABEL FROM TBL_LOOKUP L WHERE L.TBL_ID = EG.GEN_CASE_STATUS AND ROWNUM = 1) AS GEN_CASE_STATUS
	, EG.GEN_CUST_INIT_CONTACT_DT
	, EG.GEN_PRIMARY_REP_AFFILIATION
	, (SELECT M.NAME FROM BIZFLOW.MEMBER M WHERE M.MEMBERID = EG.GEN_CMS_PRIMARY_REP_ID AND ROWNUM = 1) AS GEN_CMS_PRIMARY_REP_ID
	, EG.GEN_CMS_PRIMARY_REP_PHONE
	, EG.GEN_NON_CMS_PRIMARY_FNAME
	, EG.GEN_NON_CMS_PRIMARY_MNAME
	, EG.GEN_NON_CMS_PRIMARY_LNAME
	, EG.GEN_NON_CMS_PRIMARY_EMAIL
	, EG.GEN_NON_CMS_PRIMARY_PHONE
	, EG.GEN_NON_CMS_PRIMARY_ORG
	, EG.GEN_NON_CMS_PRIMARY_ADDR
	, (SELECT L.TBL_LABEL FROM TBL_LOOKUP L WHERE L.TBL_ID = EG.GEN_CASE_TYPE AND ROWNUM = 1) AS GEN_CASE_TYPE
	, FN_GET_CASE_CATEGORY(EG.GEN_CASE_CATEGORY) AS GEN_CASE_CATEGORY
	, EG.GEN_INVESTIGATION
	, EG.GEN_INVESTIGATE_START_DT
	, EG.GEN_INVESTIGATE_END_DT
	, EG.GEN_STD_CONDUCT
	, GEN_STD_CONDUCT_TYPE
	, CC_FINAL_ACTION
	, EG.CC_CASE_COMPLETE_DT
    , (SELECT STATE FROM BIZFLOW.PROCS P WHERE P.PROCID = EC.PROCID) AS BF_PROCS_STATE
    , ETPH.THRD_PRTY_APPEAL_TYPE    
FROM
	ERLR_GEN EG
    LEFT OUTER JOIN ERLR_CASE EC ON EG.ERLR_CASE_NUMBER = EC.ERLR_CASE_NUMBER
    LEFT OUTER JOIN ERLR_3RDPARTY_HEAR ETPH ON EG.ERLR_CASE_NUMBER = ETPH.ERLR_CASE_NUMBER
;
/


--------------------------------------------------------
--  DDL for VW_ERLR_LABOR_NEGO
--------------------------------------------------------
CREATE OR REPLACE VIEW VW_ERLR_LABOR_NEGO
AS
SELECT
    LN.ERLR_CASE_NUMBER
    , EC.ERLR_JOB_REQ_NUMBER
    , EC.PROCID    
    , EC.ERLR_CASE_CREATE_DT
    , LN_NEGOTIATION_TYPE	
    , LN_INITIATOR
	, LN_DEMAND2BARGAIN_DT
	, LN_BRIEFING_REQUEST
	, LN_PROPOSAL_SUBMISSION_DT
	, LN_PROPOSAL_SUBMISSION
	, LN_PROPOSAL_NEGOTIABLE
	, LN_NON_NEGOTIABLE_LETTER
	, LN_FILE_ULP
	, LN_PROPOSAL_INFO_GROUND_RULES
	, LN_PRPSAL_INFO_NEG_COMMENCE_DT
	, LN_LETTER_PROVIDED
	, LN_LETTER_PROVIDED_DT
	, LN_NEGOTIABLE_PROPOSAL
	, LN_BARGAINING_BEGAN_DT
	, LN_IMPASSE_DT
	, LN_FSIP_DECISION_DT
	, LN_BARGAINING_END_DT
	, LN_AGREEMENT_DT
	, LN_SUMMARY_OF_ISSUE
	, LN_SECON_LETTER_REQUEST
	, LN_2ND_LETTER_PROVIDED
	, LN_NEGOTIABL_ISSUE_SUMMARY
	, LN_MNGMNT_ARTICLE4_NTC_DT
	, LN_MNGMNT_NOTICE_RESPONSE
	, LN_MNGMNT_BRIEFING_REQUEST
	, LN_MNGMNT_BARGAIN_SBMSSION_DT
	, LN_MNGMNT_PROPOSAL_SBMSSION
    , LN_BRIEFING_DT
    , LN_2ND_PROVIDED_DT
    , LN_BRIEFING_REQUESTED2_DT
FROM
	ERLR_LABOR_NEGO LN
    LEFT OUTER JOIN ERLR_CASE EC ON LN.ERLR_CASE_NUMBER = EC.ERLR_CASE_NUMBER
;
/
