-- CMS_89_HR_Incentives_HHS_FN_GET_ACCCALDAYSDIFF_function.sql
-- CMS_90_HR_ERLR_UPdate_condition.sql
-- CMS_125_BF_CAL_GrantPermission.sql
-- CMS_134_HHS_FN_ADD_BUSDAY.sql
-- CMS_136_HHS_FN_ADD_BUSDAY.sql
-- CMS_141_BF_HHS_FN_ADD_BUSDAY.sql

SET DEFINE OFF;

create or replace FUNCTION HHS_FN_GET_ACCCALDAYSDIFF(
	I_PROCID               IN      INT
	, I_ACTNAME            IN      VARCHAR2
)
RETURN INT
IS
	V_EVENT CHAR(1);
	V_EXECDTIME DATE;
	V_END DATE;
	V_FOUND_COMPLETED_DATE CHAR(1);
	V_DAYDIFF INT;
	V_DAYDIFF_TOTAL INT;

	CURSOR CUR_AUDITINFO IS
		SELECT EVENT, EXECDTIME
		FROM AUDITINFO
		WHERE OBJNAME = I_ACTNAME
			AND EVENT IN ('R', 'C')
			AND OBJTYPE = 'A'
			AND PROCID = I_PROCID
		ORDER BY EXECSEQ DESC;
BEGIN
	V_FOUND_COMPLETED_DATE := 'N';
	V_DAYDIFF := 0;
	V_DAYDIFF_TOTAL := 0;

	OPEN CUR_AUDITINFO;

	LOOP
		FETCH CUR_AUDITINFO INTO V_EVENT, V_EXECDTIME;
		EXIT WHEN CUR_AUDITINFO%NOTFOUND;

		IF (V_EVENT = 'R' AND V_FOUND_COMPLETED_DATE = 'Y') THEN
			SELECT ( V_END - V_EXECDTIME ) INTO V_DAYDIFF FROM dual;
			V_DAYDIFF_TOTAL := V_DAYDIFF_TOTAL + V_DAYDIFF;
			V_FOUND_COMPLETED_DATE := 'N';
		ELSIF (V_EVENT = 'C') THEN
			V_FOUND_COMPLETED_DATE := 'Y';
			V_END := V_EXECDTIME;
		END IF;

	END LOOP;

	CLOSE CUR_AUDITINFO;
	RETURN V_DAYDIFF_TOTAL;
END;
/

GRANT EXECUTE ON BIZFLOW.HHS_FN_GET_ACCCALDAYSDIFF TO HHS_CMS_HR WITH GRANT OPTION;
GRANT EXECUTE ON BIZFLOW.HHS_FN_GET_ACCCALDAYSDIFF TO HHS_CMS_HR_RW_ROLE;
GRANT EXECUTE ON BIZFLOW.HHS_FN_GET_ACCCALDAYSDIFF TO HHS_CMS_HR_DEV_ROLE;
GRANT EXECUTE ON BIZFLOW.HHS_FN_GET_ACCCALDAYSDIFF TO BF_DEV_ROLE;


--
update conddef set expr = '([IV:caseStatus] != "Closed")' where expr = '([IV:caseStatus] != "closeNow")';
update conddef set expr = '([IV:caseStatus] != "Closed")' where expr = '([IV:caseStatus] != "closeNow")';
update cond    set expr = '([IV:caseStatus] == "Closed")' where expr = '([IV:caseStatus] == "closeNow")';
update cond    set expr = '([IV:caseStatus] == "Closed")' where expr = '([IV:caseStatus] == "closeNow")';
/


--In order to give select permission to a view in HHS_CMS_HR
GRANT SELECT ON BIZFLOW.CAL TO HHS_CMS_HR WITH GRANT OPTION;
GRANT SELECT ON BIZFLOW.CAL TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT ON BIZFLOW.CAL TO HHS_CMS_HR_DEV_ROLE;
GRANT SELECT ON BIZFLOW.CAL TO BF_DEV_ROLE;
/

create or replace FUNCTION HHS_FN_ADD_BUSDAY 
(
  I_ACTSTART IN DATE 
, I_SLADAYS IN INT 
) 
RETURN DATE
IS
  V_DAY DATE;

BEGIN
    IF I_ACTSTART IS NOT NULL AND I_SLADAYS > 0 THEN
        SELECT CALDTIME 
          INTO V_DAY
          FROM (SELECT 
                    C.CALDTIME AS CALDTIME, ROW_NUMBER() OVER (ORDER BY C.CALDTIME ASC) AS SEQNUM
                  FROM BIZFLOW.CAL C
                    INNER JOIN BIZFLOW.CALHEAD CH
                   ON CH.DAYOFWEEK = C.DAYOFWEEK
                   WHERE CH.DAYTYPE <> 'H'
                    AND C.CALDTIME NOT IN (SELECT CALDTIME FROM BIZFLOW.MEMBERCAL WHERE DAYTYPE = 'H' AND MEMBERID = '0000000000')
                    AND CH.MEMBERID = '0000000000'
                    AND C.CALDTIME > I_ACTSTART
		    AND C.CALDTIME < I_ACTSTART+((30+I_SLADAYS)*2)
                 ) TBL_NEW
        WHERE SEQNUM = I_SLADAYS;
        
        RETURN V_DAY;
    ELSE
        RETURN I_ACTSTART;
    END IF;

END;
/

GRANT EXECUTE ON BIZFLOW.HHS_FN_ADD_BUSDAY TO HHS_CMS_HR WITH GRANT OPTION;
GRANT EXECUTE ON BIZFLOW.HHS_FN_ADD_BUSDAY TO HHS_CMS_HR_RW_ROLE;
GRANT EXECUTE ON BIZFLOW.HHS_FN_ADD_BUSDAY TO HHS_CMS_HR_DEV_ROLE;
GRANT EXECUTE ON BIZFLOW.HHS_FN_ADD_BUSDAY TO BF_DEV_ROLE;

/

commit;
/
