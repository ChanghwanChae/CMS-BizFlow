-- CMS_11_HR_ERLR_GEN.sql
-- CMS_18_HR_ERLR_GEN.sql
-- CMS_21_HR_CREATE_INSERT_INCENTIVES_LOOKUP.sql
-- CMS_21_HR_ERLR_column_resize.sql
-- CMS_37_HR_Alter_Tables_INCENTIVES_PDP.sql
-- CMS_44_HR_INCENTIVE_CREATE_TALE_SP.sql
-- CMS_46_HR_ALTER_INCENTIVES_SAM_tables.sql
-- CMS_47_HR_INCENTIVES_SAM_BIUR.sql
-- CMS_51_HR_ALTER_INCENTIVES_LE_tables.sql
-- CMS_52_HR_ALTER_INCENTIVES_LE_JUST_HISTORY_tables.sql
-- CMS_53_HR_INCENTIVES_LE_BIUR_trigger.sql
-- CMS_58_HR_Alter_table_ERLR.sql
-- CMS_60_HR_Alter_table_INCENTIVES_PCA.sql
-- CMS_65_HR_Alter_table_INCENTIVES_COM.sql
-- CMS_68_HR_Alter_table_INCENTIVES_PDP.sql
-- CMS_82_HR_Alter_table_type_of_standard_PD.sql
-- CMS_98_HR_SLA_HIRING_TIMELINE.sql
-- CMS_100_HR_Alter_table_INCENTIVES_COM.sql
-- CMS_105_HR_ERLR_column_resize.sql
-- CMS_108_HR_SLA_HIREING_TIMELINE.sql
-- CMS_129_HR_UPDATE_INCENTIVES_TALE.
-- CMS_137_HR_SLA_HIRING_TIMELINE.sql
-- CMS_138_HR_SLA_TYPES.sql
-- CMS_139_HR_SLA_PKS.sql
-- CMS_142_HR_SLA_PKS.sql
-- CMS_144_HR_SLA_PKS.sql
-- CMS_146_HR_SLA_PKS.sql
-- CMS_159_HR_ALTER_ERLR_GRIEVANCE.sql
-- CMS_72_HR_GRANT_INCENTIVES_DB_OBJECTS.sql
-- CMS_81_TTH_Table_Comments.sql
-- CMS_167_HR_DB_insert_seed_data_ug.sql

SET DEFINE OFF;


ALTER TABLE ERLR_GEN MODIFY GEN_CASE_DESC NVARCHAR2(1000);
ALTER TABLE ERLR_GEN ADD GEN_CASE_CATEGORY_NAME NVARCHAR2(1000);
ALTER TABLE ERLR_GEN ADD GEN_CASE_TYPE_NAME NVARCHAR2(150);
ALTER TABLE ERLR_GEN ADD GEN_CLASS NVARCHAR2(10);
ALTER TABLE ERLR_GEN ADD GEN_PRIMARY_SPECIALIST_NAME NVARCHAR2(150);
ALTER TABLE ERLR_GEN ADD GEN_SECONDARY_SPECIALIST_NAME NVARCHAR2(150);
ALTER TABLE ERLR_GEN ADD GEN_EMPLOYEE_2ND_SUB_ORG NVARCHAR2(255);
ALTER TABLE ERLR_GEN ADD MOD_DT DATE DEFAULT SYSDATE;

CREATE UNIQUE INDEX ERLR_GEN_UK2 ON ERLR_GEN (PROCID);
DROP INDEX ERLR_CASE_UK1;
CREATE UNIQUE INDEX ERLR_CASE_UK1 ON ERLR_CASE (ERLR_CASE_NUMBER, PROCID);
CREATE UNIQUE INDEX ERLR_CASE_UK2 ON ERLR_CASE (PROCID, ERLR_CASE_NUMBER);
/

ALTER TABLE ERLR_GEN ADD CANCEL_REASON NVARCHAR2(255);
/


--------------------------------------------------------
--  DDL for Table INCENTIVES_LOOKUP
--------------------------------------------------------

CREATE TABLE INCENTIVES_LOOKUP
(
	LOOKUP_TYPE VARCHAR2(100),
	LOOKUP_TYPE_VALUE VARCHAR2(150),
	TIER VARCHAR2(10),
	MIN_RANGE NUMBER(10),
	MAX_RANGE NUMBER(10),
	MONETARY_RANGE_LABEL VARCHAR2(50)
);

GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LOOKUP TO BF_DEV_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LOOKUP TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LOOKUP TO HHS_CMS_HR_DEV_ROLE;
/

INSERT ALL
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('LevelOfExecutiveResponsability','Staff Physician or Dentist','1','$0',0,0)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('LevelOfExecutiveResponsability','Non-Supervisory Regional Office Chief Physician or Dentist','1','$0',0,0)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('LevelOfExecutiveResponsability','Supervisor','2','$0 – $35,000',0,35000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('LevelOfExecutiveResponsability','Division Director','2','$0 – $35,000',0,35000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('LevelOfExecutiveResponsability','Deputy Division Director','2','$0 – $35,000',0,35000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('LevelOfExecutiveResponsability','Group Director','3a','$20,000 – $55,000',0,55000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('LevelOfExecutiveResponsability','Deputy Group Director','3a','$20,000 – $55,000',0,55000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('LevelOfExecutiveResponsability','Center or Office Director','3b','$40,000 – $70,000',0,70000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('LevelOfExecutiveResponsability','Center or Office Deputy Director','3b','$40,000 – $70,000',0,70000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('LevelOfExecutiveResponsability','CMS Chief Physician or Dentist','3b','$40,000 – $70,000',0,70000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('LevelOfExecutiveResponsability','CMS Deputy Chief Physician or Dentist','3b','$40,000 – $70,000',0,70000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('ExceptionalQualificationFactor','1','N/A','Up to $10,000',0,10000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('ExceptionalQualificationFactor','2','N/A','Up to $10,000',0,10000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('ExceptionalQualificationFactor','3','N/A','Up to $7,000',0,7000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('ExceptionalQualificationFactor','4','N/A','Up to $7,000',0,7000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('ExceptionalQualificationFactor','5','N/A','Up to $6,000',0,6000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','1','1','null',103395,225000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','1','2','null',110000,234000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','1','3','null',120000,262000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','2','1','null',103395,264000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','2','2','null',115000,292000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','2','3','null',130000,320000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','3','1','null',103395,348000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','3','2','null',120000,365000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','3','3','null',135000,385000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','4','1','null',103395,400000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','4','2','null',125000,400000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','5','1','null',150000,309000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','5','2','null',145000,289000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','5','3','null',140000,270000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','6','1','null',145000,265000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','6','2','null',145000,245000)
	INTO HHS_CMS_HR.INCENTIVES_LOOKUP (LOOKUP_TYPE, LOOKUP_TYPE_VALUE, TIER, MONETARY_RANGE_LABEL, MIN_RANGE, MAX_RANGE)
	VALUES ('PayTable','6','3','null',130000,235000)
SELECT * FROM DUAL;
/

ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_ERLR_ARBIT_PHONE_NUM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_ERLR_ARBIT_PHONE_NUM_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_ERLR_ARBIT_PHONE_NUM_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_FNM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_FNM_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_FNM_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_LNM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_LNM_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_LNM_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_MNM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_MNM_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_MNM_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_PANEL_MEMBER_FNAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_PANEL_MEMBER_LNAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_PANEL_MEMBER_MNAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_PANEL_MEMBER_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_FIRST_NAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_FIRST_NAME_2 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_FIRST_NAME_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_FIRST_NAME_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_LAST_NAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_LAST_NAME_2 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_LAST_NAME_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_LAST_NAME_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_MIDDLE_NAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_MIDDLE_NAME_2 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_MIDDLE_NAME_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_MIDDLE_NAME_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_ORG_AFFIL NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_PHONE_NUM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_PHONE_NUM_2 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_PHONE_NUM_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_PHONE_NUM_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_CURRENT_INFO_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_CURRENT_INFO_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_FINAL_INFO_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_FINAL_INFO_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_FINAL_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_FINAL_PPLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_FINAL_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_PPLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_PROPOSED_INFO_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_PROPOSED_INFO_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_PROPOSED_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_PROPOSED_PPLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_PROPOSED_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_RE_ASSIGNMENT_CURR_ORG NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_RE_ASSIGNMENT_FINAL_ORG NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_CMS_PRIMARY_REP_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_CUSTOMER_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_EMPLOYEE_ADMIN_CD NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_EMPLOYEE_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_NON_CMS_PRIMARY_FNAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_NON_CMS_PRIMARY_LNAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_NON_CMS_PRIMARY_MNAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_NON_CMS_PRIMARY_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_INFO_REQUEST MODIFY IR_CMS_REQUESTER_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_INFO_REQUEST MODIFY IR_NCMS_REQUESTER_FIRST_NAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_INFO_REQUEST MODIFY IR_NCMS_REQUESTER_LAST_NAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_INFO_REQUEST MODIFY IR_NCMS_REQUESTER_MN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_INFO_REQUEST MODIFY IR_NCMS_REQUESTER_ORG_AFFIL NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_INFO_REQUEST MODIFY IR_NON_CMS_REQUESTER_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_CUR_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_CUR_JOB_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_CUR_PAY_PLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_CUR_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_CUR_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_FIN_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_FIN_JOB_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_FIN_PAY_PLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_FIN_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_FIN_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_PRPS_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_PRPS_JOB_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_PRPS_PAY_PLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_PRPS_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_PRP_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_REASGN_FIN_ORG_NM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_REASGN_CUR_ORG_NM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_CURRENT_INFO_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_CURRENT_INFO_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_FINAL_ADMIN_CODE_FINAL_ORG NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_FINAL_INFO_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_FINAL_INFO_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_FINAL_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_FINAL_PPLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_FINAL_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PPLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROPOSED_INFO_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROPOSED_INFO_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROPOSED_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROPOSED_PPLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROPOSED_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_RE_ASSIGNMENT_CURR_ORG NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROBATION_CONDUCT NVARCHAR2(5) ;
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROBATION_PERFORMANCE NVARCHAR2(5) ;
/

ALTER TABLE STRATCON_GEN
MODIFY (
  SG_HRL_ID NVARCHAR2(32),
  SG_HRL_TITLE NVARCHAR2(200),
  SG_HRL_ORG NVARCHAR2(200)
);

ALTER TABLE CLASSIF_STRATCON
MODIFY (
  HRL_ID NVARCHAR2(32),
  HRL_TITLE NVARCHAR2(200),
  HRL_ORG NVARCHAR2(200)
);

ALTER TABLE ELIG_QUAL
MODIFY (
  HRL_ID NVARCHAR2(32),
  HRL_TITLE NVARCHAR2(200),
  HRL_ORG NVARCHAR2(200)
);
/

------------------------------------------------------------------
-- ALTER DDL for Panel tab
------------------------------------------------------------------
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP DROP (PANEL_MEMBER_NAME, PANEL_MEMBER_COMPONENT, PANEL_ROLE, VOTING_STATUS, PANEL_RECOMMENDED_COMPENSATION);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY PANEL_CURRENT_SALARY NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY PANEL_PDP_AMOUNT NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY PANEL_RECOMM_ANNUAL_SALARY NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP ADD DATE_OF_RECOMMENDATION DATE;

------------------------------------------------------------------
-- ALTER DDL for Details tab
------------------------------------------------------------------
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY EXEC_RESP_AMT_REQUESTED NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY EXPT_QF_Q1_AMT_REQUESTED NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY EXPT_QF_Q2_AMT_REQUESTED NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY EXPT_QF_Q3_AMT_REQUESTED NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY EXPT_QF_Q4_AMT_REQUESTED NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY EXPT_QF_Q5_AMT_REQUESTED NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY TOTAL_AMT_EXPT_QUALIFICATIONS NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY CURRENT_PAY_RECRUITMENT NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY CURRENT_PAY_RELOCATION NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY CURRENT_PAY_RETENTION NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY CURRENT_PAY_3R_TOTAL NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY CURRENT_PAY_BASE NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY CURRENT_PAY_LOCALITY_MARKET NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY CURRENT_PAY_TOTAL_ANNUAL_PAY NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY CURRENT_PAY_TOTAL_COMPENSATION NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY PROPOSED_PAY_RECRUITMENT NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY PROPOSED_PAY_RELOCATION NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY PROPOSED_PAY_RETENTION NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY PROPOSED_PAY_TOTAL_3R NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY PROPOSED_GS_BASE_PAY NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY PROPOSED_MARKET_PAY NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY PROPOSED_TOTAL_ANNUAL_PAY NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY PROPOSED_TOTAL_ANNUAL_COMPENS NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY CLINICAL_SPECIALTY_BOARD_CERT VARCHAR2(2000); -- MULTI VALUES
ALTER TABLE HHS_CMS_HR.INCENTIVES_PDP MODIFY INCENTIVES_APPROVED_BY_TABG VARCHAR2(2000); -- MULTI VALUES


------------------------------------------------------------------
-- CREATE DDL for Panel Members
------------------------------------------------------------------
CREATE TABLE HHS_CMS_HR.INCENTIVES_PDP_PANEL 
(
    PROC_ID         NUMBER(10,0) NOT NULL, 
    SEQ_NUM         NUMBER(10,0) NOT NULL, 
    FULL_NAME       VARCHAR2(200),
    COMPONENT_NAME  VARCHAR2(200),
    EMAIL           VARCHAR2(100),
    HHSID           VARCHAR2(20),
    ADMIN_CODE      VARCHAR2(20),
    PANEL_ROLE      VARCHAR2(20),
    VOTING_STATUS   VARCHAR2(50),
    PANEL_REC_COMP  VARCHAR2(200)
);
CREATE UNIQUE INDEX HHS_CMS_HR.INCENTIVES_PDP_PANEL_PK ON HHS_CMS_HR.INCENTIVES_PDP_PANEL (PROC_ID, SEQ_NUM);
/
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_PDP_PANEL TO BF_DEV_ROLE;
GRANT DELETE, INSERT, SELECT, UPDATE ON HHS_CMS_HR.INCENTIVES_PDP_PANEL TO HHS_CMS_HR_RW_ROLE;
GRANT DELETE, INSERT, SELECT, UPDATE ON HHS_CMS_HR.INCENTIVES_PDP_PANEL TO HHS_CMS_HR_DEV_ROLE;


--------------------------------------------------------
--  DDL for Table INCENTIVES_REQUEST_CONTROL
--------------------------------------------------------

CREATE TABLE HHS_CMS_HR.INCENTIVES_REQUEST_CONTROL 
(   RC_DATE			DATE, 
    RC_SEQ			NUMBER(4,0) DEFAULT 1001, 
    RC_REQUEST_NUM	VARCHAR2(13 BYTE)
);

/
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_PDP_PANEL TO BF_DEV_ROLE;
GRANT DELETE, INSERT, SELECT, UPDATE ON HHS_CMS_HR.INCENTIVES_PDP_PANEL TO HHS_CMS_HR_RW_ROLE;
GRANT DELETE, INSERT, SELECT, UPDATE ON HHS_CMS_HR.INCENTIVES_PDP_PANEL TO HHS_CMS_HR_DEV_ROLE;
/

Insert into INCENTIVES_REQUEST_CONTROL (RC_DATE,RC_SEQ,RC_REQUEST_NUM) values (to_date('09-MAR-17','DD-MON-RR'),1001,'20170309-0002');
/

--1. ALTER INCENTIVES_SAM
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD INIT_SALARY_SALARY_PER_ANNUM_N NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD RCMD_SALARY_SALARY_PER_ANNUM_N NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD SELECTEE_SALARY_PER_ANNUM_N NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD SELECTEE_BONUS_N NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD SELECTEE_TOTAL_COMPENSATION_N NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD SUP_DOC_REQ_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD SUP_DOC_RCV_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD HRS_RVW_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD RCMD_SALARY_PER_ANNUM_N NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD RCMD_INC_DEC_AMOUNT_N NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD APPROVAL_SO_RESP_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD APPROVAL_DGHO_RESP_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD APPROVAL_TABG_RESP_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD APPROVAL_OHC_RESP_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD APPROVAL_COC_RESP_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD JUSTIFICATION_MODIFIED_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD JUSTIFICATION_CRT_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM ADD JUSTIFICATION_LASTMOD_DATE_D DATE;

--2. ALTER INCENTIVES_SAM_JUST_HISTORY
ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM_JUST_HISTORY ADD JUSTIFICATION_MODIFIED_DATE_D DATE;

--3. MIGRATE DATA TO NEW COLUMNS INCENTIVES_SAM
UPDATE INCENTIVES_SAM
SET INIT_SALARY_SALARY_PER_ANNUM_N = regexp_replace(INIT_SALARY_SALARY_PER_ANNUM, '[^0-9|.]', '')
    ,RCMD_SALARY_SALARY_PER_ANNUM_N = regexp_replace(RCMD_SALARY_SALARY_PER_ANNUM, '[^0-9|.]', '')
    ,SELECTEE_SALARY_PER_ANNUM_N = regexp_replace(SELECTEE_SALARY_PER_ANNUM, '[^0-9|.]', '')
    ,SELECTEE_BONUS_N = regexp_replace(SELECTEE_BONUS, '[^0-9|.]', '')
    ,SELECTEE_TOTAL_COMPENSATION_N = regexp_replace(SELECTEE_TOTAL_COMPENSATION, '[^0-9|.]', '')
    ,SUP_DOC_REQ_DATE_D = TO_DATE(SUP_DOC_REQ_DATE, 'mm/dd/yyyy')
    ,SUP_DOC_RCV_DATE_D = TO_DATE(SUP_DOC_RCV_DATE, 'mm/dd/yyyy')
    ,HRS_RVW_DATE_D = TO_DATE(HRS_RVW_DATE, 'mm/dd/yyyy')
    ,RCMD_SALARY_PER_ANNUM_N = regexp_replace(RCMD_SALARY_PER_ANNUM, '[^0-9|.]', '')
    ,RCMD_INC_DEC_AMOUNT_N = regexp_replace(RCMD_INC_DEC_AMOUNT, '[^0-9|.|+|-]', '')
    ,APPROVAL_SO_RESP_DATE_D = TO_DATE(APPROVAL_SO_RESP_DATE, 'mm/dd/yyyy')
    ,APPROVAL_DGHO_RESP_DATE_D = TO_DATE(APPROVAL_DGHO_RESP_DATE, 'mm/dd/yyyy')
    ,APPROVAL_TABG_RESP_DATE_D = TO_DATE(APPROVAL_TABG_RESP_DATE, 'mm/dd/yyyy')
    ,APPROVAL_OHC_RESP_DATE_D = TO_DATE(APPROVAL_OHC_RESP_DATE, 'mm/dd/yyyy')
    ,APPROVAL_COC_RESP_DATE_D = TO_DATE(APPROVAL_COC_RESP_DATE, 'mm/dd/yyyy')
    ,JUSTIFICATION_MODIFIED_DATE_D = TO_DATE(JUSTIFICATION_MODIFIED_DATE, 'mm/dd/yyyy hh24:mi:ss')
    ,JUSTIFICATION_CRT_DATE_D = TO_DATE(JUSTIFICATION_CRT_DATE, 'mm/dd/yyyy hh24:mi:ss')
    ,JUSTIFICATION_LASTMOD_DATE_D = TO_DATE(JUSTIFICATION_LASTMOD_DATE, 'mm/dd/yyyy hh24:mi:ss')
;

--4. MIGRATE DATA TO NEW COLUMNS INCENTIVES_SAM_JUST_HISTORY
UPDATE HHS_CMS_HR.INCENTIVES_SAM_JUST_HISTORY
SET JUSTIFICATION_MODIFIED_DATE_D = TO_DATE(JUSTIFICATION_MODIFIED_DATE, 'mm/dd/yyyy hh24:mi:ss')
;

create or replace TRIGGER INCENTIVES_SAM_BIUR
BEFORE INSERT OR UPDATE OF JUSTIFICATION_SUPER_QUAL_DESC, JUSTIFICATION_QUAL_COMP_DESC, JUSTIFICATION_PAY_EQUITY_DESC, JUSTIFICATION_MOD_REASON, JUSTIFICATION_MOD_SUMMARY, JUSTIFICATION_MODIFIER_ID
ON INCENTIVES_SAM
FOR EACH ROW
DECLARE
	L_JUSTIFICATION_CRT_ID   VARCHAR2(10);
	L_JUSTIFICATION_CRT_NAME VARCHAR2(100);
	L_JUSTIFICATION_CRT_DATE VARCHAR2(20);
	L_JUSTIFICATION_VER NUMBER(10);
BEGIN
		L_JUSTIFICATION_CRT_ID   := :new.JUSTIFICATION_CRT_ID;
		L_JUSTIFICATION_CRT_NAME := :new.JUSTIFICATION_CRT_NAME;
		L_JUSTIFICATION_CRT_DATE := :new.JUSTIFICATION_CRT_DATE;

    IF ((NVL(:old.JUSTIFICATION_SUPER_QUAL_DESC,' ') <> NVL(:new.JUSTIFICATION_SUPER_QUAL_DESC, ' ')) OR 
		(NVL(:old.JUSTIFICATION_QUAL_COMP_DESC,' ') <> NVL(:new.JUSTIFICATION_QUAL_COMP_DESC, ' ')) OR 
		(NVL(:old.JUSTIFICATION_PAY_EQUITY_DESC,' ') <> NVL(:new.JUSTIFICATION_PAY_EQUITY_DESC, ' ')) OR 
		(NVL(:old.JUSTIFICATION_MOD_REASON,' ') <> NVL(:new.JUSTIFICATION_MOD_REASON, ' ')) OR 
		(NVL(:old.JUSTIFICATION_MOD_SUMMARY,' ') <> NVL(:new.JUSTIFICATION_MOD_SUMMARY, ' ')) ) THEN
      IF (L_JUSTIFICATION_CRT_ID IS NULL) THEN
        L_JUSTIFICATION_CRT_ID   := :new.JUSTIFICATION_LASTMOD_ID;
        L_JUSTIFICATION_CRT_NAME := :new.JUSTIFICATION_LASTMOD_NAME;
        L_JUSTIFICATION_CRT_DATE := TO_CHAR(SYSTIMESTAMP, 'MM/DD/YYYY HH24:MI:SS');
        
        :new.JUSTIFICATION_CRT_ID := L_JUSTIFICATION_CRT_ID;
        :new.JUSTIFICATION_CRT_NAME := L_JUSTIFICATION_CRT_NAME;
        :new.JUSTIFICATION_CRT_DATE := L_JUSTIFICATION_CRT_DATE;
        :new.JUSTIFICATION_CRT_DATE_D := SYSTIMESTAMP; --
        :new.JUSTIFICATION_LASTMOD_DATE := TO_CHAR(SYSTIMESTAMP, 'MM/DD/YYYY HH24:MI:SS');
        :new.JUSTIFICATION_LASTMOD_DATE_D := SYSTIMESTAMP; --new
      ELSE
        IF (:new.JUSTIFICATION_MODIFIER_ID IS NOT NULL) THEN
          IF(:new.JUSTIFICATION_VER = 0) THEN
            L_JUSTIFICATION_CRT_ID   := :new.JUSTIFICATION_CRT_ID;
            L_JUSTIFICATION_CRT_NAME := :new.JUSTIFICATION_CRT_NAME;
            L_JUSTIFICATION_CRT_DATE := :new.JUSTIFICATION_CRT_DATE;
			L_JUSTIFICATION_VER := 1;
          ELSE
            L_JUSTIFICATION_CRT_ID   := :old.JUSTIFICATION_MODIFIER_ID;
            L_JUSTIFICATION_CRT_NAME := :old.JUSTIFICATION_MODIFIER_NAME;
            L_JUSTIFICATION_CRT_DATE := :old.JUSTIFICATION_MODIFIED_DATE;
			L_JUSTIFICATION_VER := :new.JUSTIFICATION_VER + 1;
          END IF;
          
          INSERT INTO INCENTIVES_SAM_JUST_HISTORY
          (
            PROC_ID,
            JUSTIFICATION_VER,
            JUSTIFICATION_MOD_REASON,
            JUSTIFICATION_MOD_SUMMARY,
            JUSTIFICATION_MODIFIER_NAME,
            JUSTIFICATION_MODIFIER_ID,
            JUSTIFICATION_MODIFIED_DATE,
            JUSTIFICATION_MODIFIED_DATE_D, --new
            JUSTIFICATION_SUPER_QUAL_DESC,
            JUSTIFICATION_QUAL_COMP_DESC,
            JUSTIFICATION_PAY_EQUITY_DESC
          )
          VALUES
          (
            :new.PROC_ID,
            L_JUSTIFICATION_VER,
            :old.JUSTIFICATION_MOD_REASON,
            :old.JUSTIFICATION_MOD_SUMMARY,
            L_JUSTIFICATION_CRT_NAME,
            L_JUSTIFICATION_CRT_ID,
            L_JUSTIFICATION_CRT_DATE,
            TO_DATE(L_JUSTIFICATION_CRT_DATE, 'mm/dd/yyyy hh24:mi:ss'),
            :old.JUSTIFICATION_SUPER_QUAL_DESC,
            :old.JUSTIFICATION_QUAL_COMP_DESC,
            :old.JUSTIFICATION_PAY_EQUITY_DESC
          );
          
          :new.JUSTIFICATION_VER	:= L_JUSTIFICATION_VER;
          :new.JUSTIFICATION_LASTMOD_DATE := TO_CHAR(SYSTIMESTAMP, 'MM/DD/YYYY HH24:MI:SS');
          :new.JUSTIFICATION_LASTMOD_DATE_D := SYSTIMESTAMP; --new
        END IF;
      END IF;
    END IF;
		
EXCEPTION
	WHEN OTHERS THEN
		SP_ERROR_LOG();

END;

/

ALTER TABLE HHS_CMS_HR.INCENTIVES_LE ADD HRS_RVW_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_LE ADD APPROVAL_SO_RESP_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_LE ADD APPROVAL_DGHO_RESP_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_LE ADD APPROVAL_TABG_RESP_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_LE ADD APPROVAL_COC_RESP_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_LE ADD JUSTIFICATION_CRT_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_LE ADD JUSTIFICATION_LASTMOD_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_LE ADD JUSTIFICATION_MODIFIED_DATE_D DATE;

UPDATE HHS_CMS_HR.INCENTIVES_LE
SET HRS_RVW_DATE_D = DECODE(LENGTH(HRS_RVW_DATE), 10, TO_DATE(HRS_RVW_DATE, 'mm/dd/yyyy'), null)
    ,APPROVAL_SO_RESP_DATE_D = DECODE(LENGTH(HRS_RVW_DATE), 10, TO_DATE(HRS_RVW_DATE, 'mm/dd/yyyy'), null)
    ,APPROVAL_DGHO_RESP_DATE_D = DECODE(LENGTH(HRS_RVW_DATE), 10, TO_DATE(HRS_RVW_DATE, 'mm/dd/yyyy'), null)
    ,APPROVAL_TABG_RESP_DATE_D = DECODE(LENGTH(HRS_RVW_DATE), 10, TO_DATE(HRS_RVW_DATE, 'mm/dd/yyyy'), null)
    ,APPROVAL_COC_RESP_DATE_D = DECODE(LENGTH(HRS_RVW_DATE), 10, TO_DATE(HRS_RVW_DATE, 'mm/dd/yyyy'), null)
    ,JUSTIFICATION_CRT_DATE_D = DECODE(LENGTH(HRS_RVW_DATE), 19, TO_DATE(HRS_RVW_DATE, 'mm/dd/yyyy hh24:mi:ss'), null)
    ,JUSTIFICATION_MODIFIED_DATE_D = DECODE(LENGTH(HRS_RVW_DATE), 19, TO_DATE(HRS_RVW_DATE, 'mm/dd/yyyy hh24:mi:ss'), null)
    ,JUSTIFICATION_LASTMOD_DATE_D = DECODE(LENGTH(HRS_RVW_DATE), 19, TO_DATE(HRS_RVW_DATE, 'mm/dd/yyyy hh24:mi:ss'), null)
;

ALTER TABLE HHS_CMS_HR.INCENTIVES_LE_JUST_HISTORY ADD JUSTIFICATION_MODIFIED_DATE_D DATE;

UPDATE HHS_CMS_HR.INCENTIVES_LE_JUST_HISTORY
SET JUSTIFICATION_MODIFIED_DATE_D 
    = DECODE(LENGTH(JUSTIFICATION_MODIFIED_DATE), 19, TO_DATE(JUSTIFICATION_MODIFIED_DATE, 'mm/dd/yyyy hh24:mi:ss'), null)
;
/

CREATE OR REPLACE TRIGGER HHS_CMS_HR.INCENTIVES_LE_BIUR 
BEFORE INSERT OR UPDATE OF JUSTIFICATION_SKILL_EXP, JUSTIFICATION_AGENCY_GOAL, JUSTIFICATION_MOD_REASON, JUSTIFICATION_MOD_SUMMARY, JUSTIFICATION_MODIFIER_ID
ON INCENTIVES_LE
FOR EACH ROW
DECLARE
	L_JUSTIFICATION_CRT_ID   VARCHAR2(10);
	L_JUSTIFICATION_CRT_NAME VARCHAR2(100);
	L_JUSTIFICATION_CRT_DATE VARCHAR2(20);
	L_JUSTIFICATION_VER NUMBER(10);
BEGIN
		L_JUSTIFICATION_CRT_ID   := :new.JUSTIFICATION_CRT_ID;
		L_JUSTIFICATION_CRT_NAME := :new.JUSTIFICATION_CRT_NAME;
		L_JUSTIFICATION_CRT_DATE := :new.JUSTIFICATION_CRT_DATE;

    IF ((NVL(:old.JUSTIFICATION_SKILL_EXP, ' ') <> NVL(:new.JUSTIFICATION_SKILL_EXP, ' ')) OR 
		(NVL(:old.JUSTIFICATION_AGENCY_GOAL, ' ') <> NVL(:new.JUSTIFICATION_AGENCY_GOAL, ' ')) OR
		(NVL(:old.JUSTIFICATION_MOD_REASON, ' ') <> NVL(:new.JUSTIFICATION_MOD_REASON, ' ')) OR
		(NVL(:old.JUSTIFICATION_MOD_SUMMARY, ' ') <> NVL(:new.JUSTIFICATION_MOD_SUMMARY, ' ')) ) THEN
      IF (L_JUSTIFICATION_CRT_ID IS NULL) THEN
        L_JUSTIFICATION_CRT_ID   := :new.JUSTIFICATION_LASTMOD_ID;
        L_JUSTIFICATION_CRT_NAME := :new.JUSTIFICATION_LASTMOD_NAME;
        L_JUSTIFICATION_CRT_DATE := TO_CHAR(SYSTIMESTAMP, 'MM/DD/YYYY HH24:MI:SS');
  
        :new.JUSTIFICATION_CRT_ID := L_JUSTIFICATION_CRT_ID;
        :new.JUSTIFICATION_CRT_NAME := L_JUSTIFICATION_CRT_NAME;
        :new.JUSTIFICATION_CRT_DATE := L_JUSTIFICATION_CRT_DATE;
        :new.JUSTIFICATION_LASTMOD_DATE := TO_CHAR(SYSTIMESTAMP, 'MM/DD/YYYY HH24:MI:SS');
      ELSE
        IF (:new.JUSTIFICATION_MODIFIER_ID IS NOT NULL) THEN
          IF(:new.JUSTIFICATION_VER = 0) THEN
            L_JUSTIFICATION_CRT_ID   := :new.JUSTIFICATION_CRT_ID;
            L_JUSTIFICATION_CRT_NAME := :new.JUSTIFICATION_CRT_NAME;
            L_JUSTIFICATION_CRT_DATE := :new.JUSTIFICATION_CRT_DATE;
			L_JUSTIFICATION_VER := 1;
          ELSE
            L_JUSTIFICATION_CRT_ID   := :old.JUSTIFICATION_MODIFIER_ID;
            L_JUSTIFICATION_CRT_NAME := :old.JUSTIFICATION_MODIFIER_NAME;
            L_JUSTIFICATION_CRT_DATE := :old.JUSTIFICATION_MODIFIED_DATE;
			L_JUSTIFICATION_VER := :new.JUSTIFICATION_VER + 1;
          END IF;
          INSERT INTO INCENTIVES_LE_JUST_HISTORY
          (
            PROC_ID,
            JUSTIFICATION_VER,
            JUSTIFICATION_MOD_REASON,
            JUSTIFICATION_MOD_SUMMARY,
            JUSTIFICATION_MODIFIER_NAME,
            JUSTIFICATION_MODIFIER_ID,
            JUSTIFICATION_MODIFIED_DATE,
            JUSTIFICATION_MODIFIED_DATE_D,
            JUSTIFICATION_SKILL_EXP,
            JUSTIFICATION_AGENCY_GOAL
          )
          VALUES
          (
            :new.PROC_ID,
            L_JUSTIFICATION_VER,
            :old.JUSTIFICATION_MOD_REASON,
            :old.JUSTIFICATION_MOD_SUMMARY,
            L_JUSTIFICATION_CRT_NAME,
            L_JUSTIFICATION_CRT_ID,
            L_JUSTIFICATION_CRT_DATE,
            TO_DATE(L_JUSTIFICATION_CRT_DATE, 'mm/dd/yyyy hh24:mi:ss'),
            :old.JUSTIFICATION_SKILL_EXP,
            :old.JUSTIFICATION_AGENCY_GOAL
          );
          :new.JUSTIFICATION_VER	:= L_JUSTIFICATION_VER;
          :new.JUSTIFICATION_LASTMOD_DATE := TO_CHAR(SYSTIMESTAMP, 'MM/DD/YYYY HH24:MI:SS');
        END IF;
      END IF;
    END IF;
		
EXCEPTION
	WHEN OTHERS THEN
		SP_ERROR_LOG();

END;
/
ALTER TRIGGER HHS_CMS_HR.INCENTIVES_LE_BIUR ENABLE;
/

ALTER TABLE ERLR_GRIEVANCE ADD GI_GRIEVANCE_RELATED_2_PMAP NVARCHAR2(3);
ALTER TABLE ERLR_MEDDOC ADD (MD_FMLA_EXHAUSTED_WITHIN_12M NVARCHAR2(3), MD_FMLA_LENGTH_OF_LEAVE NVARCHAR2(20));
/


ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD LIC_STATE1_EXP_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD LIC_STATE2_EXP_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD ALW_CATEGORY_N NUMBER(20,2);  --$12,000.00, 1000
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD ALW_BD_CERT_N NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD ALW_MULTI_YEAR_AGMT_N NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD ALW_MISSION_SC_N NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD ALW_TOTAL_N NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD ALW_TOTAL_PAYABLE_N NUMBER(20,2);
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD RVW_SO_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD RVW_DGHO_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD RVW_CP_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD RVW_OFM_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD RVW_TABG_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD RVW_OHC_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD APPROVAL_TABG_DATE_D DATE;
ALTER TABLE HHS_CMS_HR.INCENTIVES_PCA ADD APPROVAL_OADMIN_DATE_D DATE;

UPDATE HHS_CMS_HR.INCENTIVES_PCA
SET LIC_STATE1_EXP_DATE_D = DECODE(LENGTH(LIC_STATE1_EXP_DATE), 10, TO_DATE(LIC_STATE1_EXP_DATE, 'mm/dd/yyyy'), null)
    ,LIC_STATE2_EXP_DATE_D = DECODE(LENGTH(LIC_STATE2_EXP_DATE), 10, TO_DATE(LIC_STATE2_EXP_DATE, 'mm/dd/yyyy'), null)
    ,ALW_CATEGORY_N = regexp_replace(ALW_CATEGORY, '[^0-9|.]', '')
    ,ALW_BD_CERT_N = regexp_replace(ALW_BD_CERT, '[^0-9|.]', '')
    ,ALW_MULTI_YEAR_AGMT_N = regexp_replace(ALW_MULTI_YEAR_AGMT, '[^0-9|.]', '')
    ,ALW_MISSION_SC_N = regexp_replace(ALW_MISSION_SC, '[^0-9|.]', '')
    ,ALW_TOTAL_N = regexp_replace(ALW_TOTAL, '[^0-9|.]', '')
    ,ALW_TOTAL_PAYABLE_N = regexp_replace(ALW_TOTAL_PAYABLE, '[^0-9|.]', '')
    ,RVW_SO_DATE_D = DECODE(LENGTH(RVW_SO_DATE), 10, TO_DATE(RVW_SO_DATE, 'mm/dd/yyyy'), null)
    ,RVW_DGHO_DATE_D = DECODE(LENGTH(RVW_DGHO_DATE), 10, TO_DATE(RVW_DGHO_DATE, 'mm/dd/yyyy'), null)
    ,RVW_CP_DATE_D = DECODE(LENGTH(RVW_CP_DATE), 10, TO_DATE(RVW_CP_DATE, 'mm/dd/yyyy'), null)
    ,RVW_OFM_DATE_D = DECODE(LENGTH(RVW_OFM_DATE), 10, TO_DATE(RVW_OFM_DATE, 'mm/dd/yyyy'), null)
    ,RVW_TABG_DATE_D = DECODE(LENGTH(RVW_TABG_DATE), 10, TO_DATE(RVW_TABG_DATE, 'mm/dd/yyyy'), null)
    ,RVW_OHC_DATE_D = DECODE(LENGTH(RVW_OHC_DATE), 10, TO_DATE(RVW_OHC_DATE, 'mm/dd/yyyy'), null)
    ,APPROVAL_TABG_DATE_D = DECODE(LENGTH(APPROVAL_TABG_DATE), 10, TO_DATE(APPROVAL_TABG_DATE, 'mm/dd/yyyy'), null)
    ,APPROVAL_OADMIN_DATE_D = DECODE(LENGTH(APPROVAL_OADMIN_DATE), 10, TO_DATE(APPROVAL_OADMIN_DATE, 'mm/dd/yyyy'), null);
/


ALTER TABLE HHS_CMS_HR.INCENTIVES_COM ADD REQ_DATE DATE;

UPDATE INCENTIVES_COM IC
   SET REQ_DATE = (
        SELECT DECODE(LENGTH(FN_EXTRACT_STR(FIELD_DATA, 'requestDate')), 
                            19, TO_DATE(FN_EXTRACT_STR(FIELD_DATA, 'requestDate') , 'yyyy/mm/dd hh24:mi:ss')
                            , null)
          FROM TBL_FORM_DTL FD
         WHERE FD.PROCID = IC.PROC_ID
           AND ROWNUM = 1
    );
/


ALTER TABLE INCENTIVES_PDP DROP COLUMN CURRENT_PAY_TIER;
ALTER TABLE INCENTIVES_PDP DROP COLUMN PROPOSED_PAY_TIER;
ALTER TABLE INCENTIVES_PDP ADD CURRENT_PAY_TIER VARCHAR2(20);
ALTER TABLE INCENTIVES_PDP ADD PROPOSED_PAY_TIER VARCHAR2(20);
/

ALTER TABLE
  PD_COVERSHEET
ADD
  STD_PD_TYPE NVARCHAR2(200);
  
COMMENT ON COLUMN PD_COVERSHEET.STD_PD_TYPE 
   IS 'Type of Standard PD for the Request';

ALTER TABLE
  POSITION
ADD
  POS_STD_PD_TYPE NVARCHAR2(200);
  
COMMENT ON COLUMN POSITION.POS_STD_PD_TYPE 
   IS 'Type of Standard PD for the Request';
/

UPDATE HHS_CMS_HR.UG_MAPPING SET KEY = 'HR Specialists Group A', NAME='HR Specialists Group A'
WHERE KEY = 'HR Specialists';
/

--------------------------------------------------------
--  DDL for Table SLA_HIRING_TIMELINE
--------------------------------------------------------

CREATE TABLE "HHS_CMS_HR"."SLA_HIRING_TIMELINE" 
(	
"SLA_ID" VARCHAR2(50 BYTE) NOT NULL, 
"PROCESS_NAME" VARCHAR2(100 BYTE) NOT NULL, 
"ACTIVITY_NAME" VARCHAR2(100 BYTE) NOT NULL, 
"SG_RT_ID" NUMBER(20,0) NOT NULL, 
"TARGET_BUSINESS_DAY" NUMBER(3,0) DEFAULT 0 NOT NULL, 
"TOTAL_CALENDAR_DAY" NUMBER(3,0) DEFAULT 0 NOT NULL, 
"DISPLAY_ORDER" NUMBER,
"CLASS_MAJOR" CHAR(1)
);

CREATE UNIQUE INDEX "HHS_CMS_HR"."SLA_HIRING_TIMELINE_PK" ON "HHS_CMS_HR"."SLA_HIRING_TIMELINE" ("SLA_ID");
ALTER TABLE "HHS_CMS_HR"."SLA_HIRING_TIMELINE" ADD CONSTRAINT "SLA_HIRING_TIMELINE_PK" PRIMARY KEY ("SLA_ID");
 
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_PDP_PANEL TO BF_DEV_ROLE;
GRANT DELETE, INSERT, SELECT, UPDATE ON HHS_CMS_HR.INCENTIVES_PDP_PANEL TO HHS_CMS_HR_RW_ROLE;
GRANT DELETE, INSERT, SELECT, UPDATE ON HHS_CMS_HR.INCENTIVES_PDP_PANEL TO HHS_CMS_HR_DEV_ROLE;
/ 

Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_SC_1','Strategic Consultation','Create/Review/Modify Request (Component)',18,1,1,101,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_SC_2','Strategic Consultation','Hold Strategic Consultation Meeting (HR)',18,1,1,102,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_SC_3','Strategic Consultation','Acknowledge Strategic Consultation Meeting (Component)',18,1,1,103,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_SC_4','Strategic Consultation','Approve Strategic Consultation Meeting (HR)',18,2,3,104,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_CMA_1','Classification - Major','Complete PD Coversheet & Classification Analysis (HR)',18,4,5,121,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_CMA_2','Classification - Major','Confirm Analysis (Component)',18,1,2,122,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_CMA_3','Classification - Major','BUS Code Review (HR)',18,0,1,123,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_CMA_4','Classification - Major','Approve Coversheet (Component)',18,1,1,124,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_CMA_5','Classification - Major','Create Final Package (HR)',18,1,1,125,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_CMI_1','Classification - Minor','Complete PD Coversheet & Classification Analysis (HR)',18,1,1,141,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_CMI_2','Classification - Minor','Confirm Analysis (Component)',18,0,0,142,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_CMI_3','Classification - Minor','BUS Code Review (HR)',18,0,0,143,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_CMI_4','Classification - Minor','Approve Coversheet (Component)',18,1,1,144,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_CMI_5','Classification - Minor','Create Final Package (HR)',18,0,0,145,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_R_1','Recruitment','Draft announcement (HR)',18,2,2,161,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_R_2','Recruitment','Review Assessment/Announcement (Component)',18,2,2,162,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_R_3','Recruitment','Final Edits and Post to USA jobs (HR)',18,1,1,163,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_R_4','Recruitment','Announcement Open Period (Other)',18,10,14,164,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_R_5','Recruitment','Qualification Analysis (HR)',18,12,16,165,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_R_6','Recruitment','Certificate Issue (HR)',18,1,1,166,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_R_7','Recruitment','Certificate Return (Component)',18,11,15,167,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_O_1','Offer','Send Tentative Offer (HR)',18,2,2,181,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_O_2','Offer','Receive Tentative Offer Response (Applicant)',18,2,2,182,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_O_3','Offer','Complete Pre-Employment Forms & Initiate Background Investigation (HR)',18,1,1,183,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_O_4','Offer','Receive Background Investigation Clearance (Other)',18,10,12,184,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_O_5','Offer','Establish Entry on Duty Date (HR)',18,4,5,185,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('R_O_6','Offer','Send Official Offer (HR)',18,1,1,186,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_SC_1','Strategic Consultation','Create/Review/Modify Request (Component)',76,1,1,201,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_SC_2','Strategic Consultation','Hold Strategic Consultation Meeting (HR)',76,1,1,202,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_SC_3','Strategic Consultation','Acknowledge Strategic Consultation Meeting (Component)',76,1,1,203,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_SC_4','Strategic Consultation','Approve Strategic Consultation Meeting (HR)',76,2,3,204,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_CMA_1','Classification - Major','Complete PD Coversheet & Classification Analysis (HR)',76,4,5,221,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_CMA_2','Classification - Major','Confirm Analysis (Component)',76,1,2,222,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_CMA_3','Classification - Major','BUS Code Review (HR)',76,0,1,223,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_CMA_4','Classification - Major','Approve Coversheet (Component)',76,1,1,224,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_CMA_5','Classification - Major','Create Final Package (HR)',76,1,1,225,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_CMI_1','Classification - Minor','Complete PD Coversheet & Classification Analysis (HR)',76,1,1,241,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_CMI_2','Classification - Minor','Confirm Analysis (Component)',76,0,0,242,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_CMI_3','Classification - Minor','BUS Code Review (HR)',76,0,0,243,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_CMI_4','Classification - Minor','Approve Coversheet (Component)',76,1,1,244,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_CMI_5','Classification - Minor','Create Final Package (HR)',76,0,0,245,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_EQRA_1','Eligibility and Qualifications Review Activities','Staff or Spec. Staff determines eligibility and qualifications (HR)',76,2,3,261,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_EQRA_2','Eligibility and Qualifications Review Activities','SO Selection Determination (Component)',76,8,10,262,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_O_1','Offer','Send Tentative Offer (HR)',76,2,2,281,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_O_2','Offer','Receive Tentative Offer Response (Applicant)',76,2,2,282,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_O_3','Offer','Complete Pre-Employment Forms & Initiate Background Investigation (HR)',76,1,1,283,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_O_4','Offer','Receive Background Investigation Clearance (Security)',76,10,12,284,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_O_5','Offer','Establish Entry on Duty Date (HR)',76,4,5,285,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('A_O_6','Offer','Send Official Offer (HR)',76,1,1,286,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_SC_1','Strategic Consultation','Create/Review/Modify Request (Component)',17,1,1,301,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_SC_2','Strategic Consultation','Hold Strategic Consultation Meeting (HR)',17,1,1,302,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_SC_3','Strategic Consultation','Acknowledge Strategic Consultation Meeting (Component)',17,1,1,303,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_SC_4','Strategic Consultation','Approve Strategic Consultation Meeting (HR)',17,2,3,304,null);
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_CMA_1','Classification - Major','Complete PD Coversheet & Classification Analysis (HR)',17,4,5,321,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_CMA_2','Classification - Major','Confirm Analysis (Component)',17,1,2,322,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_CMA_3','Classification - Major','BUS Code Review (HR)',17,0,1,323,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_CMA_4','Classification - Major','Approve Coversheet (Component)',17,1,1,324,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_CMA_5','Classification - Major','Create Final Package (HR)',17,1,1,325,'T');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_CMI_1','Classification - Minor','Complete PD Coversheet & Classification Analysis (HR)',17,1,1,341,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_CMI_2','Classification - Minor','Confirm Analysis (Component)',17,0,0,342,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_CMI_3','Classification - Minor','BUS Code Review (HR)',17,0,0,343,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_CMI_4','Classification - Minor','Approve Coversheet (Component)',17,1,1,344,'F');
Insert into HHS_CMS_HR.SLA_HIRING_TIMELINE (SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,CLASS_MAJOR) 
values ('C_CMI_5','Classification - Minor','Create Final Package (HR)',17,0,0,345,'F');
/


ALTER TABLE HHS_CMS_HR.INCENTIVES_COM ADD CANDI_NAME2 VARCHAR2(150);
ALTER TABLE HHS_CMS_HR.INCENTIVES_COM ADD NOT_TO_EXCEED_DT VARCHAR2(100);
/

CREATE INDEX INCENTIVES_COM_IX3 ON HHS_CMS_HR.INCENTIVES_COM (CANDI_NAME2);
/

UPDATE HHS_CMS_HR.INCENTIVES_COM
SET CANDI_NAME2 = NVL(CANDI_LAST, '') || ', ' || NVL(CANDI_FIRST, '')
;
/

ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_ERLR_ARBIT_PHONE_NUM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_ERLR_ARBIT_PHONE_NUM_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_ERLR_ARBIT_PHONE_NUM_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_FNM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_FNM_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_FNM_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_LNM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_LNM_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_LNM_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_MNM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_MNM_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_ARBIT_MNM_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_PANEL_MEMBER_FNAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_PANEL_MEMBER_LNAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_PANEL_MEMBER_MNAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_3RDPARTY_HEAR MODIFY THRD_PRTY_PANEL_MEMBER_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_FIRST_NAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_FIRST_NAME_2 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_FIRST_NAME_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_FIRST_NAME_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_LAST_NAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_LAST_NAME_2 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_LAST_NAME_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_LAST_NAME_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_MIDDLE_NAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_MIDDLE_NAME_2 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_MIDDLE_NAME_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_MIDDLE_NAME_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_ORG_AFFIL NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_PHONE_NUM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_PHONE_NUM_2 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_PHONE_NUM_3 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_APPEAL MODIFY AP_ARBITRATOR_PHONE_NUM_4 NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_CURRENT_INFO_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_CURRENT_INFO_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_FINAL_INFO_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_FINAL_INFO_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_FINAL_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_FINAL_PPLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_FINAL_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_PPLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_PROPOSED_INFO_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_PROPOSED_INFO_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_PROPOSED_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_PROPOSED_PPLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_PROPOSED_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_RE_ASSIGNMENT_CURR_ORG NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_RE_ASSIGNMENT_FINAL_ORG NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_CNDT_ISSUE MODIFY CI_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_CMS_PRIMARY_REP_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_CUSTOMER_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_EMPLOYEE_ADMIN_CD NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_EMPLOYEE_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_NON_CMS_PRIMARY_FNAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_NON_CMS_PRIMARY_LNAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_NON_CMS_PRIMARY_MNAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_GEN MODIFY GEN_NON_CMS_PRIMARY_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_INFO_REQUEST MODIFY IR_CMS_REQUESTER_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_INFO_REQUEST MODIFY IR_NCMS_REQUESTER_FIRST_NAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_INFO_REQUEST MODIFY IR_NCMS_REQUESTER_LAST_NAME NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_INFO_REQUEST MODIFY IR_NCMS_REQUESTER_MN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_INFO_REQUEST MODIFY IR_NCMS_REQUESTER_ORG_AFFIL NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_INFO_REQUEST MODIFY IR_NON_CMS_REQUESTER_PHONE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_CUR_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_CUR_JOB_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_CUR_PAY_PLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_CUR_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_CUR_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_FIN_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_FIN_JOB_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_FIN_PAY_PLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_FIN_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_FIN_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_PRPS_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_PRPS_JOB_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_PRPS_PAY_PLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_PRPS_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_DMTN_PRP_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_REASGN_FIN_ORG_NM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PERF_ISSUE MODIFY PI_REASGN_CUR_ORG_NM NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_CURRENT_INFO_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_CURRENT_INFO_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_FINAL_ADMIN_CODE_FINAL_ORG NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_FINAL_INFO_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_FINAL_INFO_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_FINAL_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_FINAL_PPLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_FINAL_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PPLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROPOSED_INFO_GRADE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROPOSED_INFO_STEP NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROPOSED_POS_TITLE NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROPOSED_PPLAN NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROPOSED_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_RE_ASSIGNMENT_CURR_ORG NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_SERIES NVARCHAR2(100);
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROBATION_CONDUCT NVARCHAR2(5) ;
ALTER TABLE HHS_CMS_HR.ERLR_PROB_ACTION MODIFY PPA_PROBATION_PERFORMANCE NVARCHAR2(5) ;
/

ALTER TABLE HHS_CMS_HR.INCENTIVES_SAM
ADD (
  DISAPPROVAL_REASON VARCHAR2(100), 
	DISAPPROVAL_USER_NAME VARCHAR2(100), 
	DISAPPROVAL_USER_ID VARCHAR2(10) 
);
  
ALTER TABLE HHS_CMS_HR.INCENTIVES_LE
ADD (
  DISAPPROVAL_REASON VARCHAR2(100), 
	DISAPPROVAL_USER_NAME VARCHAR2(100), 
	DISAPPROVAL_USER_ID VARCHAR2(10) 
);
/

CREATE OR REPLACE    TYPE SLA_RESULT_RECORD IS OBJECT
    (
        SLA_ID VARCHAR2(50), 
        PROCESS_NAME VARCHAR2(100), 
        ACTIVITY_NAME VARCHAR2(100), 
        SG_RT_ID NUMBER(20), 
        TARGET_BUSINESS_DAY NUMBER(3),
        TOTAL_CALENDAR_DAY NUMBER(3),
        DISPLAY_ORDER NUMBER,
        ASD DATE, -- Actual Start Date
        ACD DATE, -- Actual Completion Date
        TCD DATE,  -- Target Completion Date
        ASD_STR VARCHAR2(20), -- Actual Start Date
        ACD_STR VARCHAR2(20), -- Actual Completion Date
        TCD_STR VARCHAR2(20)  -- Target Completion Date
    );
/
CREATE OR REPLACE    TYPE SLA_RESULT_TABLE IS TABLE OF SLA_RESULT_RECORD;
/

CREATE OR REPLACE    TYPE HIRING_TIMELINE_RECORD IS OBJECT
(
	CREATE_DATE			VARCHAR2(20),
	REQUEST_NUMBER		VARCHAR2(50),
	ADMIN_CODE			VARCHAR2(50),
	REQUEST_TYPE_ID		NUMBER(10),
	REQUEST_TYPE		VARCHAR2(100),
	CLASS_TYPE			VARCHAR2(50),
	REQUEST_STATUS_USA_STAFF	VARCHAR2(50),
	APPOINTMENT_TYPE		VARCHAR2(100),
	SHOW_STRATEGIC_CONSULTATION CHAR(1),
	SHOW_CLASSIFICATION CHAR(1),    
	SHOW_RECRUITMENT CHAR(1),
	SHOW_EQRA CHAR(1),
	SHOW_OFFER CHAR(1),
	SUMMARY VARCHAR2(1024),
	TTL_STRATEGIC_CONSULTATION VARCHAR2(100),
	TTL_CLASSIFICATION  VARCHAR2(100),
	TTL_RECRUITMENT  VARCHAR2(100),
	TTL_OFFER VARCHAR2(100),
	CM_1_ACD VARCHAR2(20),
	CM_1_ASD VARCHAR2(20),
	CM_1_TCD VARCHAR2(20),
	CM_2_ACD VARCHAR2(20),
	CM_2_ASD VARCHAR2(20),
	CM_2_TCD VARCHAR2(20),
	CM_3_ACD VARCHAR2(20),
	CM_3_ASD VARCHAR2(20),
	CM_3_TCD VARCHAR2(20),
	CM_4_ACD VARCHAR2(20),
	CM_4_ASD VARCHAR2(20),
	CM_4_TCD VARCHAR2(20),
	CM_5_ACD VARCHAR2(20),
	CM_5_ASD VARCHAR2(20),
	CM_5_TCD VARCHAR2(20),
	EQRA_1_ACD VARCHAR2(20),
	EQRA_1_ASD VARCHAR2(20),
	EQRA_1_TCD VARCHAR2(20),
	EQRA_2_ACD VARCHAR2(20),
	EQRA_2_ASD VARCHAR2(20),
	EQRA_2_TCD VARCHAR2(20),
	O_1_ACD VARCHAR2(20),
	O_1_ASD VARCHAR2(20),
	O_1_TCD VARCHAR2(20),
	O_2_ACD VARCHAR2(20),
	O_2_ASD VARCHAR2(20),
	O_2_TCD VARCHAR2(20),
	O_3_ACD VARCHAR2(20),
	O_3_ASD VARCHAR2(20),
	O_3_TCD VARCHAR2(20),
	O_4_ACD VARCHAR2(20),
	O_4_ASD VARCHAR2(20),
	O_4_TCD VARCHAR2(20),
	O_5_ACD VARCHAR2(20),
	O_5_ASD VARCHAR2(20),
	O_5_TCD VARCHAR2(20),
	O_6_ACD VARCHAR2(20),
	O_6_ASD VARCHAR2(20),
	O_6_TCD VARCHAR2(20),
	R_1_ACD VARCHAR2(20),
	R_1_ASD VARCHAR2(20),
	R_1_TCD VARCHAR2(20),
	R_2_ACD VARCHAR2(20),
	R_2_ASD VARCHAR2(20),
	R_2_TCD VARCHAR2(20),
	R_3_ACD VARCHAR2(20),
	R_3_ASD VARCHAR2(20),
	R_3_TCD VARCHAR2(20),
	R_4_ACD VARCHAR2(20),
	R_4_ASD VARCHAR2(20),
	R_4_TCD VARCHAR2(20),
	R_5_ACD VARCHAR2(20),
	R_5_ASD VARCHAR2(20),
	R_5_TCD VARCHAR2(20),
	R_6_ACD VARCHAR2(20),
	R_6_ASD VARCHAR2(20),
	R_6_TCD VARCHAR2(20),
	R_7_ACD VARCHAR2(20),
	R_7_ASD VARCHAR2(20),
	R_7_TCD VARCHAR2(20),
	SC_1_ACD VARCHAR2(20),
	SC_1_ASD VARCHAR2(20),
	SC_1_TCD VARCHAR2(20),
	SC_2_ACD VARCHAR2(20),
	SC_2_ASD VARCHAR2(20),
	SC_2_TCD VARCHAR2(20),
	SC_3_ACD VARCHAR2(20),
	SC_3_ASD VARCHAR2(20),
	SC_3_TCD VARCHAR2(20),
	SC_4_ACD VARCHAR2(20),
	SC_4_ASD VARCHAR2(20),
	SC_4_TCD VARCHAR2(20)
);
/

CREATE OR REPLACE    TYPE HIRING_TIMELINE_TABLE IS TABLE OF HIRING_TIMELINE_RECORD;
/

CREATE OR REPLACE TYPE "HHS_CMS_HR"."SLA_ACTIVITY_RECORD" IS OBJECT
(
	PROCESS_NAME VARCHAR2(100), 
	ACTIVITY_NAME VARCHAR2(100), 
	START_DATE DATE,
	COMPLETE_DATE DATE
);
/

CREATE OR REPLACE TYPE "HHS_CMS_HR"."SLA_ACTIVITY_TABLE" IS TABLE OF SLA_ACTIVITY_RECORD;
/


--
-- SLA_PKS
--
create or replace PACKAGE SLA_PKS as
    
    FUNCTION GET_HIRING_TIMELINE_SLA
      (
        I_REQUEST_NUMBER IN VARCHAR2,
        I_CALENDAR_TYPE  IN VARCHAR2 DEFAULT 'Calendar',    
        I_TIMEZONE       IN VARCHAR2 DEFAULT 'America/New_York'
      )
    RETURN SLA_RESULT_TABLE ;
    
    FUNCTION GET_TIMEZONE_OFFSET(
        I_TIMEZONE  IN VARCHAR2 DEFAULT 'America/New_York'
    ) 
    RETURN FLOAT;
    
    FUNCTION NEW_TIMEZONE(
        I_DATE             DATE,
        I_TIMEZONE_OFFSET  IN FLOAT
    )
    RETURN DATE;

    FUNCTION GET_HIRING_TIMELINE (
        I_REQUEST_NUMBER IN VARCHAR2,
        I_CALENDAR_TYPE  IN VARCHAR2 DEFAULT 'Calendar',
        I_TIMEZONE       IN VARCHAR2 DEFAULT 'America/New_York'
    ) RETURN HIRING_TIMELINE_TABLE;

    FUNCTION GET_ACT_DATETIME 
    (
        I_REQUEST_NUMBER IN VARCHAR2 
        , I_SLA_PROCNM IN VARCHAR2
        , I_SLA_ACTNM IN VARCHAR2 
        , I_DATE_TP IN VARCHAR2 -- START | END    
    ) 
    RETURN DATE ;    
    
    FUNCTION TO_REPORT
    (
        I_SLA_RESULT_RECORD SLA_RESULT_RECORD,
        I_DATE_TYPE     VARCHAR2
    ) RETURN VARCHAR2;

    FUNCTION LOOKUP_LABEL 
    (
        I_ID NUMBER
    ) 
    RETURN VARCHAR2;

END;
/

create or replace PACKAGE BODY              "SLA_PKS" as

FUNCTION LOOKUP_LABEL 
(
    I_ID NUMBER
) 
RETURN VARCHAR2
IS
    V_RESULT VARCHAR2(100);
BEGIN
    SELECT TBL_LABEL
      INTO V_RESULT
      FROM TBL_LOOKUP 
     WHERE TBL_ID = I_ID;

    RETURN V_RESULT;
EXCEPTION WHEN OTHERS THEN
    RETURN NULL;
END;

FUNCTION NEW_TIMEZONE(
    I_DATE             DATE,
    I_TIMEZONE_OFFSET  IN FLOAT
)
RETURN DATE
IS  
    V_DT            DATE;
BEGIN
    IF I_DATE IS NULL THEN
        RETURN NULL;
    END IF;
    
    EXECUTE IMMEDIATE 'SELECT TO_DATE('''||TO_CHAR(I_DATE,'YYYYMMDDHH24MISS')||''', ''YYYYMMDDHH24MISS'') + INTERVAL '''||I_TIMEZONE_OFFSET||''' HOUR FROM DUAL' INTO V_DT;
    RETURN V_DT;
EXCEPTION WHEN OTHERS THEN
    RETURN NULL;
END;

FUNCTION GET_TIMEZONE_OFFSET(
    I_TIMEZONE  IN VARCHAR2 DEFAULT 'America/New_York'
)
RETURN FLOAT
IS
   V_TZ_OFFSET     VARCHAR2(10); 
BEGIN   
    V_TZ_OFFSET := TZ_OFFSET(I_TIMEZONE);
    RETURN SIGN(TO_NUMBER(SUBSTR(V_TZ_OFFSET, 1, 3))) * (TO_NUMBER(SUBSTR(V_TZ_OFFSET, 2, 2)) + TO_NUMBER(SUBSTR(V_TZ_OFFSET, 5, 2)) / 60);
EXCEPTION WHEN OTHERS THEN
    RETURN 0;
END;

FUNCTION TO_REPORT
(
    I_SLA_RESULT_RECORD SLA_RESULT_RECORD,
    I_DATE_TYPE     VARCHAR2
    
) RETURN VARCHAR2
IS
    V_RESULT VARCHAR2(20);
BEGIN
    IF I_DATE_TYPE = 'ASD' THEN
        IF I_SLA_RESULT_RECORD.ASD_STR IS NULL THEN
            IF I_SLA_RESULT_RECORD.ASD IS NULL THEN
                V_RESULT := 'TBD';
            ELSE
                V_RESULT := TO_CHAR(I_SLA_RESULT_RECORD.ASD, 'MM/DD/YYYY');
            END IF;
        ELSE
            V_RESULT := I_SLA_RESULT_RECORD.ASD_STR;
        END IF;
    ELSIF I_DATE_TYPE = 'ACD' THEN
        IF I_SLA_RESULT_RECORD.ACD_STR IS NULL THEN
            IF I_SLA_RESULT_RECORD.ACD IS NULL THEN
                V_RESULT := 'TBD';
            ELSE
                V_RESULT := TO_CHAR(I_SLA_RESULT_RECORD.ACD, 'MM/DD/YYYY');
            END IF;
        ELSE
            V_RESULT := I_SLA_RESULT_RECORD.ACD_STR;
        END IF;
    ELSIF I_DATE_TYPE = 'TCD' THEN
        IF I_SLA_RESULT_RECORD.TCD_STR IS NULL THEN
            IF I_SLA_RESULT_RECORD.TCD IS NULL THEN
                V_RESULT := 'N/A';
            ELSE
                V_RESULT := TO_CHAR(I_SLA_RESULT_RECORD.TCD, 'MM/DD/YYYY');
            END IF;
        ELSE
            V_RESULT := I_SLA_RESULT_RECORD.TCD_STR;
        END IF;
    END IF;
    RETURN V_RESULT;
END TO_REPORT;

FUNCTION GET_HIRING_TIMELINE_SLA
  (
    I_REQUEST_NUMBER IN VARCHAR2,
    I_CALENDAR_TYPE  IN VARCHAR2 DEFAULT 'Calendar',
    I_TIMEZONE       IN VARCHAR2 DEFAULT 'America/New_York'
  )
RETURN SLA_RESULT_TABLE 
IS
    REQ_TYPE_CLASSIFICATION_ONLY   CONSTANT NUMBER := 17; -- Classification Only
    REQ_TYPE_RECRUITMENT           CONSTANT NUMBER := 18; -- Recruitment
    REQ_TYPE_APPOINTMENT           CONSTANT NUMBER := 76; -- Appointment
    APP_TYPE_30_MORE_DISABLED_VET  CONSTANT NUMBER := 641;

    V_RESULT               HIRING_TIMELINE_TABLE := HIRING_TIMELINE_TABLE();
    V_SLA_ACTIVITY_TBL     SLA_ACTIVITY_TABLE;
    V_SLA_RESULT_TBL       SLA_RESULT_TABLE;
    V_CANCEL_DT            DATE;
    V_PREV_TCD             DATE;
    V_REQUEST_TYPE_ID      NUMBER(10);
    V_REQUEST_STATUS_USA_STAFF VARCHAR2(50);
    V_ADMIN_CODE            VARCHAR2(50);

    V_CLASS_TYPE_ID         NUMBER(10);
    V_APPOINTMENT_TYPE_ID   NUMBER(10);
    V_CLASS_MAJOR_FLAG      CHAR(1);
    V_TIMEZONE_OFFSET       FLOAT(4);
    V_IS_BUSINESS_CAL       BOOLEAN := TRUE;
    V_IS_CANCEL             BOOLEAN := FALSE;

    IDX                     INT;

BEGIN
    -- Get all normal activities
    /*
    SELECT SLA_ACTIVITY_RECORD(P.NAME, A.NAME, A.STARTDTIME, A.CMPLTDTIME)
      BULK COLLECT INTO V_SLA_ACTIVITY_TBL
      FROM BIZFLOW.PROCDEF P 
           JOIN BIZFLOW.ACT A ON P.PROCDEFID = A.DEFPROCDEFID 
           JOIN BIZFLOW.RLVNTDATA R ON R.PROCID = A.PROCID 
     WHERE R.RLVNTDATANAME = 'requestNum' 
       AND R.VALUE = I_REQUEST_NUMBER
       AND A.TYPE = 'P'
       AND A.STATE != 'D'
       AND A.STARTDTIME IS NOT NULL;
    */

    -- Get general information
    BEGIN
        SELECT R.REQ_CANCEL_DT,
               SG.SG_ADMIN_CD, 
               SG.SG_RT_ID, -- Request Type ID
               SG.SG_CT_ID,
               SG.SG_AT_ID,
               CASE WHEN SG.SG_CT_ID IN (68,72,77,80,83,86) THEN 'T' ELSE 'F' END -- Classification Type: 'Create New Position Description', 'Update Major Duties'
          INTO V_CANCEL_DT,
               V_ADMIN_CODE,
               V_REQUEST_TYPE_ID,
               V_CLASS_TYPE_ID,
               V_APPOINTMENT_TYPE_ID,
               V_CLASS_MAJOR_FLAG
          FROM REQUEST R
               LEFT OUTER JOIN STRATCON_GEN SG ON SG.SG_REQ_ID = R.REQ_ID
         WHERE R.REQ_JOB_REQ_NUMBER = I_REQUEST_NUMBER;
    EXCEPTION WHEN NO_DATA_FOUND THEN
        RETURN NULL;
    END;

    -- Get USA Staffing data
    BEGIN
        SELECT REQUEST_STATUS
          INTO V_REQUEST_STATUS_USA_STAFF
          FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS 
         WHERE REQUEST_NUMBER = I_REQUEST_NUMBER
           AND ROWNUM = 1
         ORDER BY ANNOUNCEMENT_OPEN_DATE DESC;
    EXCEPTION WHEN NO_DATA_FOUND THEN
        V_REQUEST_STATUS_USA_STAFF := NULL;
    END;

    V_TIMEZONE_OFFSET := GET_TIMEZONE_OFFSET(I_TIMEZONE);
    IF UPPER(I_CALENDAR_TYPE) = 'BUSINESS' THEN
        V_IS_BUSINESS_CAL := TRUE;
    ELSE
        V_IS_BUSINESS_CAL := FALSE;
    END IF;

    V_IS_CANCEL := V_REQUEST_STATUS_USA_STAFF = 'Request Cancelled' OR V_CANCEL_DT IS NOT NULL;
    
    --  TEST ---
    --V_REQUEST_TYPE_ID := REQ_TYPE_APPOINTMENT;
    --V_CLASS_TYPE_ID := 0;
    --V_APPOINTMENT_TYPE_ID :=642;
    -------

    SELECT SLA_RESULT_RECORD(SLA_ID,PROCESS_NAME,ACTIVITY_NAME,SG_RT_ID,TARGET_BUSINESS_DAY,TOTAL_CALENDAR_DAY,DISPLAY_ORDER,NULL,NULL,NULL,NULL,NULL,NULL)
      BULK COLLECT INTO V_SLA_RESULT_TBL
      FROM SLA_HIRING_TIMELINE
     WHERE SG_RT_ID = V_REQUEST_TYPE_ID
       AND (CLASS_MAJOR IS NULL OR CLASS_MAJOR = V_CLASS_MAJOR_FLAG)
     ORDER BY DISPLAY_ORDER;

    -- Calculate Activity Start Date (ASD), Actual Completion Date (ACD), and Target Completion Date (TCD)
    FOR IDX IN V_SLA_RESULT_TBL.FIRST..V_SLA_RESULT_TBL.LAST LOOP
        IF V_IS_CANCEL THEN
            -- Eligibility and Qualifications Review, and Offer section 
            --IF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_EQRA%' ESCAPE '\' OR V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_O\_%' ESCAPE '\' THEN
                V_SLA_RESULT_TBL(IDX).ASD_STR := 'N/A';
                V_SLA_RESULT_TBL(IDX).ACD_STR := 'N/A';
                V_SLA_RESULT_TBL(IDX).TCD_STR := 'N/A';
                CONTINUE;
            --END IF; 
        END IF;
        IF V_REQUEST_TYPE_ID = REQ_TYPE_CLASSIFICATION_ONLY THEN
            IF V_CLASS_TYPE_ID in (70,73) THEN --Update Coversheet, Reorganization Pen & Ink
                IF V_SLA_RESULT_TBL(IDX).SLA_ID IN ('C_SC_2','C_SC_3','C_SC_4') THEN
                    V_SLA_RESULT_TBL(IDX).ASD_STR := 'N/A';
                    V_SLA_RESULT_TBL(IDX).ACD_STR := 'N/A';
                    V_SLA_RESULT_TBL(IDX).TCD_STR := 'N/A';
                    CONTINUE;
                END IF;                
            ELSIF  V_CLASS_TYPE_ID = 75 THEN --Review Existing Position Description
                IF V_SLA_RESULT_TBL(IDX).SLA_ID IN ('C_SC_2','C_SC_3') OR V_SLA_RESULT_TBL(IDX).SLA_ID LIKE 'C\_C%' ESCAPE '\' THEN
                    V_SLA_RESULT_TBL(IDX).ASD_STR := 'N/A';
                    V_SLA_RESULT_TBL(IDX).ACD_STR := 'N/A';
                    V_SLA_RESULT_TBL(IDX).TCD_STR := 'N/A';
                    CONTINUE;
                END IF;
            END IF;
        ELSIF V_REQUEST_TYPE_ID = REQ_TYPE_RECRUITMENT THEN
            IF V_CLASS_TYPE_ID = 82 THEN -- Review Existing Position Description
                IF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE 'R\_C%' ESCAPE '\' THEN
                    V_SLA_RESULT_TBL(IDX).ASD_STR := 'N/A';
                    V_SLA_RESULT_TBL(IDX).ACD_STR := 'N/A';
                    V_SLA_RESULT_TBL(IDX).TCD_STR := 'N/A';
                    CONTINUE;
                END IF; 
            END IF;
        ELSIF V_REQUEST_TYPE_ID = REQ_TYPE_APPOINTMENT THEN
            IF V_APPOINTMENT_TYPE_ID = 642 THEN -- Expert/Consultant
                IF V_SLA_RESULT_TBL(IDX).SLA_ID IN ('A_SC_2','A_SC_3','A_SC_4','A_EQRA_2') OR V_SLA_RESULT_TBL(IDX).SLA_ID LIKE 'A\_C%' ESCAPE '\'  OR V_SLA_RESULT_TBL(IDX).SLA_ID LIKE 'A\_O%' ESCAPE '\' THEN
                    V_SLA_RESULT_TBL(IDX).ASD_STR := 'N/A';
                    V_SLA_RESULT_TBL(IDX).ACD_STR := 'N/A';
                    V_SLA_RESULT_TBL(IDX).TCD_STR := 'N/A';
                    CONTINUE;
                END IF; 
            ELSIF V_APPOINTMENT_TYPE_ID = 646 THEN -- Volunteer
                IF V_SLA_RESULT_TBL(IDX).SLA_ID IN ('A_SC_2','A_SC_3','A_SC_4','A_EQRA_2') OR V_SLA_RESULT_TBL(IDX).SLA_ID LIKE 'A\_C%' ESCAPE '\'  OR V_SLA_RESULT_TBL(IDX).SLA_ID LIKE 'A\_O%' ESCAPE '\' THEN
                    V_SLA_RESULT_TBL(IDX).ASD_STR := 'N/A';
                    V_SLA_RESULT_TBL(IDX).ACD_STR := 'N/A';
                    V_SLA_RESULT_TBL(IDX).TCD_STR := 'N/A';
                    CONTINUE;
                END IF; 
            ELSIF V_CLASS_TYPE_ID = 87 THEN -- Review Existing Position Description
                IF V_SLA_RESULT_TBL(IDX).SLA_ID IN ('A_SC_2','A_SC_3') OR V_SLA_RESULT_TBL(IDX).SLA_ID LIKE 'A\_C%' ESCAPE '\' THEN
                    V_SLA_RESULT_TBL(IDX).ASD_STR := 'N/A';
                    V_SLA_RESULT_TBL(IDX).ACD_STR := 'N/A';
                    V_SLA_RESULT_TBL(IDX).TCD_STR := 'N/A';
                    CONTINUE;
                END IF; 
            END IF;
        END IF;

        V_SLA_RESULT_TBL(IDX).ASD := GET_ACT_DATETIME(I_REQUEST_NUMBER, V_SLA_RESULT_TBL(IDX).PROCESS_NAME, V_SLA_RESULT_TBL(IDX).ACTIVITY_NAME, 'START');
        V_SLA_RESULT_TBL(IDX).ACD := GET_ACT_DATETIME(I_REQUEST_NUMBER, V_SLA_RESULT_TBL(IDX).PROCESS_NAME, V_SLA_RESULT_TBL(IDX).ACTIVITY_NAME, 'END');

        IF V_SLA_RESULT_TBL(IDX).ASD IS NOT NULL THEN
            
            -- Change to local timezone
            IF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_SC%' ESCAPE '\' OR V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_C%' ESCAPE '\' OR V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_EQRA%' ESCAPE '\' THEN
                V_SLA_RESULT_TBL(IDX).ASD := NEW_TIMEZONE(V_SLA_RESULT_TBL(IDX).ASD, V_TIMEZONE_OFFSET);
                V_SLA_RESULT_TBL(IDX).ACD := NEW_TIMEZONE(V_SLA_RESULT_TBL(IDX).ACD, V_TIMEZONE_OFFSET);
            END IF;            
            
            IF V_IS_BUSINESS_CAL THEN
                V_SLA_RESULT_TBL(IDX).TCD :=  BIZFLOW.HHS_FN_ADD_BUSDAY(V_SLA_RESULT_TBL(IDX).ASD, V_SLA_RESULT_TBL(IDX).TARGET_BUSINESS_DAY);
            ELSE
                V_SLA_RESULT_TBL(IDX).TCD :=  V_SLA_RESULT_TBL(IDX).ASD + V_SLA_RESULT_TBL(IDX).TOTAL_CALENDAR_DAY;
            END IF;
        END IF;


        --DBMS_OUTPUT.PUT_LINE('V_PREV_TCD='||TO_CHAR(V_PREV_TCD, 'MM/DD/YYYY'));
                
        IF V_SLA_RESULT_TBL(IDX).TCD IS NULL THEN
            IF V_IS_BUSINESS_CAL THEN
                --DBMS_OUTPUT.PUT_LINE(IDX||': '||V_SLA_RESULT_TBL(IDX).SLA_ID||': TARGET_BUSINESS_DAY='||V_SLA_RESULT_TBL(IDX).TARGET_BUSINESS_DAY);
                V_SLA_RESULT_TBL(IDX).TCD :=  BIZFLOW.HHS_FN_ADD_BUSDAY(V_PREV_TCD, V_SLA_RESULT_TBL(IDX).TARGET_BUSINESS_DAY);
            ELSE
                --DBMS_OUTPUT.PUT_LINE(IDX||': '||V_SLA_RESULT_TBL(IDX).SLA_ID||': TOTAL_CALENDAR_DAY='||V_SLA_RESULT_TBL(IDX).TOTAL_CALENDAR_DAY);
                V_SLA_RESULT_TBL(IDX).TCD :=  V_PREV_TCD + V_SLA_RESULT_TBL(IDX).TOTAL_CALENDAR_DAY;
            END IF;
        END IF;

        V_PREV_TCD := V_SLA_RESULT_TBL(IDX).TCD;

        IF V_SLA_RESULT_TBL(IDX).ASD_STR IS NULL THEN
            V_SLA_RESULT_TBL(IDX).ASD_STR := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
        END IF;
        IF V_SLA_RESULT_TBL(IDX).ACD_STR IS NULL THEN
            V_SLA_RESULT_TBL(IDX).ACD_STR := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
        END IF;
        IF V_SLA_RESULT_TBL(IDX).TCD_STR IS NULL THEN
            V_SLA_RESULT_TBL(IDX).TCD_STR := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        END IF;

    END LOOP;

    RETURN V_SLA_RESULT_TBL;
END GET_HIRING_TIMELINE_SLA;

FUNCTION GET_HIRING_TIMELINE 
  (
    I_REQUEST_NUMBER IN VARCHAR2,
    I_CALENDAR_TYPE  IN VARCHAR2 DEFAULT 'Calendar',
    I_TIMEZONE       IN VARCHAR2 DEFAULT 'America/New_York'
  )
RETURN HIRING_TIMELINE_TABLE 
IS
    REQ_TYPE_CLASSIFICATION_ONLY   CONSTANT NUMBER := 17; -- Classification Only
    REQ_TYPE_RECRUITMENT           CONSTANT NUMBER := 18; -- Recruitment
    REQ_TYPE_APPOINTMENT           CONSTANT NUMBER := 76; -- Appointment
    APP_TYPE_30_MORE_DISABLED_VET  CONSTANT NUMBER := 641;

    V_RESULT               HIRING_TIMELINE_TABLE := HIRING_TIMELINE_TABLE();
    V_SLA_ACTIVITY_TBL     SLA_ACTIVITY_TABLE;
    V_SLA_RESULT_TBL       SLA_RESULT_TABLE;
    V_CLASS_MAJOR_FLAG     CHAR(1);
    V_CANCEL_DT            DATE;
    V_PREV_TCD             DATE;
    V_TH_REC               HIRING_TIMELINE_RECORD := HIRING_TIMELINE_RECORD(NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
                                                                            NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
                                                                            NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
                                                                            NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
                                                                            NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);

BEGIN

    V_SLA_RESULT_TBL := GET_HIRING_TIMELINE_SLA(TRIM(I_REQUEST_NUMBER), TRIM(I_CALENDAR_TYPE), I_TIMEZONE);

    V_TH_REC.REQUEST_NUMBER := I_REQUEST_NUMBER;

    -- Get general information
    BEGIN
        SELECT R.REQ_CANCEL_DT,
               TO_CHAR(R.REQ_JOB_REQ_CREATE_DT,'MM/DD/YYYY'),            
               SG.SG_ADMIN_CD, 
               SG.SG_RT_ID, -- Request Type ID
               LOOKUP_LABEL(SG.SG_RT_ID), -- Request Type
               LOOKUP_LABEL(SG.SG_CT_ID), -- Class Type
               CASE WHEN SG.SG_AT_ID = APP_TYPE_30_MORE_DISABLED_VET THEN '30% or More Disabled Veterans' ELSE LOOKUP_LABEL(SG.SG_AT_ID) END,  -- Appointment Type
               CASE WHEN SG.SG_CT_ID IN (68,72,77,80,83,86) THEN 'T' ELSE 'F' END -- Classification Type: 'Create New Position Description', 'Update Major Duties'
          INTO V_CANCEL_DT,
               V_TH_REC.CREATE_DATE,
               V_TH_REC.ADMIN_CODE,
               V_TH_REC.REQUEST_TYPE_ID,
               V_TH_REC.REQUEST_TYPE,
               V_TH_REC.CLASS_TYPE,
               V_TH_REC.APPOINTMENT_TYPE,
               V_CLASS_MAJOR_FLAG
          FROM REQUEST R
               LEFT OUTER JOIN STRATCON_GEN SG ON SG.SG_REQ_ID = R.REQ_ID
         WHERE R.REQ_JOB_REQ_NUMBER = I_REQUEST_NUMBER;
    EXCEPTION WHEN NO_DATA_FOUND THEN
        RETURN NULL;
    END;

    -- Get USA Staffing data
    BEGIN
        SELECT REQUEST_STATUS
          INTO V_TH_REC.REQUEST_STATUS_USA_STAFF
          FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS 
         WHERE REQUEST_NUMBER = I_REQUEST_NUMBER
           AND ROWNUM = 1
         ORDER BY ANNOUNCEMENT_OPEN_DATE DESC;
    EXCEPTION WHEN NO_DATA_FOUND THEN
        V_TH_REC.REQUEST_STATUS_USA_STAFF := NULL;
    END;

    -- Set Summary
    V_TH_REC.SUMMARY := 'NEIL Request Number '||I_REQUEST_NUMBER||CHR(10);
    IF V_TH_REC.CLASS_TYPE IS NOT NULL THEN
        V_TH_REC.SUMMARY := V_TH_REC.SUMMARY ||'Classification Type: '||V_TH_REC.CLASS_TYPE||CHR(10);
    END IF;
    
    IF V_TH_REC.REQUEST_TYPE_ID = REQ_TYPE_APPOINTMENT THEN
        V_TH_REC.SUMMARY := V_TH_REC.SUMMARY || V_TH_REC.APPOINTMENT_TYPE || ' ' || V_TH_REC.REQUEST_TYPE ||' Request Created on '|| V_TH_REC.CREATE_DATE;
    ELSE
        V_TH_REC.SUMMARY := V_TH_REC.SUMMARY || ' ' || V_TH_REC.REQUEST_TYPE ||' Request Created on '|| V_TH_REC.CREATE_DATE;
    END IF;

    IF V_TH_REC.ADMIN_CODE IS NOT NULL THEN
        V_TH_REC.SUMMARY := V_TH_REC.SUMMARY || ' for ' || V_TH_REC.ADMIN_CODE ;
    END IF;


    -- Set section title
    IF V_TH_REC.REQUEST_TYPE_ID = REQ_TYPE_APPOINTMENT THEN
        V_TH_REC.TTL_STRATEGIC_CONSULTATION := 'Strategic Consultation (Appointment Actions)';
    ELSIF V_TH_REC.REQUEST_TYPE_ID = REQ_TYPE_CLASSIFICATION_ONLY THEN
        V_TH_REC.TTL_STRATEGIC_CONSULTATION := 'Strategic Consultation (Classification Only Actions)';
    ELSIF V_TH_REC.REQUEST_TYPE_ID = REQ_TYPE_RECRUITMENT THEN
        V_TH_REC.TTL_STRATEGIC_CONSULTATION := 'Strategic Consultation (Recruitment Actions)';
    END IF;
    V_TH_REC.TTL_CLASSIFICATION := 'Classification';
    V_TH_REC.TTL_RECRUITMENT := 'Recruitment';
    V_TH_REC.TTL_OFFER := 'Offer';

    -- Show/hide section
    V_TH_REC.SHOW_STRATEGIC_CONSULTATION := 'T';
    V_TH_REC.SHOW_CLASSIFICATION := 'T';
    V_TH_REC.SHOW_EQRA := 'F';
    V_TH_REC.SHOW_RECRUITMENT := 'F';
    V_TH_REC.SHOW_OFFER := 'F';

    -- Binding to column
    FOR IDX IN V_SLA_RESULT_TBL.FIRST..V_SLA_RESULT_TBL.LAST LOOP
        IF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_SC\_1' ESCAPE '\' THEN
            V_TH_REC.SC_1_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.SC_1_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.SC_1_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_SC\_2' ESCAPE '\' THEN
            V_TH_REC.SC_2_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.SC_2_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.SC_2_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_SC\_3' ESCAPE '\' THEN
            V_TH_REC.SC_3_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.SC_3_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.SC_3_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_SC\_4' ESCAPE '\' THEN
            V_TH_REC.SC_4_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.SC_4_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.SC_4_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_CM_\_1' ESCAPE '\' THEN
            V_TH_REC.CM_1_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.CM_1_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.CM_1_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_CM_\_2' ESCAPE '\' THEN
            V_TH_REC.CM_2_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.CM_2_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.CM_2_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_CM_\_3' ESCAPE '\' THEN
            V_TH_REC.CM_3_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.CM_3_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.CM_3_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_CM_\_4' ESCAPE '\' THEN
            V_TH_REC.CM_4_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.CM_4_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.CM_4_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_CM_\_5' ESCAPE '\' THEN
            V_TH_REC.CM_5_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.CM_5_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.CM_5_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_R\_1' ESCAPE '\' THEN
            V_TH_REC.SHOW_RECRUITMENT := 'T';
            V_TH_REC.R_1_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.R_1_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.R_1_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_R\_2' ESCAPE '\' THEN
            V_TH_REC.R_2_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.R_2_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.R_2_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_R\_3' ESCAPE '\' THEN
            V_TH_REC.R_3_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.R_3_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.R_3_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_R\_4' ESCAPE '\' THEN
            V_TH_REC.R_4_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.R_4_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.R_4_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_R\_5' ESCAPE '\' THEN
            V_TH_REC.R_5_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.R_5_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.R_5_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_R\_6' ESCAPE '\' THEN
            V_TH_REC.R_6_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.R_6_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.R_6_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_R\_7' ESCAPE '\' THEN
            V_TH_REC.R_7_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.R_7_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.R_7_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_EQRA\_1' ESCAPE '\' THEN
            V_TH_REC.SHOW_EQRA := 'T';
            V_TH_REC.EQRA_1_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.EQRA_1_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.EQRA_1_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_EQRA\_2' ESCAPE '\' THEN
            V_TH_REC.EQRA_2_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.EQRA_2_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.EQRA_2_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');            
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_O\_1' ESCAPE '\' THEN
            V_TH_REC.SHOW_OFFER := 'T';
            V_TH_REC.O_1_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.O_1_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.O_1_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_O\_2' ESCAPE '\' THEN
            V_TH_REC.O_2_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.O_2_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.O_2_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_O\_3' ESCAPE '\' THEN
            V_TH_REC.O_3_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.O_3_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.O_3_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_O\_4' ESCAPE '\' THEN
            V_TH_REC.O_4_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.O_4_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.O_4_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_O\_5' ESCAPE '\' THEN
            V_TH_REC.O_5_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.O_5_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.O_5_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        ELSIF V_SLA_RESULT_TBL(IDX).SLA_ID LIKE '_\_O\_6' ESCAPE '\' THEN
            V_TH_REC.O_6_ASD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ASD');
            V_TH_REC.O_6_ACD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'ACD');
            V_TH_REC.O_6_TCD := TO_REPORT(V_SLA_RESULT_TBL(IDX), 'TCD');
        END IF;
    END LOOP;

    V_RESULT.EXTEND;
    V_RESULT(1) := V_TH_REC;

    RETURN V_RESULT;
END GET_HIRING_TIMELINE;

FUNCTION GET_ACT_DATETIME 
(
    I_REQUEST_NUMBER IN VARCHAR2 
    , I_SLA_PROCNM IN VARCHAR2
    , I_SLA_ACTNM IN VARCHAR2 
    , I_DATE_TP IN VARCHAR2 -- START | END
) 
RETURN DATE 
IS
    V_PROCID INTEGER;
    PROCNM VARCHAR2(500);
    DATA_SRC VARCHAR2(10);
    DEBUG_MSG VARCHAR2(1000);
    DT_START DATE;
    DT_COMPLETION DATE;
    ACTNM_1 VARCHAR2(1000);
    ACTNM_2 VARCHAR2(1000);
    ACTNM_3 VARCHAR2(1000);
    ACTNM_4 VARCHAR2(1000);
    ACTNM_5 VARCHAR2(1000);

BEGIN
  /* 
    ------------------------------------------------------------------------------------------   
    SLA Activities
    ------------------------------------------------------------------------------------------
    Strategic Consultation	Acknowledge Strategic Consultation Meeting (Component)
    Strategic Consultation	Approve Strategic Consultation Meeting (HR)
    Strategic Consultation	Create/Review/Modify Request (Component)
    Strategic Consultation	Hold Strategic Consultation Meeting (HR)
    Classification - Major	Approve Coversheet (Component)
    Classification - Major	BUS Code Review (HR)
    Classification - Major	Complete PD Coversheet & Classification Analysis (HR)
    Classification - Major	Confirm Analysis (Component)
    Classification - Major	Create Final Package (HR)
    Classification - Minor	Approve Coversheet (Component)
    Classification - Minor	BUS Code Review (HR)
    Classification - Minor	Complete PD Coversheet & Classification Analysis (HR)
    Classification - Minor	Confirm Analysis (Component)
    Classification - Minor	Create Final Package (HR)
    Eligibility and Qualifications Review Activities	SO Selection Determination (Component)
    Eligibility and Qualifications Review Activities	Staff or Spec. Staff determines eligibility and qualifications (HR)

    Recruitment	Announcement Open Period (Other)
    Recruitment	Certificate Issue (HR)
    Recruitment	Certificate Return (Component)
    Recruitment	Draft announcement (HR)
    Recruitment	Final Edits and Post to USA jobs (HR)
    Recruitment	Qualification Analysis (HR)
    Recruitment	Review Assessment/Announcement (Component)    
    Offer	Complete Pre-Employment Forms & Initiate Background Investigation (HR)
    Offer	Establish Entry on Duty Date (HR)
    Offer	Receive Background Investigation Clearance (Other)
    Offer	Receive Background Investigation Clearance (Security)
    Offer	Receive Tentative Offer Response (Applicant)
    Offer	Send Official Offer (HR)
    Offer	Send Tentative Offer (HR)

    ------------------------------------------------------------------------------------------   
    BizFlow Activities
    ------------------------------------------------------------------------------------------   
    Strategic Consultation	Acknowledge Strat Cons Meeting
    Strategic Consultation	Approve Strat Cons Meeting
    Strategic Consultation	Create Request
    Strategic Consultation	Hold Strategic Consultation Meeting
    Strategic Consultation	Modify Request
    Strategic Consultation	Review Request       Classification	Approve Coversheet and Create Final Pkg
    Classification	Approve PD Coversheet - SO
    Classification	Complete PD Coversheet and Classification Analysis
    Classification	Confirm BUS Code
    Classification	Confirm Classification Analysis
    Classification	Confirm Final BUS Code
    Eligibility and Qualifications Review	Approve Candidate for Appointment
    Eligibility and Qualifications Review	Conduct Eligibility and Qualifications Review
    Eligibility and Qualifications Review	Select Candidate for Appointment
    Eligibility and Qualifications Review	Update the Request
*/

    DBMS_OUTPUT.PUT_LINE('I_REQUEST_NUMBER=' || I_REQUEST_NUMBER);
    DBMS_OUTPUT.PUT_LINE('I_SLA_PROCNM=' || I_SLA_PROCNM);
    DBMS_OUTPUT.PUT_LINE('I_SLA_ACTNM=' || I_SLA_ACTNM);
    DBMS_OUTPUT.PUT_LINE('I_DATE_TP=' || I_DATE_TP);

    IF UPPER(I_SLA_PROCNM) = 'STRATEGIC CONSULTATION' THEN
        PROCNM := 'Strategic Consultation';
    ELSIF UPPER(I_SLA_PROCNM) = 'ELIGIBILITY AND QUALIFICATIONS REVIEW ACTIVITIES' THEN
        PROCNM := 'Eligibility and Qualifications Review';
    ELSIF UPPER(I_SLA_PROCNM) = 'CLASSIFICATION - MAJOR' THEN
        PROCNM := 'Classification';
    ELSIF UPPER(I_SLA_PROCNM) = 'CLASSIFICATION - MINOR' THEN
        PROCNM := 'Classification';
    END IF;

    IF UPPER(I_SLA_PROCNM) = 'OFFER' OR UPPER(I_SLA_PROCNM) = 'RECRUITMENT' THEN
        DATA_SRC := 'USAS'; --USA Staffing table
    ELSE
        DATA_SRC := 'EWITS';
    END IF;
    
    DBMS_OUTPUT.PUT_LINE('PROCNM=' || PROCNM);
    DBMS_OUTPUT.PUT_LINE('DATA_SRC=' || DATA_SRC);

    ----------------------------------------------------------------------------------------------------
    IF DATA_SRC = 'EWITS' THEN

        BEGIN
            SELECT P.PROCID
              INTO V_PROCID
              FROM BIZFLOW.RLVNTDATA PV
                    JOIN BIZFLOW.PROCS P ON P.PROCID = PV.PROCID
             WHERE PV.RLVNTDATANAME = 'requestNum'
               AND PV.VALUE = I_REQUEST_NUMBER
               AND P.NAME = PROCNM;
        EXCEPTION WHEN NO_DATA_FOUND THEN
            RETURN NULL;
        END;
        DBMS_OUTPUT.PUT_LINE('PROCID=' || V_PROCID);

        --MAP between SLA ACT to BizFlow ACT
        IF UPPER(I_SLA_PROCNM) = 'STRATEGIC CONSULTATION' THEN

            IF UPPER(I_SLA_ACTNM) = UPPER('Create/Review/Modify Request (Component)') THEN
                ACTNM_1 := 'Create Request';
                ACTNM_2 := 'Review Request';
                ACTNM_3 := 'Modify Request';
            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Hold Strategic Consultation Meeting (HR)') THEN
                ACTNM_1 := 'Hold Strategic Consultation Meeting';
            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Acknowledge Strategic Consultation Meeting (Component)') THEN
                ACTNM_1 := 'Acknowledge Strat Cons Meeting';
            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Approve Strategic Consultation Meeting (HR)') THEN
                ACTNM_1 := 'Approve Strat Cons Meeting';
            END IF;

        ELSIF (UPPER(I_SLA_PROCNM) = 'ELIGIBILITY AND QUALIFICATIONS REVIEW ACTIVITIES') THEN

            IF UPPER(I_SLA_ACTNM) = UPPER('SO Selection Determination (Component)') THEN          
                ACTNM_1 := 'Select Candidate for Appointment';
            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Staff or Spec. Staff determines eligibility and qualifications (HR)') THEN
                ACTNM_1 := 'Conduct Eligibility and Qualifications Review';
            END IF;

        ELSIF (UPPER(I_SLA_PROCNM) = 'CLASSIFICATION - MAJOR' 
            OR UPPER(I_SLA_PROCNM) = 'CLASSIFICATION - MINOR') THEN

            IF UPPER(I_SLA_ACTNM) = UPPER('Complete PD Coversheet & Classification Analysis (HR)') THEN
                ACTNM_1 := 'Complete PD Coversheet and Classification Analysis';
            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Confirm Analysis (Component)') THEN
                ACTNM_1 := 'Confirm Classification Analysis';
            ELSIF UPPER(I_SLA_ACTNM) = UPPER('BUS Code Review (HR)') THEN
                ACTNM_1 := 'Confirm BUS Code';
                ACTNM_2 := 'Confirm Final BUS Code';
            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Approve Coversheet (Component)') THEN
                ACTNM_1 := 'Approve PD Coversheet - SO';
            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Create Final Package (HR)') THEN
                ACTNM_1 := 'Approve Coversheet and Create Final Pkg';
            END IF;

        END IF;

        DBMS_OUTPUT.PUT_LINE('ACTNM_1=' || ACTNM_1);
        DBMS_OUTPUT.PUT_LINE('ACTNM_2=' || ACTNM_2);
        DBMS_OUTPUT.PUT_LINE('ACTNM_3=' || ACTNM_3);
        DBMS_OUTPUT.PUT_LINE('ACTNM_4=' || ACTNM_4);
        DBMS_OUTPUT.PUT_LINE('ACTNM_5=' || ACTNM_5);

        IF UPPER(I_DATE_TP) = 'START' THEN
            DBMS_OUTPUT.PUT_LINE('GETTING MIN STARTDTIME PROCID=' || TO_CHAR(V_PROCID));
            SELECT MIN(STARTDTIME)
              INTO DT_START
              FROM BIZFLOW.ACT
             WHERE TYPE = 'P'
               AND STATE != 'D'
               AND PROCID = V_PROCID
               AND NAME IN (ACTNM_1, ACTNM_2, ACTNM_3, ACTNM_4, ACTNM_5);

        ELSE
            DBMS_OUTPUT.PUT_LINE('GETTING max cmpltdtime');
            SELECT MAX(cmpltdtime)
              INTO DT_COMPLETION
              FROM BIZFLOW.ACT
             WHERE TYPE = 'P'
               AND STATE != 'D'
               AND PROCID = V_PROCID
               AND NAME IN (ACTNM_1, ACTNM_2, ACTNM_3, ACTNM_4, ACTNM_5);

         END IF;

    ----------------------------------------------------------------------------------------------------  
    --USA STAFFING
    ELSE 


        IF UPPER(I_SLA_PROCNM) = 'RECRUITMENT' THEN

            IF UPPER(I_SLA_ACTNM) = UPPER('Draft announcement (HR)') THEN
                SELECT MIN(REQUEST_APPROVAL_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(HM_ANN_RVW_SENT_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;  

            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Review Assessment/Announcement (Component)') THEN 
                SELECT MIN(HM_ANN_RVW_SENT_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(HM_ANN_RVW_CMPL_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;      

            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Final Edits and Post to USA jobs (HR)') THEN
                SELECT MIN(HM_ANN_RVW_CMPL_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(ANNOUNCEMENT_OPEN_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;  

            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Announcement Open Period (Other)') THEN
                SELECT MIN(ANNOUNCEMENT_OPEN_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(ANNOUNCEMENT_CLOSE_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;                   

            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Qualification Analysis (HR)') THEN
                SELECT MIN(ANNOUNCEMENT_CLOSE_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(CERTIFICATE_ISSUE_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;  

            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Certificate Issue (HR)') THEN
                SELECT MIN(CERTIFICATE_ISSUE_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(REVIEW_SENT_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;  

            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Certificate Return (Component)') THEN
                SELECT MIN(REVIEW_SENT_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(REVIEW_RETURN_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;  

            END IF;

        ELSIF UPPER(I_SLA_PROCNM) = 'OFFER' THEN

            IF UPPER(I_SLA_ACTNM) = UPPER('Send Tentative Offer (HR)') THEN
                SELECT MIN(NEW_HIRE_CREATE_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(SEND_TENT_OFFR_CMPL_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;   

             ELSIF UPPER(I_SLA_ACTNM) = UPPER('Receive Tentative Offer Response (Applicant)') THEN
                SELECT MIN(SEND_TENT_OFFR_CMPL_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(TENT_OFFR_RSPNS_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;  

            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Complete Pre-Employment Forms & Initiate Background Investigation (HR)') THEN
                SELECT MIN(TENT_OFFR_RSPNS_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(NEW_HIRE_CREATE_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;      

            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Receive Background Investigation Clearance (Other)') THEN
                SELECT MIN(INIT_BKGRND_INVST_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(RCVE_BKGRND_INVST_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;   
            --NOTES: No rule was defined for this SLA activity in the Hiring Timelines 20190520 v1 document.
            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Receive Background Investigation Clearance (Security)') THEN
                SELECT MIN(INIT_BKGRND_INVST_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(RCVE_BKGRND_INVST_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;    

            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Establish Entry on Duty Date (HR)') THEN
                SELECT MIN(RCVE_BKGRND_INVST_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(EOD_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;             

            ELSIF UPPER(I_SLA_ACTNM) = UPPER('Send Official Offer (HR)') THEN
                SELECT MIN(EOD_DATE)
                  INTO DT_START
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;

                SELECT MAX(SEND_OFCL_OFFR_CMPL_DATE)
                  INTO DT_COMPLETION
                  FROM HHS_HR.DSS_CMS_TIME_OF_POSSESS D
                 WHERE D.REQUEST_NUMBER = I_REQUEST_NUMBER
                ;             

            END IF;

        END IF;

    END IF;

    DBMS_OUTPUT.PUT_LINE('>DT_START=' || TO_CHAR(DT_START, 'YYYY/MM/DD'));
    DBMS_OUTPUT.PUT_LINE('>DT_COMPLETION=' || TO_CHAR(DT_COMPLETION, 'YYYY/MM/DD'));

    IF UPPER(I_DATE_TP) = 'START' OR UPPER(I_DATE_TP) = 'S' THEN
        RETURN DT_START;
    ELSE
        RETURN DT_COMPLETION;
    END IF;


END GET_ACT_DATETIME;

END;
/

--
-- End of SLA_PKS
--

GRANT EXECUTE ON HHS_CMS_HR.SLA_PKS TO BIZFLOW WITH GRANT OPTION;
/


ALTER TABLE ERLR_GRIEVANCE
  ADD GI_GRIEVANCE_RELATED_2_PMAP_2 nvarchar2(3);
/

COMMENT ON COLUMN ERLR_GRIEVANCE.GI_GRIEVANCE_RELATED_2_PMAP_2 IS 'Whether Grievance was Related to a PMAP or not for Negotiated type of Grievance'; 
/

COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.DATA_PULLED_ON IS 'The date that the data was saved on the Time to Hire table';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.WEEK_OF IS 'Indicates the start of the week that the data shows a snapshot of ';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.COMPONENT IS 'The second sub-organization';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.REQUEST_NUMBER IS 'The NEIL request number';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.PROCESS_ID IS 'The process ID from Strategic Consultation';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.STRAT_CON_START IS 'The start date of Strategic Consultation. This is the date entered into NEIL';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.STRAT_CON_END IS 'The end date of Strategic Consultation. This is the date HR approves StratCon';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.MISSED_STRAT_CON IS 'The flag to represent that the request did not meet the Strategic Consultation target goal';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.ACHIEVED_STRAT_CON IS 'The flag to represent that the request met the Strategic Consultation target goal';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.CLASS_START IS 'The start date of Classification, Job Analysis, Assessment. This is the date HR approves StratCon';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.CLASS_END IS 'The end date of Classification, Job Analysis, Assessment. This is the Announcement Open Date in USA Staffing';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.ACHIEVED_CLASS IS 'The flag to represent that the request met the Classification, Job Analysis, Assessment target goal';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.MISSED_CLASS IS 'The flag to represent that the request did not meet the Classification, Job Analysis, Assessment target goal';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.QUALS_START IS 'The start date of Qualifications, Certificate Issuance. This is the Announcement Close Date in USA Staffing';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.QUALS_END IS 'The end date of Qualifications, Certificate Issuance. This is the Certificate Review Sent Date in USA Staffing';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.MISSED_QUALS IS 'The flag to represent that the request did not meet the Qualifications, Certificate Issuance target goal';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.ACHIEVED_QUALS IS 'The flag to represent that the request met the Qualifications, Certificate Issuance target goal';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.SELECTION_START IS 'The start date of Interviews and Selection. This is the Certificate Review Sent Date in USA Staffing';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.SELECTION_END IS 'The end date of Interviews and Selection. This is the Certificate Review Return Date in USA Staffing';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.MISSED_SELECTION IS 'The flag to represent that the request did not meet the Interviews and Selection target goal';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.ACHIEVED_SELECTION IS 'The flag to represent that the request met the Interviews and Selection target goal';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.ACTION_ACTIVE_PRIOR_STRAT_CON IS 'The number of active actions prior to Strategic Consultation meeting';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.TENT_OFFER_START IS 'The start date of Tentative Offer. This is the Certificate Review Return Date in USA Staffing';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.TENT_OFFER_END IS 'The end date of Tentative Offer. This is the Send Tentative Offer Date in USA Staffing';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.MISSED_TENT_OFFER IS 'The flag to represent that the request did not meet the Tentative Offer target goal';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.ACHIEVED_TENT_OFFER IS 'The flag to represent that the request met the Tentative Offer target goal';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.OFCL_OFFER_START IS 'The start date of Official Offer. This is the Send Tentative Offer Date in USA Staffing';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.OFCL_OFFER_END IS 'The end date of Official Offer. This is the Official Offer Complete Date in USA Staffing';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.MISSED_OFCL_OFFER IS 'The flag to represent that the request did not meet the Official Offer target goal';
COMMENT ON COLUMN HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT.ACHIEVED_OFCL_OFFER IS 'The flag to represent that the request met the Official Offer target goal';
/
 
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_COM TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_COM TO BF_DEV_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LE TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LE TO BF_DEV_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LE_CRED TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LE_CRED TO BF_DEV_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LE_JUST_HISTORY TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LE_JUST_HISTORY TO BF_DEV_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LOOKUP TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_LOOKUP TO BF_DEV_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_PCA TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_PCA TO BF_DEV_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_PDP TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_PDP TO BF_DEV_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_PDP_PANEL TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_PDP_PANEL TO BF_DEV_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_REQUEST_CONTROL TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_REQUEST_CONTROL TO BF_DEV_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_SAM TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_SAM TO BF_DEV_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_SAM_JUST_HISTORY TO HHS_CMS_HR_RW_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON HHS_CMS_HR.INCENTIVES_SAM_JUST_HISTORY TO BF_DEV_ROLE;
/

COMMIT;
/

