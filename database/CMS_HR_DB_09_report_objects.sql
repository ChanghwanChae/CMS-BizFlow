



--------------------------------------------------------
--  DDL for Function FN_GET_MEMBER_DSCR
--------------------------------------------------------

/**
 * Gets member descriptions.
 *
 * @param I_MEMBERIDS - Selected Member IDs, comma separated.
 *
 * @return NVARCHAR2 - Names of the selected members, comma separated.
 */
CREATE OR REPLACE FUNCTION FN_GET_MEMBER_DSCR
(
	I_MEMBERIDS                 IN  VARCHAR2
)
RETURN NVARCHAR2
IS
	V_INPUT_VAL                 NVARCHAR2(1000);
	V_SQL                       VARCHAR2(4000);
	V_RETURN_VAL                NVARCHAR2(4000);

	V_IDX                       NUMBER(10);
	V_LOOP_CNT                  NUMBER(10);
	TYPE MEMBER_TYPE IS REF CURSOR;
	CUR_MEMBER                  MEMBER_TYPE;
	REC_MEMBER                  BIZFLOW.MEMBER%ROWTYPE;

	V_ERRCODE                   NUMBER(10);
	V_ERRMSG                    VARCHAR2(512);
BEGIN
	DBMS_OUTPUT.PUT_LINE('------- START: FN_GET_MEMBER_DSCR -------');
	DBMS_OUTPUT.PUT_LINE('-- PARAMETERS --');
	DBMS_OUTPUT.PUT_LINE('    I_MEMBERIDS = ' || I_MEMBERIDS );

	-- input validation
	IF I_MEMBERIDS IS NULL OR LENGTH(TRIM(I_MEMBERIDS)) <= 0
	THEN
		RETURN NULL;
	END IF;

	V_INPUT_VAL := REPLACE(I_MEMBERIDS, ',', ''',''');
	V_INPUT_VAL := CONCAT('''', V_INPUT_VAL);
	V_INPUT_VAL := CONCAT(V_INPUT_VAL, '''');
	DBMS_OUTPUT.PUT_LINE('    V_INPUT_VAL = ' || V_INPUT_VAL );

	V_SQL := 'SELECT * FROM BIZFLOW.MEMBER WHERE MEMBERID IN (' || V_INPUT_VAL || ') ';
	DBMS_OUTPUT.PUT_LINE('    V_SQL = ' || V_SQL );

	-- Loop through to look up description of each
	-- and concatenate descriptions delimitted by comma.
	DBMS_OUTPUT.PUT_LINE('Before open cursor for BIZFLOW.MEMBER');
	OPEN CUR_MEMBER FOR V_SQL;
	DBMS_OUTPUT.PUT_LINE('After open cursor for BIZFLOW.MEMBER');

	V_LOOP_CNT := 0;
	LOOP
		FETCH CUR_MEMBER INTO REC_MEMBER;
		EXIT WHEN CUR_MEMBER%NOTFOUND;
		V_LOOP_CNT := V_LOOP_CNT + 1;
		V_RETURN_VAL := V_RETURN_VAL || REC_MEMBER.NAME || ', ';
		DBMS_OUTPUT.PUT_LINE('Fetched record, loop count = ' || TO_CHAR(V_LOOP_CNT) || ' V_RETURN_VAL = ' || V_RETURN_VAL);
	END LOOP;
	CLOSE CUR_MEMBER;

	-- clear trailing comma if exists
	IF V_RETURN_VAL IS NOT NULL AND LENGTH(V_RETURN_VAL) > 0
	THEN
		V_IDX := INSTR(V_RETURN_VAL, ', ', -1);
		IF V_IDX > 0 AND V_IDX = (LENGTH(V_RETURN_VAL) - 1)
		THEN
			V_RETURN_VAL := SUBSTR(V_RETURN_VAL, 0, (LENGTH(V_RETURN_VAL) - 2));
		END IF;
	END IF;

	DBMS_OUTPUT.PUT_LINE('    V_RETURN_VAL = ' || V_RETURN_VAL);
	DBMS_OUTPUT.PUT_LINE('------- END: FN_GET_MEMBER_DSCR -------');
	RETURN V_RETURN_VAL;

EXCEPTION
	WHEN OTHERS THEN
		SP_ERROR_LOG();
		V_ERRCODE := SQLCODE;
		V_ERRMSG := SQLERRM;
		DBMS_OUTPUT.PUT_LINE('ERROR occurred while executing FN_GET_MEMBER_DSCR -------------------');
		DBMS_OUTPUT.PUT_LINE('Error code    = ' || V_ERRCODE);
		DBMS_OUTPUT.PUT_LINE('Error message = ' || V_ERRMSG);
		RETURN NULL;
END;

/





--------------------------------------------------------
--  DDL for Function FN_GET_LOOKUP_DSCR
--------------------------------------------------------

/**
 * Gets LOOKUP descriptions.
 *
 * @param I_LOOKUP_IDS - Selected item IDs, comma separated.
 *
 * @return NVARCHAR2 - Description of the selected items, comma separated.
 */
CREATE OR REPLACE FUNCTION FN_GET_LOOKUP_DSCR
(
	I_LOOKUP_IDS                IN  VARCHAR2
)
RETURN NVARCHAR2
IS
	V_RETURN_VAL                NVARCHAR2(4000);
	V_SQL                       VARCHAR2(4000);

	V_IDX                       NUMBER(10);
	V_LOOP_CNT                  NUMBER(10);
	TYPE LOOKUP_TYPE IS REF CURSOR;
	CUR_LOOKUP                  LOOKUP_TYPE;
	REC_LOOKUP                  TBL_LOOKUP%ROWTYPE;

	V_ERRCODE                   NUMBER(10);
	V_ERRMSG                    VARCHAR2(512);
BEGIN
	DBMS_OUTPUT.PUT_LINE('------- START: FN_GET_LOOKUP_DSCR -------');
	DBMS_OUTPUT.PUT_LINE('-- PARAMETERS --');
	DBMS_OUTPUT.PUT_LINE('    I_LOOKUP_IDS = ' || I_LOOKUP_IDS );

	-- input validation
	IF I_LOOKUP_IDS IS NULL OR LENGTH(TRIM(I_LOOKUP_IDS)) <= 0
	THEN
		RETURN NULL;
	END IF;

	V_RETURN_VAL := '';

	V_SQL := 'SELECT * FROM TBL_LOOKUP WHERE TBL_ID IN (' || I_LOOKUP_IDS || ') ';
	DBMS_OUTPUT.PUT_LINE('    V_SQL = ' || V_SQL );

	-- Loop through to look up description of each
	-- and concatenate descriptions delimitted by comma.
	DBMS_OUTPUT.PUT_LINE('Before open cursor for TBL_LOOKUP');
	OPEN CUR_LOOKUP FOR V_SQL;
	DBMS_OUTPUT.PUT_LINE('After open cursor for TBL_LOOKUP');

	V_LOOP_CNT := 0;
	LOOP
		FETCH CUR_LOOKUP INTO REC_LOOKUP;
		EXIT WHEN CUR_LOOKUP%NOTFOUND;
		V_LOOP_CNT := V_LOOP_CNT + 1;
		V_RETURN_VAL := V_RETURN_VAL || REC_LOOKUP.TBL_LABEL || ', ';
		DBMS_OUTPUT.PUT_LINE('Fetched record, loop count = ' || TO_CHAR(V_LOOP_CNT) || ' V_RETURN_VAL = ' || V_RETURN_VAL);
	END LOOP;
	CLOSE CUR_LOOKUP;

	-- clear trailing comma if exists
	IF V_RETURN_VAL IS NOT NULL AND LENGTH(V_RETURN_VAL) > 0
	THEN
		V_IDX := INSTR(V_RETURN_VAL, ', ', -1);
		IF V_IDX > 0 AND V_IDX = (LENGTH(V_RETURN_VAL) - 1)
		THEN
			V_RETURN_VAL := SUBSTR(V_RETURN_VAL, 0, (LENGTH(V_RETURN_VAL) - 2));
		END IF;
	END IF;

	DBMS_OUTPUT.PUT_LINE('    V_RETURN_VAL = ' || V_RETURN_VAL);
	DBMS_OUTPUT.PUT_LINE('------- END: FN_GET_LOOKUP_DSCR -------');
	RETURN V_RETURN_VAL;

EXCEPTION
	WHEN OTHERS THEN
		SP_ERROR_LOG();
		V_ERRCODE := SQLCODE;
		V_ERRMSG := SQLERRM;
		DBMS_OUTPUT.PUT_LINE('ERROR occurred while executing FN_GET_LOOKUP_DSCR -------------------');
		DBMS_OUTPUT.PUT_LINE('Error code    = ' || V_ERRCODE);
		DBMS_OUTPUT.PUT_LINE('Error message = ' || V_ERRMSG);
		RETURN NULL;
END;

/













--------------------------------------------------------
--  DDL for VW_STRATCON
--------------------------------------------------------
CREATE OR REPLACE VIEW VW_STRATCON
AS
SELECT
	R.REQ_ID
	, R.REQ_JOB_REQ_NUMBER
	, R.REQ_JOB_REQ_CREATE_DT
	, R.REQ_STATUS_ID
	, R.REQ_CANCEL_DT
	, R.REQ_CANCEL_REASON

	, SG.SG_PROCID
	, SG.SG_AC_ID
	, LU_AC.AC_ADMIN_CD AS SG_AC_CD
	, LU_AC.AC_ADMIN_CD_DESCR AS SG_AC_DSCR
	, SG.SG_RT_ID
	, LU_RT.TBL_LABEL AS SG_RT_DSCR
	, SG.SG_CT_ID
	, LU_CT.TBL_LABEL AS SG_CT_DSCR
	, SG.SG_SO_ID
	, LU_MEMSO.NAME AS SG_SO_NAME
	, SG.SG_SO_TITLE
	, SG.SG_SO_ORG
	, SG.SG_XO_ID
	, LU_MEMXO.NAME AS SG_XO_NAME
	, SG.SG_XO_TITLE
	, SG.SG_XO_ORG
	, SG.SG_HRL_ID
	, LU_MEMHL.NAME AS SG_HL_NAME
	, SG.SG_HRL_TITLE
	, SG.SG_HRL_ORG
	, SG.SG_SS_ID
	, LU_MEMSS.NAME AS SG_SS_NAME
	, SG.SG_CS_ID
	, LU_MEMCS.NAME AS SG_CS_NAME
	, CASE WHEN SG.SG_SO_AGREE = '1' THEN 'Yes' ELSE 'No' END AS SG_SO_AGREE
	, SG.SG_OTHER_CERT
	, FN_GET_MEMBER_DSCR(SG.SG_OTHER_CERT) AS SG_OTHER_CERT_DSCR

	, POS.POS_TITLE
	, POS.POS_PAY_PLAN_ID
	, LU_PYPL.TBL_NAME AS POS_PAY_PLAN_DSCR
	, POS.POS_SERIES
	, POS.POS_DESC_NUMBER_1
	, POS.POS_CLASSIFICATION_DT_1
	, POS.POS_GRADE_1
	, POS.POS_DESC_NUMBER_2
	, POS.POS_CLASSIFICATION_DT_2
	, POS.POS_GRADE_2
	, POS.POS_DESC_NUMBER_3
	, POS.POS_CLASSIFICATION_DT_3
	, POS.POS_GRADE_3
	, POS.POS_DESC_NUMBER_4
	, POS.POS_CLASSIFICATION_DT_4
	, POS.POS_GRADE_4
	, POS.POS_DESC_NUMBER_5
	, POS.POS_CLASSIFICATION_DT_5
	, POS.POS_GRADE_5
	, POS.POS_MED_OFFICERS_ID
	, LU_MO.TBL_LABEL AS POS_MED_OFFICERS_DSCR
	, POS.POS_PERFORMANCE_LEVEL
	, POS.POS_SUPERVISORY
	, LU_SUP.TBL_LABEL AS POS_SUPERVISORY_DSCR
	, POS.POS_SKILL
	, POS.POS_LOCATION
	, LU_LOC.LOC_CITY || ', ' || LU_LOC.LOC_STATE AS POS_LOCATION_DSCR
	, POS.POS_VACANCIES
	, POS.POS_REPORT_SUPERVISOR
	, LU_MEMRS.NAME AS POS_REPORT_SUPERVISOR_NAME
	, POS.POS_CAN
	, CASE WHEN POS.POS_VICE = '1' THEN 'Yes' ELSE 'No' END AS POS_VICE
	, POS.POS_VICE_NAME
	, POS.POS_DAYS_ADVERTISED
	, POS.POS_AT_ID
	, LU_AT.TBL_LABEL AS POS_AT_DSCR
	, POS.POS_NTE
	, POS.POS_WORK_SCHED_ID
	, LU_WSCHD.TBL_LABEL AS POS_WORK_SCHED_DSCR
	, POS.POS_HOURS_PER_WEEK
	, POS.POS_SEC_ID
	, LU_SEC.TBL_LABEL AS POS_SEC_DSCR
	, CASE WHEN POS.POS_CE_FINANCIAL_DISC = '1' THEN 'Yes' ELSE 'No' END AS POS_CE_FINANCIAL_DISC
	, POS.POS_CE_FINANCIAL_TYPE_ID
	, LU_FNTP.TBL_LABEL AS POS_CE_FINANCIAL_TYPE_DSCR
	, CASE WHEN POS.POS_CE_PE_PHYSICAL = '1' THEN 'Yes' ELSE 'No' END AS POS_CE_PE_PHYSICAL
	, CASE WHEN POS.POS_CE_DRUG_TEST = '1' THEN 'Yes' ELSE 'No' END AS POS_CE_DRUG_TEST
	, CASE WHEN POS.POS_CE_IMMUN = '1' THEN 'Yes' ELSE 'No' END AS POS_CE_IMMUN
	, CASE WHEN POS.POS_CE_TRAVEL = '1' THEN 'Yes' ELSE 'No' END AS POS_CE_TRAVEL
	, POS.POS_CE_TRAVEL_PER
	, CASE WHEN POS.POS_CE_LIC = '1' THEN 'Yes' ELSE 'No' END AS POS_CE_LIC
	, POS.POS_CE_LIC_INFO
	, POS.POS_REMARKS
	, POS.POS_PROC_REQ_TYPE
	, POS.POS_RECRUIT_OFFICE_ID
	--, POS.POS_REQ_CREATE_NOTIFY_DT
	, POS.POS_SO_ID
	, POS.POS_ASSOC_DESCR_NUMBERS
	, POS.POS_PROMOTE_POTENTIAL
	, POS.POS_VICE_EMPL_ID
	, POS.POS_SR_ID
	, POS.POS_GR_ID
	, POS.POS_AC_ID
	, CASE WHEN POS.POS_GA_1  = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_1
	, CASE WHEN POS.POS_GA_2  = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_2
	, CASE WHEN POS.POS_GA_3  = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_3
	, CASE WHEN POS.POS_GA_4  = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_4
	, CASE WHEN POS.POS_GA_5  = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_5
	, CASE WHEN POS.POS_GA_6  = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_6
	, CASE WHEN POS.POS_GA_7  = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_7
	, CASE WHEN POS.POS_GA_8  = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_8
	, CASE WHEN POS.POS_GA_9  = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_9
	, CASE WHEN POS.POS_GA_10 = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_10
	, CASE WHEN POS.POS_GA_11 = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_11
	, CASE WHEN POS.POS_GA_12 = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_12
	, CASE WHEN POS.POS_GA_13 = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_13
	, CASE WHEN POS.POS_GA_14 = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_14
	, CASE WHEN POS.POS_GA_15 = '1' THEN 'Yes' ELSE 'No' END AS POS_GA_15

	, CASE WHEN AOC.AOC_30PCT_DISABLED_VETS = '1' THEN 'Yes' ELSE 'No' END AS AOC_30PCT_DISABLED_VETS
	, CASE WHEN AOC.AOC_EXPERT_CONS = '1'         THEN 'Yes' ELSE 'No' END AS AOC_EXPERT_CONS
	, CASE WHEN AOC.AOC_IPA = '1'                 THEN 'Yes' ELSE 'No' END AS AOC_IPA
	, CASE WHEN AOC.AOC_OPER_WARFIGHTER = '1'     THEN 'Yes' ELSE 'No' END AS AOC_OPER_WARFIGHTER
	, CASE WHEN AOC.AOC_DISABILITIES = '1'        THEN 'Yes' ELSE 'No' END AS AOC_DISABILITIES
	, CASE WHEN AOC.AOC_STUDENT_VOL = '1'         THEN 'Yes' ELSE 'No' END AS AOC_STUDENT_VOL
	, CASE WHEN AOC.AOC_VETS_RECRUIT_APPT = '1'   THEN 'Yes' ELSE 'No' END AS AOC_VETS_RECRUIT_APPT
	, CASE WHEN AOC.AOC_VOC_REHAB_EMPL = '1'      THEN 'Yes' ELSE 'No' END AS AOC_VOC_REHAB_EMPL
	, CASE WHEN AOC.AOC_WORKFORCE_RECRUIT = '1'   THEN 'Yes' ELSE 'No' END AS AOC_WORKFORCE_RECRUIT
	, AOC.AOC_NON_COMP_APPL
	, CASE WHEN AOC.AOC_MIL_SPOUSES = '1'         THEN 'Yes' ELSE 'No' END AS AOC_MIL_SPOUSES
	, CASE WHEN AOC.AOC_DIRECT_HIRE = '1'         THEN 'Yes' ELSE 'No' END AS AOC_DIRECT_HIRE
	, CASE WHEN AOC.AOC_RE_EMPLOYMENT = '1'       THEN 'Yes' ELSE 'No' END AS AOC_RE_EMPLOYMENT
	, CASE WHEN AOC.AOC_PATHWAYS = '1'            THEN 'Yes' ELSE 'No' END AS AOC_PATHWAYS
	, CASE WHEN AOC.AOC_PEACE_CORPS_VOL = '1'     THEN 'Yes' ELSE 'No' END AS AOC_PEACE_CORPS_VOL
	, CASE WHEN AOC.AOC_REINSTATEMENT = '1'       THEN 'Yes' ELSE 'No' END AS AOC_REINSTATEMENT
	, CASE WHEN AOC.AOC_SHARED_CERT = '1'         THEN 'Yes' ELSE 'No' END AS AOC_SHARED_CERT
	, CASE WHEN AOC.AOC_DELEGATE_EXAM = '1'       THEN 'Yes' ELSE 'No' END AS AOC_DELEGATE_EXAM
	, CASE WHEN AOC.AOC_DH_US_CITIZENS = '1'      THEN 'Yes' ELSE 'No' END AS AOC_DH_US_CITIZENS
	, CASE WHEN AOC.AOC_MP_GOV_WIDE = '1'         THEN 'Yes' ELSE 'No' END AS AOC_MP_GOV_WIDE
	, CASE WHEN AOC.AOC_MP_HHS_ONLY = '1'         THEN 'Yes' ELSE 'No' END AS AOC_MP_HHS_ONLY
	, CASE WHEN AOC.AOC_MP_CMS_ONLY = '1'         THEN 'Yes' ELSE 'No' END AS AOC_MP_CMS_ONLY
	, CASE WHEN AOC.AOC_MP_COMP_CONS_ONLY = '1'   THEN 'Yes' ELSE 'No' END AS AOC_MP_COMP_CONS_ONLY
	, CASE WHEN AOC.AOC_MP_I_CTAP_VEGA = '1'      THEN 'Yes' ELSE 'No' END AS AOC_MP_I_CTAP_VEGA
	, AOC.AOC_NON_BARGAIN_DOC_RATIONALE

	, CASE WHEN SME.SME_FOR_JOB_ANALYSIS = '1'  THEN 'Yes' ELSE 'No' END AS SME_FOR_JOB_ANALYSIS
	, SME.SME_NAME_JA
	, SME.SME_EMAIL_JA
	, CASE WHEN SME.SME_FOR_QUALIFICATION = '1' THEN 'Yes' ELSE 'No' END AS SME_FOR_QUALIFICATION
	, SME.SME_NAME_QUAL_1
	, SME.SME_EMAIL_QUAL_1
	, SME.SME_NAME_QUAL_2
	, SME.SME_EMAIL_QUAL_2

	, CASE WHEN JA.JA_SEL_FACTOR_REQ = '1'   THEN 'Yes' ELSE 'No' END AS JA_SEL_FACTOR_REQ
	, JA.JA_SEL_FACTOR_JUST
	, CASE WHEN JA.JA_QUAL_RANK_REQ = '1'    THEN 'Yes' ELSE 'No' END AS JA_QUAL_RANK_REQ
	, JA.JA_QUAL_RANK_JUST
	, CASE WHEN JA.JA_RESPONSES_REQ = '1'    THEN 'Yes' ELSE 'No' END AS JA_RESPONSES_REQ
	, CASE WHEN JA.JA_TYPE_YES_NO = '1'      THEN 'Yes' ELSE 'No' END AS JA_TYPE_YES_NO
	, CASE WHEN JA.JA_TYPE_REQ_DEFAULT = '1' THEN 'Yes' ELSE 'No' END AS JA_TYPE_REQ_DEFAULT
	, CASE WHEN JA.JA_TYPE_KNOWL_SCALE = '1' THEN 'Yes' ELSE 'No' END AS JA_TYPE_KNOWL_SCALE

	, RI.RI_OA_APRV_ITEM
	, CASE
		WHEN RI.RI_OA_APRV_ITEM = 'C' THEN 'Recruitment'
		WHEN RI.RI_OA_APRV_ITEM = 'L' THEN 'Relocation'
		ELSE 'N/A' END AS RI_OA_APRV_ITEM_DSCR
	, RI.RI_MOVING_EXP_AUTH

	, CASE WHEN TR.TR_PAID_AD = '1' THEN 'Yes' ELSE 'No' END AS TR_PAID_AD
	, TR.TR_PAID_AD_SPEC
	, FN_GET_LOOKUP_DSCR(TR.TR_PAID_AD_SPEC) AS TR_PAID_AD_SPEC_DSCR
	, TR.TR_PAID_AD_SPEC_OTHR
	, CASE WHEN TR.TR_SCHL_PSTG = '1' THEN 'Yes' ELSE 'No' END AS TR_SCHL_PSTG
	, TR.TR_SCHL_PSTG_SPEC
	, FN_GET_LOOKUP_DSCR(TR.TR_SCHL_PSTG_SPEC) AS TR_SCHL_PSTG_SPEC_DSCR
	, TR.TR_SCHL_PSTG_SPEC_OTHR
	, CASE WHEN TR.TR_SOCIAL_MEDIA = '1' THEN 'Yes' ELSE 'No' END AS TR_SOCIAL_MEDIA
	, TR.TR_SOCIAL_MEDIA_SPEC
	, FN_GET_LOOKUP_DSCR(TR.TR_SOCIAL_MEDIA_SPEC) AS TR_SOCIAL_MEDIA_SPEC_DSCR
	, TR.TR_SOCIAL_MEDIA_SPEC_OTHR
	, CASE WHEN TR.TR_OTHER = '1' THEN 'Yes' ELSE 'No' END AS TR_OTHER
	, TR.TR_OTHER_SPEC

	, SCA.SCA_SO_SIG
	, SCA.SCA_SO_SIG_DT
	, SCA.SCA_CLASS_SPEC_SIG
	, SCA.SCA_CLASS_SPEC_SIG_DT
	, SCA.SCA_STAFF_SIG
	, SCA.SCA_STAFF_SIG_DT

FROM
	REQUEST R
	LEFT OUTER JOIN STRATCON_GEN SG ON SG.SG_REQ_ID = R.REQ_ID
	LEFT OUTER JOIN POSITION POS ON POS.POS_REQ_ID = R.REQ_ID
	--LEFT OUTER JOIN STRATCON_SCHED_HIST SSH ON SSH.SSH_REQ_ID = R.REQ_ID
	LEFT OUTER JOIN AREAS_OF_CONS AOC ON AOC.AOC_REQ_ID = R.REQ_ID
	LEFT OUTER JOIN SME_INFO SME ON SME.SME_REQ_ID = R.REQ_ID
	LEFT OUTER JOIN JOB_ANALYSIS JA ON JA.JA_REQ_ID = R.REQ_ID
	LEFT OUTER JOIN RECRUIT_INCENTIVES RI ON RI.RI_REQ_ID = R.REQ_ID
	LEFT OUTER JOIN TARGET_RECRUIT TR ON TR.TR_REQ_ID = R.REQ_ID
	LEFT OUTER JOIN APPROVALS SCA ON SCA.SCA_REQ_ID = R.REQ_ID

	LEFT OUTER JOIN ADMIN_CODES LU_AC ON LU_AC.AC_ID = SG.SG_AC_ID
	LEFT OUTER JOIN TBL_LOOKUP LU_RT ON LU_RT.TBL_ID = SG.SG_RT_ID
	LEFT OUTER JOIN TBL_LOOKUP LU_CT ON LU_CT.TBL_ID = SG.SG_CT_ID
	LEFT OUTER JOIN BIZFLOW.MEMBER LU_MEMSO ON LU_MEMSO.MEMBERID = SG.SG_SO_ID
	LEFT OUTER JOIN BIZFLOW.MEMBER LU_MEMXO ON LU_MEMXO.MEMBERID = SG.SG_XO_ID
	LEFT OUTER JOIN BIZFLOW.MEMBER LU_MEMHL ON LU_MEMHL.MEMBERID = SG.SG_HRL_ID
	LEFT OUTER JOIN BIZFLOW.MEMBER LU_MEMSS ON LU_MEMSS.MEMBERID = SG.SG_SS_ID
	LEFT OUTER JOIN BIZFLOW.MEMBER LU_MEMCS ON LU_MEMCS.MEMBERID = SG.SG_CS_ID

	LEFT OUTER JOIN TBL_LOOKUP LU_PYPL ON LU_PYPL.TBL_ID = POS.POS_PAY_PLAN_ID
	LEFT OUTER JOIN TBL_LOOKUP LU_MO ON LU_MO.TBL_ID = POS.POS_MED_OFFICERS_ID
--TODO: Remove TO_NUMBER call once the data type of POS_SUPERVISORY is fixed to NUMBER(20)
	LEFT OUTER JOIN TBL_LOOKUP LU_SUP ON LU_SUP.TBL_ID = TO_NUMBER(POS.POS_SUPERVISORY)
	LEFT OUTER JOIN LOCATION LU_LOC ON LU_LOC.LOC_ID = POS.POS_LOCATION
	LEFT OUTER JOIN BIZFLOW.MEMBER LU_MEMRS ON LU_MEMRS.MEMBERID = POS.POS_REPORT_SUPERVISOR
	LEFT OUTER JOIN TBL_LOOKUP LU_AT ON LU_AT.TBL_ID = POS.POS_AT_ID
	LEFT OUTER JOIN TBL_LOOKUP LU_WSCHD ON LU_WSCHD.TBL_ID = POS.POS_WORK_SCHED_ID
	LEFT OUTER JOIN TBL_LOOKUP LU_SEC ON LU_SEC.TBL_ID = POS.POS_SEC_ID
	LEFT OUTER JOIN TBL_LOOKUP LU_FNTP ON LU_FNTP.TBL_ID = POS.POS_CE_FINANCIAL_TYPE_ID
;

/




--------------------------------------------------------
--  DDL for VW_CLASSIFICATION
--------------------------------------------------------
CREATE OR REPLACE VIEW VW_CLASSIFICATION
AS
SELECT
	R.REQ_ID
	, R.REQ_JOB_REQ_NUMBER
	, R.REQ_JOB_REQ_CREATE_DT
	, R.REQ_STATUS_ID
	, R.REQ_CANCEL_DT
	, R.REQ_CANCEL_REASON

	, CS.CS_TITLE
	, CS.CS_PAY_PLAN_ID
	, LU_PYPL.TBL_NAME AS CS_PAY_PLAN_DSCR
	, CS.CS_SR_ID
	, LU_SR.TBL_LABEL AS CS_SR_DSCR
	, CS.CS_PD_NUMBER_JOBCD_1
	, CS.CS_CLASSIFICATION_DT_1
	, CS.CS_GR_ID_1
	, CS.CS_FLSA_DETERM_ID_1
	, LU_FLSA_1.TBL_LABEL AS CS_FLSA_DETERM_DSCR_1
	, CS.CS_PD_NUMBER_JOBCD_2
	, CS.CS_CLASSIFICATION_DT_2
	, CS.CS_GR_ID_2
	, CS.CS_FLSA_DETERM_ID_2
	, LU_FLSA_2.TBL_LABEL AS CS_FLSA_DETERM_DSCR_2
	, CS.CS_PD_NUMBER_JOBCD_3
	, CS.CS_CLASSIFICATION_DT_3
	, CS.CS_GR_ID_3
	, CS.CS_FLSA_DETERM_ID_3
	, LU_FLSA_3.TBL_LABEL AS CS_FLSA_DETERM_DSCR_3
	, CS.CS_PD_NUMBER_JOBCD_4
	, CS.CS_CLASSIFICATION_DT_4
	, CS.CS_GR_ID_4
	, CS.CS_FLSA_DETERM_ID_4
	, LU_FLSA_4.TBL_LABEL AS CS_FLSA_DETERM_DSCR_4
	, CS.CS_PD_NUMBER_JOBCD_5
	, CS.CS_CLASSIFICATION_DT_5
	, CS.CS_GR_ID_5
	, CS.CS_FLSA_DETERM_ID_5
	, LU_FLSA_5.TBL_LABEL AS CS_FLSA_DETERM_DSCR_5
	, CS.CS_PERFORMANCE_LEVEL
	, CS.CS_SUPERVISORY
	, LU_SUP.TBL_LABEL AS CS_SUPERVISORY_DSCR
	, CS.CS_AC_ID
	, LU_AC.AC_ADMIN_CD AS CS_AC_CD
	, LU_AC.AC_ADMIN_CD_DESCR AS CS_AC_DSCR
	, CS.CS_FIN_STMT_REQ_ID
	, LU_FNTP.TBL_LABEL AS CS_FIN_STMT_REQ_DSCR
	, CS.CS_SEC_ID
	, LU_SEC.TBL_LABEL AS CS_SEC_DSCR

	, PD.PD_ID
	, PD.PD_PROCID
	, PD.PD_ORG_POS_TITLE
	, PD.PD_EMPLOYING_OFFICE
	, LU_EO.TBL_LABEL AS PD_EMPLOYING_OFFICE_DSCR
	, CASE WHEN PD.PD_SUBJECT_IA = '1' THEN 'Yes' ELSE 'No' END AS PD_SUBJECT_IA
	, PD.PD_ORGANIZATION
	, PD.PD_SUB_ORG_1
	, LU_SO_1.AC_ADMIN_CD_DESCR AS PD_SUB_ORG_DSCR_1
	, PD.PD_SUB_ORG_2
	, LU_SO_2.AC_ADMIN_CD_DESCR AS PD_SUB_ORG_DSCR_2
	, PD.PD_SUB_ORG_3
	, LU_SO_3.AC_ADMIN_CD_DESCR AS PD_SUB_ORG_DSCR_3
	, PD.PD_SUB_ORG_4
	, LU_SO_4.AC_ADMIN_CD_DESCR AS PD_SUB_ORG_DSCR_4
	, PD.PD_SUB_ORG_5
	, LU_SO_5.AC_ADMIN_CD_DESCR AS PD_SUB_ORG_DSCR_5
	, PD.PD_SCOPE
	, CASE WHEN PD.PD_PCA = '1'        THEN 'Yes' ELSE 'No' END AS PD_PCA
	, CASE WHEN PD.PD_PDP = '1'        THEN 'Yes' ELSE 'No' END AS PD_PDP
	, CASE WHEN PD.PD_FTT = '1'        THEN 'Yes' ELSE 'No' END AS PD_FTT
	, CASE WHEN PD.PD_OUTSTATION = '1' THEN 'Yes' ELSE 'No' END AS PD_OUTSTATION
	, CASE WHEN PD.PD_INCUMBENCY = '1' THEN 'Yes' ELSE 'No' END AS PD_INCUMBENCY
	, PD.PD_REMARKS
	, PD.PD_CLS_STANDARDS
	, FN_GET_LOOKUP_DSCR(PD.PD_CLS_STANDARDS) AS PD_CLS_STANDARDS_DSCR
	, PD.PD_ACQ_CODE
	, LU_ACQ.TBL_NAME AS PD_ACQ_CODE_DSCR
	, PD.PD_CYB_SEC_CD
	, LU_CSEC.TBL_LABEL AS PD_CYB_SEC_CD_DSCR
	, PD.PD_COMPET_LVL_CD
	, PD.PD_BUS_CD
	, LU_BUS.TBL_LABEL AS PD_BUS_CD_DSCR

	, CASE WHEN PD.PD_SUPV_CERT = '1' THEN 'Yes' ELSE 'No' END AS PD_SUPV_CERT
	, PD.PD_SUPV_NAME
	, PD.PD_SUPV_TITLE
	, PD.PD_SUPV_SIG
	, PD.PD_SUPV_SIG_DT
	, CASE WHEN PD.PD_CLS_SPEC_CERT = '1' THEN 'Yes' ELSE 'No' END AS PD_CLS_SPEC_CERT
	, PD.PD_CLS_SPEC_NAME
	, PD.PD_CLS_SPEC_TITLE
	, PD.PD_CLS_SPEC_SIG
	, PD.PD_CLS_SPEC_DT

	, CASE WHEN FLSA.FLSA_EX_EXEC = '1'            THEN 'Yes' ELSE 'No' END AS FLSA_EX_EXEC
	, CASE WHEN FLSA.FLSA_EX_ADMIN = '1'           THEN 'Yes' ELSE 'No' END AS FLSA_EX_ADMIN
	, CASE WHEN FLSA.FLSA_EX_PROF_LEARNED = '1'    THEN 'Yes' ELSE 'No' END AS FLSA_EX_PROF_LEARNED
	, CASE WHEN FLSA.FLSA_EX_PROF_CREATIVE = '1'   THEN 'Yes' ELSE 'No' END AS FLSA_EX_PROF_CREATIVE
	, CASE WHEN FLSA.FLSA_EX_PROF_COMPUTER = '1'   THEN 'Yes' ELSE 'No' END AS FLSA_EX_PROF_COMPUTER
	, CASE WHEN FLSA.FLSA_EX_LAW_ENFORC = '1'      THEN 'Yes' ELSE 'No' END AS FLSA_EX_LAW_ENFORC
	, CASE WHEN FLSA.FLSA_EX_FOREIGN = '1'         THEN 'Yes' ELSE 'No' END AS FLSA_EX_FOREIGN
	, FLSA.FLSA_EX_REMARKS
	, CASE WHEN FLSA.FLSA_NONEX_SALARY = '1'       THEN 'Yes' ELSE 'No' END AS FLSA_NONEX_SALARY
	, CASE WHEN FLSA.FLSA_NONEX_EQUIP_OPER = '1'   THEN 'Yes' ELSE 'No' END AS FLSA_NONEX_EQUIP_OPER
	, CASE WHEN FLSA.FLSA_NONEX_TECHN = '1'        THEN 'Yes' ELSE 'No' END AS FLSA_NONEX_TECHN
	, CASE WHEN FLSA.FLSA_NONEX_FED_WAGE_SYS = '1' THEN 'Yes' ELSE 'No' END AS FLSA_NONEX_FED_WAGE_SYS
	, FLSA.FLSA_NONEX_REMARKS

FROM
	REQUEST R
	LEFT OUTER JOIN CLASSIF_STRATCON CS ON CS.CS_REQ_ID = R.REQ_ID
	LEFT OUTER JOIN PD_COVERSHEET PD ON PD.PD_REQ_ID = R.REQ_ID
	LEFT OUTER JOIN FLSA FLSA ON FLSA.FLSA_PD_ID = PD.PD_ID

	LEFT OUTER JOIN TBL_LOOKUP LU_PYPL ON LU_PYPL.TBL_ID = CS.CS_PAY_PLAN_ID
	LEFT OUTER JOIN TBL_LOOKUP LU_SR ON LU_SR.TBL_ID = CS.CS_SR_ID
	LEFT OUTER JOIN TBL_LOOKUP LU_FLSA_1 ON LU_FLSA_1.TBL_ID = CS.CS_FLSA_DETERM_ID_1
	LEFT OUTER JOIN TBL_LOOKUP LU_FLSA_2 ON LU_FLSA_2.TBL_ID = CS.CS_FLSA_DETERM_ID_2
	LEFT OUTER JOIN TBL_LOOKUP LU_FLSA_3 ON LU_FLSA_3.TBL_ID = CS.CS_FLSA_DETERM_ID_3
	LEFT OUTER JOIN TBL_LOOKUP LU_FLSA_4 ON LU_FLSA_4.TBL_ID = CS.CS_FLSA_DETERM_ID_4
	LEFT OUTER JOIN TBL_LOOKUP LU_FLSA_5 ON LU_FLSA_5.TBL_ID = CS.CS_FLSA_DETERM_ID_5
	LEFT OUTER JOIN TBL_LOOKUP LU_SUP ON LU_SUP.TBL_ID = CS.CS_SUPERVISORY
	LEFT OUTER JOIN ADMIN_CODES LU_AC ON LU_AC.AC_ID = CS.CS_AC_ID
	LEFT OUTER JOIN TBL_LOOKUP LU_FNTP ON LU_FNTP.TBL_ID = CS.CS_FIN_STMT_REQ_ID
	LEFT OUTER JOIN TBL_LOOKUP LU_SEC ON LU_SEC.TBL_ID = CS.CS_SEC_ID

	LEFT OUTER JOIN TBL_LOOKUP LU_EO ON LU_EO.TBL_ID = PD.PD_EMPLOYING_OFFICE
	LEFT OUTER JOIN ADMIN_CODES LU_SO_1 ON LU_SO_1.AC_ADMIN_CD = PD.PD_SUB_ORG_1
	LEFT OUTER JOIN ADMIN_CODES LU_SO_2 ON LU_SO_2.AC_ADMIN_CD = PD.PD_SUB_ORG_2
	LEFT OUTER JOIN ADMIN_CODES LU_SO_3 ON LU_SO_3.AC_ADMIN_CD = PD.PD_SUB_ORG_3
	LEFT OUTER JOIN ADMIN_CODES LU_SO_4 ON LU_SO_4.AC_ADMIN_CD = PD.PD_SUB_ORG_4
	LEFT OUTER JOIN ADMIN_CODES LU_SO_5 ON LU_SO_5.AC_ADMIN_CD = PD.PD_SUB_ORG_5
	LEFT OUTER JOIN TBL_LOOKUP LU_ACQ ON LU_ACQ.TBL_ID = PD.PD_ACQ_CODE
	LEFT OUTER JOIN TBL_LOOKUP LU_CSEC ON LU_CSEC.TBL_ID = PD.PD_CYB_SEC_CD
	LEFT OUTER JOIN TBL_LOOKUP LU_BUS ON LU_BUS.TBL_ID = PD.PD_BUS_CD

;

/
