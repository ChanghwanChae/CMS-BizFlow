create or replace PACKAGE BODY            CMS_TTH_WEEKLY_DATA_PKS AS
--------------------------------------------------------------------------------------------------------
--THIS PACKAGE WILL HANDLE PULLING AND POPULATING CMS_TIME_TO_HIRE_WEEKLY_PILOT TABLES in HHS_HR SCHEMA 
--------------------------------------------------------------------------------------------------------

--======================================================
-- - - -- - - - - - - - - - - - - - - - - - - - - - - -
 
--CURSORS and TYPES
 
-- - - - - - - - - - - - - - - - - - - - - - - - - - - -
--======================================================
--------------------------------------------------------
--CURSOR: CUR_CMS_TTH_DATA
--DESCRIPTION: 
--------------------------------------------------------
CURSOR CUR_CMS_TTH_DATA 
    IS
    
  SELECT	ADMIN_CODE || ' - ' || ADMIN_CODE_DESC AS COMPONENT,
			REQ_JOB_REQ_NUMBER AS REQUEST_NUMBER,
			PROCESS_ID,
			NVL(ACTION_ACTIVE_PRIOR_STRAT_CON, 0) AS ACTION_ACTIVE_PRIOR_STRAT_CON,
			PROCESS_CREATION_DATE AS STRAT_CON_START,
			PROCESS_COMPLETION_DATE AS STRAT_CON_END,
      CASE
				WHEN REQ_JOB_REQ_NUMBER IS NOT NULL AND PROCESS_COMPLETION_DATE IS NOT NULL AND BIZFLOW.HHS_FN_GET_BUSDAYSDIFF(PROCESS_CREATION_DATE, PROCESS_COMPLETION_DATE) <= 6
				THEN 1
				ELSE 0
			END AS ACHIEVED_STRAT_CON,
			CASE
				WHEN REQ_JOB_REQ_NUMBER IS NOT NULL AND BIZFLOW.HHS_FN_GET_BUSDAYSDIFF(PROCESS_CREATION_DATE, PROCESS_COMPLETION_DATE) > 6
				THEN 1
				ELSE 0
			END AS MISSED_STRAT_CON,
			PROCESS_COMPLETION_DATE AS CLASS_START,
			BIZFLOW.HHS_FN_SUBTRACT_BUSDAY(ANNOUNCEMENT_OPEN_DATE, 1) AS CLASS_END,
      CASE
				WHEN REQ_JOB_REQ_NUMBER IS NOT NULL AND ANNOUNCEMENT_OPEN_DATE IS NOT NULL AND BIZFLOW.HHS_FN_GET_BUSDAYSDIFF(PROCESS_COMPLETION_DATE ,BIZFLOW.HHS_FN_SUBTRACT_BUSDAY(ANNOUNCEMENT_OPEN_DATE, 1)) <= 15
				THEN 1
				ELSE 0
			END AS ACHIEVED_CLASS,
			CASE
				WHEN REQ_JOB_REQ_NUMBER IS NOT NULL AND BIZFLOW.HHS_FN_GET_BUSDAYSDIFF(PROCESS_COMPLETION_DATE ,BIZFLOW.HHS_FN_SUBTRACT_BUSDAY(ANNOUNCEMENT_OPEN_DATE, 1)) > 15
				THEN 1
				ELSE 0
			END AS MISSED_CLASS,
			ANNOUNCEMENT_CLOSE_DATE AS QUALS_START,
			MIN(REVIEW_SENT_DATE) AS QUALS_END,
      CASE
				WHEN REQ_JOB_REQ_NUMBER IS NOT NULL AND REVIEW_SENT_DATE IS NOT NULL AND BIZFLOW.HHS_FN_GET_BUSDAYSDIFF(ANNOUNCEMENT_CLOSE_DATE,MIN(REVIEW_SENT_DATE)) <= 17
				THEN 1
				ELSE 0
			END AS ACHIEVED_QUALS,
			CASE
				WHEN REQ_JOB_REQ_NUMBER IS NOT NULL AND BIZFLOW.HHS_FN_GET_BUSDAYSDIFF(ANNOUNCEMENT_CLOSE_DATE,MIN(REVIEW_SENT_DATE)) > 17
				THEN 1
				ELSE 0
			END AS MISSED_QUALS,
			MIN(REVIEW_SENT_DATE) AS SELECTION_START,
			MIN(REVIEW_RETURN_DATE) AS SELECTION_END,
      CASE
				WHEN REQ_JOB_REQ_NUMBER IS NOT NULL AND REVIEW_RETURN_DATE IS NOT NULL AND BIZFLOW.HHS_FN_GET_BUSDAYSDIFF(MIN(REVIEW_SENT_DATE), MIN(REVIEW_RETURN_DATE)) <= 15
				THEN 1
				ELSE 0
			END AS ACHIEVED_SELECTION,
			CASE
				WHEN REQ_JOB_REQ_NUMBER IS NOT NULL AND BIZFLOW.HHS_FN_GET_BUSDAYSDIFF(MIN(REVIEW_SENT_DATE), MIN(REVIEW_RETURN_DATE)) > 15
				THEN 1
				ELSE 0
			END AS MISSED_SELECTION,
      		MIN(REVIEW_RETURN_DATE) AS TENT_OFFER_START,
			SEND_TENT_OFFR_CMPL_DATE AS TENT_OFFER_END,
      CASE
				WHEN REQ_JOB_REQ_NUMBER IS NOT NULL AND SEND_TENT_OFFR_CMPL_DATE IS NOT NULL AND BIZFLOW.HHS_FN_GET_BUSDAYSDIFF(MIN(REVIEW_RETURN_DATE), SEND_TENT_OFFR_CMPL_DATE) <= 4
				THEN 1
				ELSE 0
			END AS ACHIEVED_TENT_OFFER,
			CASE
				WHEN REQ_JOB_REQ_NUMBER IS NOT NULL AND BIZFLOW.HHS_FN_GET_BUSDAYSDIFF(MIN(REVIEW_RETURN_DATE), SEND_TENT_OFFR_CMPL_DATE) > 4
				THEN 1
				ELSE 0
			END AS MISSED_TENT_OFFER,
			
      		SEND_TENT_OFFR_CMPL_DATE AS OFCL_OFFER_START,
			SEND_OFCL_OFFR_CMPL_DATE AS OFCL_OFFER_END,
      CASE
				WHEN REQ_JOB_REQ_NUMBER IS NOT NULL AND SEND_OFCL_OFFR_CMPL_DATE IS NOT NULL AND BIZFLOW.HHS_FN_GET_BUSDAYSDIFF(SEND_TENT_OFFR_CMPL_DATE, SEND_OFCL_OFFR_CMPL_DATE) <= 23
				THEN 1
				ELSE 0
			END AS ACHIEVED_OFCL_OFFER,
			CASE
				WHEN REQ_JOB_REQ_NUMBER IS NOT NULL AND BIZFLOW.HHS_FN_GET_BUSDAYSDIFF(SEND_TENT_OFFR_CMPL_DATE, SEND_OFCL_OFFR_CMPL_DATE) > 23
				THEN 1
				ELSE 0
			END AS MISSED_OFCL_OFFER,			
			V_REQUEST_TYPE AS REQUEST_TYPE
	FROM HHS_HR.ADMINISTRATIVE_CODE AC
	LEFT JOIN 
			(SELECT REQ_JOB_REQ_NUMBER,
					SUB_ORG_2_CD,
					SUB_ORG_2_DSCR,
					PROCESS_ID,
					PROCESS_NAME,
          CASE WHEN REQUEST_STATUS = 'Request Created' THEN 1 ELSE 0 END AS ACTION_ACTIVE_PRIOR_STRAT_CON,
					PROCESS_CREATION_DATE,
					PROCESS_COMPLETION_DATE,
					REQUEST_STATUS,
					V_REQUEST_TYPE
			FROM HHS_CMS_HR.VW_STRATCON SCF
			JOIN BIZFLOW.HHS_VW_CONSULTATION_PROC SCP
				ON SCF.SG_PROCID = SCP.PROCESS_ID
			WHERE REQUEST_STATUS <> 'Request Cancelled'
			AND V_REQUEST_TYPE IN ('Recruitment','Appointment')
			) STRATCON
		ON AC.ADMIN_CODE = STRATCON.SUB_ORG_2_CD
		AND PROCESS_CREATION_DATE > '03-FEB-19' 
	LEFT JOIN HHS_HR.DSS_CMS_TIME_TO_HIRE TTH
		ON TTH.REQUEST_NUMBER = STRATCON.REQ_JOB_REQ_NUMBER
	WHERE ((LENGTH(ADMIN_CODE) <= 3 AND ADMIN_CODE LIKE 'FC%')
	OR (LENGTH(ADMIN_CODE) = 4 AND ADMIN_CODE LIKE 'FCM%'))
	AND TTH.EOD_DATE IS NULL
	GROUP BY
			AC.ADMIN_CODE || ' - ' || AC.ADMIN_CODE_DESC,
			REQ_JOB_REQ_NUMBER,
			PROCESS_ID,
			PROCESS_CREATION_DATE,
			PROCESS_COMPLETION_DATE,
			ANNOUNCEMENT_OPEN_DATE,
			ANNOUNCEMENT_CLOSE_DATE,
      		REVIEW_SENT_DATE,
      		REVIEW_RETURN_DATE,
      		SEND_TENT_OFFR_CMPL_DATE,
      		SEND_OFCL_OFFR_CMPL_DATE,
			V_REQUEST_TYPE; 
 
    TYPE TYP_CMS_TTH_DATA IS TABLE OF CUR_CMS_TTH_DATA%ROWTYPE
    INDEX BY PLS_INTEGER;
 
    CMS_TTH_DATA TYP_CMS_TTH_DATA;
 
--======================================================
-- - - -- - - - - - - - - - - - - - - - - - - - - - - -
 
--PROCEDURES
 
-- - - - - - - - - - - - - - - - - - - - - - - - - - - -
--======================================================
 
---------------------------------------------------------
--PROCEDURE: INSERT_CMS_TTH_WEEKLY_DATA
--DESCRIPTION : 
---------------------------------------------------------
PROCEDURE INSERT_CMS_TTH_WEEKLY_DATA
AS  
COUNT_REQUESTS                NUMBER(10);
COUNT_REQ_PRIOR_STRAT_CON     NUMBER(10);
SUM_ACHIEVED_STRAT_CON        NUMBER(10);
SUM_MISSED_STRAT_CON          NUMBER(10);
SUM_ACHIEVED_CLASS            NUMBER(10);
SUM_MISSED_CLASS              NUMBER(10);
SUM_ACHIEVED_QUALS            NUMBER(10);
SUM_MISSED_QUALS              NUMBER(10);
SUM_ACHIEVED_SELECTION        NUMBER(10);
SUM_MISSED_SELECTION          NUMBER(10);
SUM_ACHIEVED_TENT_OFFER       NUMBER(10);
SUM_MISSED_TENT_OFFER         NUMBER(10);
SUM_ACHIEVED_OFCL_OFFER       NUMBER(10);
SUM_MISSED_OFCL_OFFER         NUMBER(10);
BEGIN
 
    OPEN CUR_CMS_TTH_DATA;
    FETCH CUR_CMS_TTH_DATA BULK COLLECT INTO CMS_TTH_DATA;
    CLOSE CUR_CMS_TTH_DATA;
 
    IF CMS_TTH_DATA.COUNT > 0 THEN
    DBMS_OUTPUT.PUT_LINE('WEEKLY RECORD COUNT: ' || CMS_TTH_DATA.COUNT);
    
        
         FOR i IN CMS_TTH_DATA.FIRST.. CMS_TTH_DATA.LAST LOOP
         --Insert record into HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT table
            BEGIN
          INSERT INTO HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT
            (DATA_PULLED_ON, 
            WEEK_OF, 
            COMPONENT, 
            REQUEST_NUMBER, 
            PROCESS_ID, 
            ACTION_ACTIVE_PRIOR_STRAT_CON,
            STRAT_CON_START, 
            STRAT_CON_END, 
            ACHIEVED_STRAT_CON,
            MISSED_STRAT_CON, 
            CLASS_START, 
            CLASS_END,
            ACHIEVED_CLASS,
            MISSED_CLASS, 
            QUALS_START, 
            QUALS_END, 
            ACHIEVED_QUALS,
            MISSED_QUALS, 
            SELECTION_START, 
            SELECTION_END, 
            ACHIEVED_SELECTION,
            MISSED_SELECTION,
            TENT_OFFER_START,
            TENT_OFFER_END,
            ACHIEVED_TENT_OFFER,
            MISSED_TENT_OFFER,
            OFCL_OFFER_START,
            OFCL_OFFER_END,
            ACHIEVED_OFCL_OFFER,
            MISSED_OFCL_OFFER)
          VALUES 
            (SYSDATE,  
            NEXT_DAY(SYSDATE - 7,'Sunday'), 
            CMS_TTH_DATA(i).COMPONENT, 
            CMS_TTH_DATA(i).REQUEST_NUMBER, 
            CMS_TTH_DATA(i).PROCESS_ID, 
            CMS_TTH_DATA(i).ACTION_ACTIVE_PRIOR_STRAT_CON,
            CMS_TTH_DATA(i).STRAT_CON_START, 
            CMS_TTH_DATA(i).STRAT_CON_END, 
            CMS_TTH_DATA(i).ACHIEVED_STRAT_CON,
            CMS_TTH_DATA(i).MISSED_STRAT_CON, 
            CMS_TTH_DATA(i).CLASS_START, 
            CMS_TTH_DATA(i).CLASS_END,
            CMS_TTH_DATA(i).ACHIEVED_CLASS,
            CMS_TTH_DATA(i).MISSED_CLASS, 
            CMS_TTH_DATA(i).QUALS_START, 
            CMS_TTH_DATA(i).QUALS_END, 
            CMS_TTH_DATA(i).ACHIEVED_QUALS,
            CMS_TTH_DATA(i).MISSED_QUALS, 
            CMS_TTH_DATA(i).SELECTION_START, 
            CMS_TTH_DATA(i).SELECTION_END, 
            CMS_TTH_DATA(i).ACHIEVED_SELECTION,
            CMS_TTH_DATA(i).MISSED_SELECTION,
            CMS_TTH_DATA(i).TENT_OFFER_START,
            CMS_TTH_DATA(i).TENT_OFFER_END,
            CMS_TTH_DATA(i).ACHIEVED_TENT_OFFER,
            CMS_TTH_DATA(i).MISSED_TENT_OFFER,
            CMS_TTH_DATA(i).OFCL_OFFER_START,
            CMS_TTH_DATA(i).OFCL_OFFER_END,
            CMS_TTH_DATA(i).ACHIEVED_OFCL_OFFER,
            CMS_TTH_DATA(i).MISSED_OFCL_OFFER);   
     
          EXCEPTION
                WHEN OTHERS THEN
                        SP_ERROR_LOG();
            END;
        END LOOP;
        
        --To calculate totals for each missed process for CMS
        SELECT COUNT(REQUEST_NUMBER), SUM(ACTION_ACTIVE_PRIOR_STRAT_CON), SUM(ACHIEVED_STRAT_CON), SUM(MISSED_STRAT_CON), SUM(ACHIEVED_CLASS), 
        SUM(MISSED_CLASS), SUM(ACHIEVED_QUALS), SUM(MISSED_QUALS), SUM(ACHIEVED_SELECTION), SUM(MISSED_SELECTION), SUM(ACHIEVED_TENT_OFFER), 
        SUM(MISSED_TENT_OFFER), SUM(ACHIEVED_OFCL_OFFER), SUM(MISSED_OFCL_OFFER)
        INTO COUNT_REQUESTS, COUNT_REQ_PRIOR_STRAT_CON, SUM_ACHIEVED_STRAT_CON, SUM_MISSED_STRAT_CON, SUM_ACHIEVED_CLASS, SUM_MISSED_CLASS, 
        SUM_ACHIEVED_QUALS, SUM_MISSED_QUALS, SUM_ACHIEVED_SELECTION, SUM_MISSED_SELECTION, SUM_ACHIEVED_TENT_OFFER, SUM_MISSED_TENT_OFFER,
        SUM_ACHIEVED_OFCL_OFFER, SUM_MISSED_OFCL_OFFER
        FROM CMS_TIME_TO_HIRE_WEEKLY_PILOT
        WHERE TRUNC(DATA_PULLED_ON)=TRUNC(SYSDATE);
        
        --Insert a new row with totals for CMS
        INSERT INTO HHS_CMS_HR.CMS_TIME_TO_HIRE_WEEKLY_PILOT
            (DATA_PULLED_ON, 
            WEEK_OF, 
            COMPONENT,
            REQUEST_NUMBER,
            ACTION_ACTIVE_PRIOR_STRAT_CON,
            ACHIEVED_STRAT_CON,
            MISSED_STRAT_CON, 
            ACHIEVED_CLASS,
            MISSED_CLASS,
            ACHIEVED_QUALS,
            MISSED_QUALS, 
            ACHIEVED_SELECTION,
            MISSED_SELECTION,
            ACHIEVED_TENT_OFFER,
            MISSED_TENT_OFFER,
            ACHIEVED_OFCL_OFFER,
            MISSED_OFCL_OFFER)
          VALUES 
            (SYSDATE,  
            NEXT_DAY(SYSDATE - 7,'Sunday'), 
            'CMS - wide', 
            COUNT_REQUESTS,
            COUNT_REQ_PRIOR_STRAT_CON,
            SUM_ACHIEVED_STRAT_CON,
            SUM_MISSED_STRAT_CON,
            SUM_ACHIEVED_CLASS,
            SUM_MISSED_CLASS,
            SUM_ACHIEVED_QUALS,
            SUM_MISSED_QUALS, 
            SUM_ACHIEVED_SELECTION,
            SUM_MISSED_SELECTION,
            SUM_ACHIEVED_TENT_OFFER,
            SUM_MISSED_TENT_OFFER,
            SUM_ACHIEVED_OFCL_OFFER,
            SUM_MISSED_OFCL_OFFER);      
            
        COMMIT;
      END IF;

END INSERT_CMS_TTH_WEEKLY_DATA;
 
 
---------------------------------------------------------
--PROCEDURE: NOTIFY_JOB_MONITORS
--DESCRIPTION : Send email notification about weekly data  
--import status
---------------------------------------------------------
PROCEDURE NOTIFY_JOB_MONITORS
AS  
V_JOB_NAME VARCHAR2(100) := 'IMPORT_TTH_WEEKLY_PILOT_DATA';
V_STATUS VARCHAR2(50);
V_ORACLE_ERROR_CODE NUMBER;
V_ERRORS VARCHAR2(4000);
V_ADD_INFO VARCHAR2(4000);
V_SENDER VARCHAR2(100) := 'DoNotReply@hhs.gov';
--V_TORECIPIENTS VARCHAR2(500) := 'Prabhjyot.Virdi@hhs.gov,Christina.Lehman@hhs.gov,Leo.Fox-rabinovitz@hhs.gov,Alexey.Gorokhov@hhs.gov,Mikhail.Yelovich@hhs.gov';
--V_TORECIPIENTS VARCHAR2(500) := 'Prabhjyot.Virdi@hhs.gov';
V_SUBJECT VARCHAR2(2000);
V_ERROR_DETAILS VARCHAR2(8000);
V_ENV VARCHAR2(10) := 'DEV';
V_BODY CLOB;
TYPE recipientArrayType IS VARRAY(2) OF VARCHAR2(100);
V_TORECIPIENTS recipientArrayType;
V_RECIPIENT_COUNT NUMBER(10);
BEGIN

V_TORECIPIENTS := recipientArrayType('Prabhjyot.Virdi@hhs.gov','Christina.Lehman@hhs.gov');
V_RECIPIENT_COUNT := V_TORECIPIENTS.COUNT;

      --fetch job status
      SELECT 
        STATUS, 
        ERROR#, 
        ERRORS, 
        ADDITIONAL_INFO
      INTO 
        V_STATUS, 
        V_ORACLE_ERROR_CODE, 
        V_ERRORS, 
        V_ADD_INFO
      FROM ALL_SCHEDULER_JOB_RUN_DETAILS 
      WHERE JOB_NAME IN (V_JOB_NAME)
      AND TRUNC(CAST(LOG_DATE AS DATE)) = TRUNC(SYSDATE);
      
      V_SUBJECT := TO_CHAR(SYSDATE, 'DD-Mon-YYYY') || ' - Time to Hire Weekly Data Import Job ' || V_STATUS || ' [' || V_ENV || ']';
         		
      V_BODY := 'The batch job ' || V_JOB_NAME || ' completed with the following status: [' || V_STATUS || '].' ;
      
      IF (V_ORACLE_ERROR_CODE > 0) THEN
        IF (V_ERRORS IS NOT NULL AND V_ADD_INFO IS NOT NULL) THEN 
          V_ERROR_DETAILS := '[Error Code: ' || V_ORACLE_ERROR_CODE || ']: ' || V_ERRORS || '| [Additional Information]: ' || V_ADD_INFO;
        ELSIF (V_ERRORS IS NOT NULL AND V_ADD_INFO IS NULL) THEN
          V_ERROR_DETAILS := '[Error Code: ' || V_ORACLE_ERROR_CODE || ']: ' || V_ERRORS;
        ELSIF (V_ERRORS IS NULL AND V_ADD_INFO IS NOT NULL) THEN
          V_ERROR_DETAILS := '[Additional Information]: ' || V_ADD_INFO;
        ELSE
          V_ERROR_DETAILS := '[Error Code: ' || V_ORACLE_ERROR_CODE ;
        END IF;
        
        V_BODY := 'The batch job ' || V_JOB_NAME || ' completed with the status: [' || V_STATUS || ']. ' || V_ERROR_DETAILS;
      END IF;

      --Send email notification to each recipient  
      FOR i IN 1 .. V_RECIPIENT_COUNT LOOP
      DBMS_OUTPUT.PUT_LINE(V_TORECIPIENTS(i));
        HHS_HR.SP_SEND_MAIL (V_TORECIPIENTS(i), '', '', V_SENDER, V_SUBJECT, V_BODY, '');
      END LOOP;
      --HHS_HR.SP_SEND_MAIL (V_TORECIPIENTS, '', '', V_SENDER, V_SUBJECT, V_BODY, '');      
 
END NOTIFY_JOB_MONITORS;
--------------------------------------------------------
--FUNCTION: FN_IMPORT_CMS_TTH_WEEKLY_DATA
--DESCRIPTION: Entry point for this package,calls individual 
--procedure run INSERT scrip inside the procedure. It will
-- return and error code and message if any. This function
--will be called by spring batch.
--------------------------------------------------------
FUNCTION FN_IMPORT_CMS_TTH_WEEKLY_DATA
RETURN VARCHAR2
AS
BEGIN
        INSERT_CMS_TTH_WEEKLY_DATA(); 
        NOTIFY_JOB_MONITORS();
RETURN ERROR_LOG();
END FN_IMPORT_CMS_TTH_WEEKLY_DATA;
 
--------------------------------------------------------
--PROCEDURE: ERROR_LOG
--DESCRIPTION: Return SQLCODE and SQLERRM
--------------------------------------------------------
FUNCTION ERROR_LOG
RETURN VARCHAR2
IS
        ERR_CODE   PLS_INTEGER        :=SQLCODE;
        ERR_MSG    VARCHAR2(32767)    := SQLERRM;
BEGIN
        RETURN ERR_CODE ||' : ' ||ERR_MSG;
END ERROR_LOG;
 
END CMS_TTH_WEEKLY_DATA_PKS;